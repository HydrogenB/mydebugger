{"version":3,"mappings":"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","names":["f","require$$0","k","l","m","n","p","q","c","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","client","SecurityIcon","className","jsx","EncodingIcon","TestingIcon","UtilitiesIcon","jsxs","ConversionIcon","FormattersIcon","JwtIcon","UrlIcon","HeadersIcon","RegexIcon","DnsIcon","QrCodeIcon","ClickJackingIcon","LinkTracerIcon","categories","toolRegistry","lazy","__vitePreload","getToolByRoute","route","tool","getToolById","id","getRelatedTools","toolId","relatedId","getPopularTools","getNewTools","getAllTools","getAllCategories","categorySet","icons","getIcon","name","Button","forwardRef","children","variant","size","radius","fullWidth","icon","rightIcon","iconPosition","isLoading","loadingText","elevated","active","disabled","type","rest","ref","baseClasses","radiusClasses","sizeClasses","shadowClass","getVariantClasses","color","activeClass","widthClass","disabledClass","buttonClasses","getSpinnerSize","spinner","processIcon","iconProp","processedIcon","processedRightIcon","Fragment","ThemeContext","createContext","ThemeProvider","defaultTheme","defaultColorScheme","storageKey","theme","setThemeState","useState","colorScheme","setColorSchemeState","isDark","setIsDark","useEffect","root","mediaQuery","handleChange","setTheme","newTheme","setColorScheme","newColorScheme","toggleTheme","useTheme","context","useContext","ThemeToggle","showLabel","label","TextInput","helperText","error","startAdornment","endAdornment","clearable","success","required","containerClassName","labelClassName","value","defaultValue","onClear","showCharCount","maxLength","inputValue","setInputValue","_a","handleClear","syntheticEvent","containerClasses","labelClasses","inputWrapperClasses","adornmentClasses","startAdornmentClasses","endAdornmentClasses","clearButtonClasses","helperTextClasses","charCountClasses","Header","allCategories","mobileMenuOpen","setMobileMenuOpen","toggleMobileMenu","Link","category","CategoryIcon","Card","title","subtitle","footer","padded","bordered","shadowed","actions","hoverable","loading","image","onClick","href","isElevated","isInteractive","cardClasses","WrapperComponent","handleClick","wrapperProps","CardHeader","divider","CardBody","CardFooter","align","alignmentClasses","ResponsiveContainer","maxWidth","centered","padding","withGutter","Component","maxWidthClasses","paddingClasses","gutterClass","LoadingSpinner","fullScreen","globalStyle","styleEl","RelatedTools","module","ToolLayout","showHeader","showDescription","showRelatedTools","description","metadata","pageTitle","pageDescription","Helmet","Suspense","Footer","Badge","dot","inline","pulse","pill","max","invisible","finalVariant","content","variantClasses","positionClasses","shapeClasses","animationClasses","badgeClasses","maxWidthClass","paddingClass","Home","searchQuery","setSearchQuery","activeFilter","setActiveFilter","allTools","popularTools","newTools","filteredTools","matchesSearch","keyword","matchesFilter","FilterTab","ToolCard","isActive","count","highlight","Icon","isNew","isBeta","NotFound","App","BrowserRouter","Routes","Route","ReactDOM","React"],"sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../src/design-system/icons/tool-icons.tsx","../../src/tools/index.ts","../../src/design-system/icons/index.ts","../../src/design-system/components/inputs/Button.tsx","../../src/design-system/context/ThemeContext.tsx","../../src/design-system/components/inputs/ThemeToggle.tsx","../../src/design-system/components/inputs/TextInput.tsx","../../src/design-system/components/inputs/Form.tsx","../../src/layout/Header.tsx","../../src/design-system/components/layout/Card.tsx","../../src/design-system/components/layout/ResponsiveContainer.tsx","../../src/design-system/components/feedback/LoadingSpinner.tsx","../../src/design-system/components/feedback/Toast.tsx","../../src/design-system/components/layout/ToolLayout.tsx","../../src/layout/Footer.tsx","../../src/design-system/components/display/Badge.tsx","../../src/pages/Home.tsx","../../src/pages/NotFound.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import React from 'react';\r\n\r\n// Tool icon components for the application\r\n// These are React components instead of emoji characters because they need to be more complex\r\n\r\nexport interface IconProps {\r\n  className?: string;\r\n}\r\n\r\n// Category Icons\r\nexport const SecurityIcon: React.FC<IconProps> = ({ className }) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\" />\r\n  </svg>\r\n);\r\n\r\nexport const EncodingIcon: React.FC<IconProps> = ({ className }) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\r\n  </svg>\r\n);\r\n\r\nexport const TestingIcon: React.FC<IconProps> = ({ className }) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z\" />\r\n  </svg>\r\n);\r\n\r\nexport const UtilitiesIcon: React.FC<IconProps> = ({ className }) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n  </svg>\r\n);\r\n\r\nexport const ConversionIcon: React.FC<IconProps> = ({ className }) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7h12m0 0l-4-4m4 4l-4 4m0 6H4m0 0l4 4m-4-4l4-4\" />\r\n  </svg>\r\n);\r\n\r\nexport const FormattersIcon: React.FC<IconProps> = ({ className }) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 10h16M4 14h16M4 18h16\" />\r\n  </svg>\r\n);\r\n\r\n// Tool-specific Icons\r\nexport const JwtIcon: React.FC<IconProps> = ({ className }) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z\" />\r\n  </svg>\r\n);\r\n\r\nexport const UrlIcon: React.FC<IconProps> = ({ className }) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1\" />\r\n  </svg>\r\n);\r\n\r\nexport const HeadersIcon: React.FC<IconProps> = ({ className }) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n  </svg>\r\n);\r\n\r\nexport const RegexIcon: React.FC<IconProps> = ({ className }) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 6l3 1m0 0l-3 9a5.002 5.002 0 006.001 0M6 7l3 9M6 7l6-2m6 2l3-1m-3 1l-3 9a5.002 5.002 0 006.001 0M18 7l3 9m-3-9l-6-2m0-2v2m0 16V5m0 16H9m3 0h3\" />\r\n  </svg>\r\n);\r\n\r\nexport const DnsIcon: React.FC<IconProps> = ({ className }) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9\" />\r\n  </svg>\r\n);\r\n\r\nexport const QrCodeIcon: React.FC<IconProps> = ({ className }) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v1m6 11h2m-6 0h-2v4m0-11v3m0 0h.01M12 12h4.01M16 20h4M4 12h4m12 0h.01M5 8h2a1 1 0 001-1V5a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1zm12 0h2a1 1 0 001-1V5a1 1 0 00-1-1h-2a1 1 0 00-1 1v2a1 1 0 001 1zM5 20h2a1 1 0 001-1v-2a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1z\" />\r\n  </svg>\r\n);\r\n\r\nexport const ClickJackingIcon: React.FC<IconProps> = ({ className }) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636\" />\r\n  </svg>\r\n);\r\n\r\nexport const LinkTracerIcon: React.FC<IconProps> = ({ className }) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" className={className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01\" />\r\n  </svg>\r\n);","import { lazy } from 'react';\r\n\r\n// Tool category types - Expanded with more specific categories\r\nexport type ToolCategory = \r\n  | 'Encoding' \r\n  | 'Security' \r\n  | 'Testing' \r\n  | 'Utilities' \r\n  | 'Conversion' \r\n  | 'Formatters';\r\n\r\n// Icons for tools and categories\r\nexport interface IconProps {\r\n  className?: string;\r\n}\r\n\r\n// Component interfaces\r\nexport interface ToolIcon {\r\n  name: string;\r\n  component: React.FC<IconProps>;\r\n}\r\n\r\n// Tool interface definition with expanded properties for better UX\r\nexport interface Tool {\r\n  id: string;               // Unique identifier\r\n  route: string;            // URL route\r\n  title: string;            // Display title\r\n  description: string;      // Short description\r\n  longDescription?: string; // Extended description for tool page\r\n  component: React.LazyExoticComponent<React.ComponentType<any>>;\r\n  category: ToolCategory;\r\n  icon: React.FC<IconProps>; // Icon component\r\n  isNew?: boolean;          // Flag for new tools\r\n  isBeta?: boolean;         // Flag for beta tools\r\n  isPopular?: boolean;      // Flag for popular tools\r\n  metadata: {\r\n    keywords: string[];\r\n    learnMoreUrl?: string;\r\n    relatedTools?: string[]; // IDs of related tools\r\n  };\r\n  uiOptions?: {\r\n    theme?: 'light' | 'dark' | 'system'; // Tool-specific theme\r\n    fullWidth?: boolean;      // Whether tool uses full width\r\n    showExamples?: boolean;   // Whether to show examples\r\n  };\r\n}\r\n\r\n// Import icons from design system\r\nimport { \r\n  SecurityIcon, \r\n  EncodingIcon, \r\n  TestingIcon, \r\n  UtilitiesIcon, \r\n  ConversionIcon,\r\n  FormattersIcon,\r\n  JwtIcon,\r\n  UrlIcon, \r\n  HeadersIcon,\r\n  RegexIcon,\r\n  DnsIcon,\r\n  QrCodeIcon,\r\n  ClickJackingIcon,\r\n  LinkTracerIcon\r\n} from '../design-system/icons/tool-icons';\r\n\r\n// Category definitions with icons for consistent UI\r\nexport const categories: Record<ToolCategory, { icon: React.FC<IconProps>, description: string }> = {\r\n  'Encoding': { \r\n    icon: EncodingIcon,\r\n    description: 'Transform data between different encoding formats'\r\n  },\r\n  'Security': { \r\n    icon: SecurityIcon,\r\n    description: 'Tools for security testing, token validation, and encryption'\r\n  },\r\n  'Testing': { \r\n    icon: TestingIcon,\r\n    description: 'Validate and test various network configurations and responses'\r\n  },\r\n  'Utilities': { \r\n    icon: UtilitiesIcon,\r\n    description: 'General purpose developer utilities'\r\n  },\r\n  'Conversion': { \r\n    icon: ConversionIcon,\r\n    description: 'Convert between different data formats'\r\n  },\r\n  'Formatters': { \r\n    icon: FormattersIcon,\r\n    description: 'Format and prettify code and data'\r\n  }\r\n};\r\n\r\n// Tool registry - central list of all available tools\r\n// This drives routes, homepage, SEO, and navigation\r\nconst toolRegistry: Tool[] = [\r\n  {\r\n    id: 'jwt-toolkit',\r\n    route: '/jwt',\r\n    title: 'JWT Toolkit',\r\n    description: 'Comprehensive toolkit for JWT: decode, build, inspect, verify and benchmark tokens.',\r\n    longDescription: 'Complete JWT toolkit for developers: decode, create, inspect, verify and benchmark JSON Web Tokens with security analysis and JWKS support.',\r\n    icon: JwtIcon,\r\n    component: lazy(() => import('./jwt/JwtToolkit')),\r\n    category: 'Security',\r\n    isPopular: true,\r\n    isNew: true,\r\n    metadata: {\r\n      keywords: ['jwt', 'token', 'generator', 'decoder', 'verification', 'json web token', 'authentication', 'verify', 'jwks', 'security analysis', 'jwt inspector', 'jwt benchmark'],\r\n      learnMoreUrl: 'https://jwt.io/introduction',\r\n      relatedTools: ['url-encoder', 'headers-analyzer'],\r\n    },\r\n    uiOptions: {\r\n      showExamples: true\r\n    }\r\n  },\r\n  {\r\n    id: 'url-encoder',\r\n    route: '/url-encoder',\r\n    title: 'URL Encoder/Decoder',\r\n    description: 'Encode or decode URL components safely.',\r\n    icon: UrlIcon,\r\n    component: lazy(() => import('./url/UrlEncoder')),\r\n    category: 'Encoding',\r\n    isPopular: true,\r\n    metadata: {\r\n      keywords: ['url', 'encoding', 'decoding', 'uri', 'querystring'],\r\n      learnMoreUrl: 'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent',\r\n      relatedTools: ['jwt-toolkit'],\r\n    },\r\n    uiOptions: {\r\n      showExamples: true\r\n    }\r\n  },\r\n  {\r\n    id: 'headers-analyzer',\r\n    route: '/headers',\r\n    title: 'HTTP Headers Analyzer',\r\n    description: 'Analyze and understand HTTP request/response headers.',\r\n    icon: HeadersIcon,\r\n    component: lazy(() => import('./headers/HeadersAnalyzer')),\r\n    category: 'Testing',\r\n    isBeta: true,\r\n    metadata: {\r\n      keywords: ['http', 'headers', 'request', 'response', 'analyze'],\r\n      learnMoreUrl: 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers',\r\n      relatedTools: ['jwt-toolkit', 'url-encoder', 'clickjacking-validator'],\r\n    }\r\n  },\r\n  {\r\n    id: 'regex-tester',\r\n    route: '/regex',\r\n    title: 'Regex Tester',\r\n    description: 'Test and debug regular expressions with real-time matching.',\r\n    icon: RegexIcon,\r\n    component: lazy(() => import('./regex/RegexTester')),\r\n    category: 'Utilities',\r\n    isBeta: true,\r\n    metadata: {\r\n      keywords: ['regex', 'regular expression', 'pattern', 'test', 'match'],\r\n      learnMoreUrl: 'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions',\r\n      relatedTools: ['url-encoder'],\r\n    },\r\n    uiOptions: {\r\n      showExamples: false\r\n    }\r\n  },\r\n  {\r\n    id: 'dns-lookup',\r\n    route: '/dns-check',\r\n    title: 'DNS Lookup Tool',\r\n    description: 'Query DNS records for any domain name.',\r\n    icon: DnsIcon,\r\n    component: lazy(() => import('./dns/DnsLookup')),\r\n    category: 'Testing',\r\n    isBeta: true,\r\n    metadata: {\r\n      keywords: ['dns', 'lookup', 'domain', 'nameserver', 'records'],\r\n      learnMoreUrl: 'https://www.cloudflare.com/learning/dns/what-is-dns/',\r\n      relatedTools: ['headers-analyzer'],\r\n    }\r\n  },\r\n  {\r\n    id: 'qrcode-generator',\r\n    route: '/qrcode',\r\n    title: 'Deep-Link Tester & QR Generator',\r\n    description: 'Generate QR codes for any link or deeplink, test them directly and share with your team.',\r\n    icon: QrCodeIcon,\r\n    component: lazy(() => import('./qrcode/QRCodeGenerator')),\r\n    category: 'Utilities',\r\n    isPopular: true,\r\n    metadata: {\r\n      keywords: ['qr code', 'qrcode', 'generator', 'scanner', 'mobile', 'deeplink', 'app link', 'url testing'],\r\n      learnMoreUrl: 'https://en.wikipedia.org/wiki/QR_code',\r\n      relatedTools: ['url-encoder', 'headers-analyzer'],\r\n    },\r\n    uiOptions: {\r\n      showExamples: true\r\n    }\r\n  },\r\n  {\r\n    id: 'clickjacking-validator',\r\n    route: '/clickjacking',\r\n    title: 'Click Jacking Validator',\r\n    description: 'Check if websites are vulnerable to click jacking attacks by analyzing headers and iframe loading.',\r\n    icon: ClickJackingIcon,\r\n    component: lazy(() => import('./clickjacking/ClickJackingValidator')),\r\n    category: 'Security',\r\n    isNew: true,\r\n    metadata: {\r\n      keywords: ['clickjacking', 'security', 'x-frame-options', 'csp', 'iframe', 'vulnerability', 'content-security-policy', 'frame-ancestors'],\r\n      learnMoreUrl: 'https://owasp.org/www-community/attacks/Clickjacking',\r\n      relatedTools: ['headers-analyzer', 'jwt-toolkit'],\r\n    },\r\n    uiOptions: {\r\n      showExamples: false\r\n    }\r\n  },\r\n  {\r\n    id: 'link-tracer',\r\n    route: '/link-tracer',\r\n    title: 'Link Tracer',\r\n    description: 'Trace the complete redirect path of any URL, showing each hop, status code and latency.',\r\n    icon: LinkTracerIcon,\r\n    component: lazy(() => import('./linktracer/LinkTracer')),\r\n    category: 'Testing',\r\n    isNew: true,\r\n    metadata: {\r\n      keywords: ['redirect', 'trace', 'url', 'link', 'shortened url', 'redirect chain', 'http status', 'redirect checker'],\r\n      learnMoreUrl: 'https://developer.mozilla.org/en-US/docs/Web/HTTP/Redirections',\r\n      relatedTools: ['headers-analyzer', 'url-encoder'],\r\n    },\r\n    uiOptions: {\r\n      showExamples: false\r\n    }\r\n  },\r\n  {\r\n    id: 'device-trace',\r\n    route: '/device-trace',\r\n    title: 'Dynamic-Link Probe',\r\n    description: 'Test how App Flyer/OneLink URLs behave across different device contexts and installation states.',\r\n    icon: LinkTracerIcon, // Reusing the same icon for now\r\n    component: lazy(() => import('./linktracer/DeviceTrace')),\r\n    category: 'Testing',\r\n    isNew: true,\r\n    metadata: {\r\n      keywords: ['app flyer', 'one link', 'dynamic link', 'deep link', 'device probe', 'app store', 'play store', 'universal link'],\r\n      learnMoreUrl: 'https://support.appsflyer.com/hc/en-us/articles/207032366-OneLink-overview',\r\n      relatedTools: ['link-tracer', 'headers-analyzer'],\r\n    },\r\n    uiOptions: {\r\n      showExamples: false\r\n    }\r\n  },\r\n  {\r\n    id: 'components-demo',\r\n    route: '/components-demo',\r\n    title: 'Components Demo',\r\n    description: 'Showcase of various UI components and their usage.',\r\n    icon: UtilitiesIcon,\r\n    component: lazy(() => import('./components-demo/ComponentsDemo')),\r\n    category: 'Utilities',\r\n    isNew: true,\r\n    metadata: {\r\n      keywords: ['components', 'demo', 'ui', 'showcase'],\r\n      learnMoreUrl: 'https://reactjs.org/docs/components-and-props.html',\r\n      relatedTools: [],\r\n    },\r\n    uiOptions: {\r\n      showExamples: true\r\n    }\r\n  },\r\n];\r\n\r\nexport default toolRegistry;\r\n\r\n// Helper functions to work with the tool registry\r\nexport const getToolByRoute = (route: string): Tool | undefined => {\r\n  return toolRegistry.find(tool => tool.route === route);\r\n};\r\n\r\nexport const getToolById = (id: string): Tool | undefined => {\r\n  return toolRegistry.find(tool => tool.id === id);\r\n};\r\n\r\nexport const getToolsByCategory = (category: ToolCategory): Tool[] => {\r\n  return toolRegistry.filter(tool => tool.category === category);\r\n};\r\n\r\nexport const getRelatedTools = (toolId: string): Tool[] => {\r\n  const tool = getToolById(toolId);\r\n  if (!tool || !tool.metadata.relatedTools) return [];\r\n  \r\n  return tool.metadata.relatedTools\r\n    .map(relatedId => getToolById(relatedId))\r\n    .filter((tool): tool is Tool => tool !== undefined);\r\n};\r\n\r\nexport const getPopularTools = (): Tool[] => {\r\n  return toolRegistry.filter(tool => tool.isPopular);\r\n};\r\n\r\nexport const getNewTools = (): Tool[] => {\r\n  return toolRegistry.filter(tool => tool.isNew);\r\n};\r\n\r\nexport const getBetaTools = (): Tool[] => {\r\n  return toolRegistry.filter(tool => tool.isBeta);\r\n};\r\n\r\nexport const getAllTools = (): Tool[] => {\r\n  return toolRegistry;\r\n};\r\n\r\nexport const getAllCategories = (): ToolCategory[] => {\r\n  const categorySet = new Set<ToolCategory>();\r\n  toolRegistry.forEach(tool => categorySet.add(tool.category));\r\n  return Array.from(categorySet);\r\n};","// Emoji-based icon system\r\n// This provides a consistent set of icons using emojis\r\n\r\nexport type IconName = \r\n  // UI icons\r\n  | 'close' \r\n  | 'check'\r\n  | 'info'\r\n  | 'warning'\r\n  | 'error'\r\n  | 'success'\r\n  | 'add'\r\n  | 'remove'\r\n  | 'edit'\r\n  | 'delete'\r\n  | 'search'\r\n  | 'settings'\r\n  | 'menu'\r\n  | 'user'\r\n  | 'home'\r\n  | 'calendar'\r\n  | 'clock'\r\n  | 'star'\r\n  | 'heart'\r\n  | 'lock'\r\n  | 'unlock'\r\n  | 'download'\r\n  | 'upload'\r\n  | 'refresh'\r\n  | 'arrow-up'\r\n  | 'arrow-down'\r\n  | 'arrow-left'\r\n  | 'arrow-right'\r\n  | 'sun'\r\n  | 'moon'\r\n  | 'xMark' // Added for Toast error icon\r\n  // Domain-specific icons\r\n  | 'security'\r\n  | 'database'\r\n  | 'network'\r\n  | 'web'\r\n  | 'code'\r\n  | 'api'\r\n  | 'test'\r\n  | 'bug'\r\n  | 'link'\r\n  | 'document';\r\n\r\nconst icons: Record<IconName, string> = {\r\n  // UI icons\r\n  'close': '✖️',\r\n  'check': '✓',\r\n  'info': 'ℹ️',\r\n  'warning': '⚠️',\r\n  'error': '❌',\r\n  'success': '✅',\r\n  'add': '➕',\r\n  'remove': '➖',\r\n  'edit': '✏️',\r\n  'delete': '🗑️',\r\n  'search': '🔍',\r\n  'settings': '⚙️',\r\n  'menu': '☰',\r\n  'user': '👤',\r\n  'home': '🏠',\r\n  'calendar': '📅',\r\n  'clock': '🕒',\r\n  'star': '⭐',\r\n  'heart': '❤️',\r\n  'lock': '🔒',\r\n  'unlock': '🔓',\r\n  'download': '⬇️',\r\n  'upload': '⬆️',\r\n  'refresh': '🔄',\r\n  'arrow-up': '↑',\r\n  'arrow-down': '↓',\r\n  'arrow-left': '←',\r\n  'arrow-right': '→',\r\n  'sun': '☀️',\r\n  'moon': '🌙',\r\n  'xMark': '❌', // Added for Toast error icon (using the same emoji as 'error' for consistency)\r\n  // Domain-specific icons\r\n  'security': '🔐',\r\n  'database': '🗄️',\r\n  'network': '🌐',\r\n  'web': '🕸️',\r\n  'code': '🧩',\r\n  'api': '🔌',\r\n  'test': '🧪',\r\n  'bug': '🐞',\r\n  'link': '🔗',\r\n  'document': '📄'\r\n};\r\n\r\n/**\r\n * Get an emoji icon by name\r\n * @param name Name of the icon to retrieve\r\n * @returns The corresponding emoji\r\n */\r\nexport const getIcon = (name: IconName): string => {\r\n  return icons[name] || '❓';\r\n};\r\n\r\n// Helper types for component props that accept icons\r\nexport type IconProp = IconName | React.ReactNode;\r\n\r\n/**\r\n * Process an icon prop that could be either an emoji name or a React node\r\n * @param icon The icon prop to process\r\n * @returns The processed icon as a React node\r\n */\r\nexport const processIconProp = (icon: IconProp): React.ReactNode => {\r\n  if (typeof icon === 'string') {\r\n    return getIcon(icon as IconName);\r\n  }\r\n  return icon;\r\n};","import React, { ReactNode, ButtonHTMLAttributes, forwardRef } from 'react';\r\nimport { getIcon } from '../../icons';\r\nimport { getColor } from '../../foundations/colors';\r\n\r\nexport type ButtonVariant = \r\n  | 'primary' \r\n  | 'secondary' \r\n  | 'success' \r\n  | 'danger' \r\n  | 'warning' \r\n  | 'info' \r\n  | 'light' \r\n  | 'dark'\r\n  | 'ghost'\r\n  | 'outline-primary'\r\n  | 'outline-secondary'\r\n  | 'outline-success'\r\n  | 'outline-danger'\r\n  | 'outline-warning'\r\n  | 'outline-info'\r\n  | 'outline-light'\r\n  | 'outline-dark'\r\n  | 'text-primary'\r\n  | 'text-secondary'\r\n  | 'text-success' \r\n  | 'text-danger'\r\n  | 'text-warning'\r\n  | 'text-info';\r\n\r\nexport type ButtonSize = 'xs' | 'sm' | 'md' | 'lg' | 'xl';\r\nexport type ButtonRadius = 'none' | 'sm' | 'md' | 'lg' | 'full';\r\n\r\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n  /** The content of the button */\r\n  children: ReactNode;\r\n  /** The visual style variant of the button */\r\n  variant?: ButtonVariant;\r\n  /** The size of the button */\r\n  size?: ButtonSize;\r\n  /** Border radius of the button */\r\n  radius?: ButtonRadius;\r\n  /** Whether the button should take the full width of its container */\r\n  fullWidth?: boolean;\r\n  /** Element displayed to the left of children or icon name from emoji icon system */\r\n  icon?: ReactNode | string;\r\n  /** Element displayed to the right of children or icon name from emoji icon system */\r\n  rightIcon?: ReactNode | string;\r\n  /** Position of the icon when only one icon is provided */\r\n  iconPosition?: 'left' | 'right';\r\n  /** Whether the button is in a loading state */\r\n  isLoading?: boolean;\r\n  /** Text to display when button is loading */\r\n  loadingText?: string;\r\n  /** Whether the button is elevated with a shadow */\r\n  elevated?: boolean;\r\n  /** Whether the button is active (pressed/selected) */\r\n  active?: boolean;\r\n}\r\n\r\n/**\r\n * Button - A versatile interactive component for triggering actions or navigation\r\n * \r\n * @description\r\n * Buttons allow users to take actions and make choices with a single tap.\r\n * They communicate actions that users can take and are typically placed\r\n * in dialogs, forms, cards, and toolbars. Buttons can be customized with\r\n * various visual styles, sizes, icons, and states to match design requirements.\r\n * \r\n * @accessibility\r\n * - Uses native button element for proper keyboard navigation and focus management\r\n * - Includes ARIA attributes when in loading or disabled states\r\n * - Maintains proper focus states with visible focus rings\r\n * - Preserves contrast ratios between text and background colors\r\n * - Disabled state is visually distinct and indicated to screen readers\r\n * - Loading state provides visual feedback and prevents multiple submissions\r\n * - Respects reduced motion preferences for animations\r\n * \r\n * @example\r\n * ```tsx\r\n * // Basic button\r\n * <Button>Click me</Button>\r\n * \r\n * // Button with variant and icon\r\n * <Button variant=\"success\" icon=\"check\">\r\n *   Confirm\r\n * </Button>\r\n * \r\n * // Outline variant with right icon\r\n * <Button \r\n *   variant=\"outline-primary\" \r\n *   rightIcon=\"arrow-right\"\r\n * >\r\n *   Next Step\r\n * </Button>\r\n * \r\n * // Full width button with loading state\r\n * <Button \r\n *   variant=\"primary\" \r\n *   fullWidth\r\n *   isLoading={isSubmitting}\r\n *   loadingText=\"Submitting...\"\r\n *   onClick={handleSubmit}\r\n * >\r\n *   Submit Form\r\n * </Button>\r\n * ```\r\n */\r\nexport const Button = forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({\r\n    children,\r\n    variant = 'primary',\r\n    size = 'md',\r\n    radius = 'md',\r\n    fullWidth = false,\r\n    icon,\r\n    rightIcon,\r\n    iconPosition = 'left',\r\n    isLoading = false,\r\n    loadingText = 'Loading...',\r\n    elevated = false,\r\n    active = false,\r\n    className = '',\r\n    disabled,\r\n    type = 'button',\r\n    ...rest\r\n  }, ref) => {\r\n    // Base classes\r\n    const baseClasses = 'inline-flex items-center justify-center font-medium transition-all duration-200 motion-reduce:transition-none focus:outline-none';\r\n    \r\n    // Border radius classes\r\n    const radiusClasses = {\r\n      none: 'rounded-none',\r\n      sm: 'rounded-sm',\r\n      md: 'rounded-md',\r\n      lg: 'rounded-lg',\r\n      full: 'rounded-full',\r\n    };\r\n    \r\n    // Size classes\r\n    const sizeClasses = {\r\n      xs: 'px-2 py-1 text-xs gap-1.5',\r\n      sm: 'px-3 py-1.5 text-sm gap-1.5',\r\n      md: 'px-4 py-2 text-base gap-2',\r\n      lg: 'px-5 py-2.5 text-lg gap-2',\r\n      xl: 'px-6 py-3 text-xl gap-3',\r\n    };\r\n\r\n    // Shadow classes with transition\r\n    const shadowClass = elevated ? 'shadow-md hover:shadow-lg transition-shadow duration-200 motion-reduce:transition-none' : '';\r\n    \r\n    // Generate the appropriate class for the button variant\r\n    const getVariantClasses = (variant: ButtonVariant) => {\r\n      // Base solid variants\r\n      if (variant === 'primary') {\r\n        return 'bg-blue-600 hover:bg-blue-700 text-white focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500 active:bg-blue-800 active:scale-[0.98] transition-transform duration-100 motion-reduce:transform-none';\r\n      }\r\n      if (variant === 'secondary') {\r\n        return 'bg-gray-500 hover:bg-gray-600 text-white focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-gray-500 active:bg-gray-700 active:scale-[0.98] transition-transform duration-100 motion-reduce:transform-none';\r\n      }\r\n      if (variant === 'success') {\r\n        return 'bg-green-600 hover:bg-green-700 text-white focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-green-500 active:bg-green-800 active:scale-[0.98] transition-transform duration-100 motion-reduce:transform-none';\r\n      }\r\n      if (variant === 'danger') {\r\n        return 'bg-red-600 hover:bg-red-700 text-white focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-red-500 active:bg-red-800 active:scale-[0.98] transition-transform duration-100 motion-reduce:transform-none';\r\n      }\r\n      if (variant === 'warning') {\r\n        return 'bg-yellow-500 hover:bg-yellow-600 text-white focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-yellow-500 active:bg-yellow-700 active:scale-[0.98] transition-transform duration-100 motion-reduce:transform-none';\r\n      }\r\n      if (variant === 'info') {\r\n        return 'bg-cyan-500 hover:bg-cyan-600 text-white focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-cyan-500 active:bg-cyan-700 active:scale-[0.98] transition-transform duration-100 motion-reduce:transform-none';\r\n      }\r\n      if (variant === 'light') {\r\n        return 'bg-gray-100 hover:bg-gray-200 text-gray-800 focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-gray-300 active:bg-gray-300 active:scale-[0.98] transition-transform duration-100 motion-reduce:transform-none';\r\n      }\r\n      if (variant === 'dark') {\r\n        return 'bg-gray-800 hover:bg-gray-900 text-white focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-gray-700 active:bg-black active:scale-[0.98] transition-transform duration-100 motion-reduce:transform-none';\r\n      }\r\n      if (variant === 'ghost') {\r\n        return 'bg-transparent hover:bg-gray-100 text-gray-700 dark:text-gray-300 dark:hover:bg-gray-800 focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-gray-500 active:bg-gray-200 dark:active:bg-gray-700 active:scale-[0.98] transition-transform duration-100 motion-reduce:transform-none';\r\n      }\r\n\r\n      // Outline variants\r\n      if (variant.startsWith('outline-')) {\r\n        const color = variant.split('-')[1];\r\n        if (color === 'primary') {\r\n          return 'border-2 border-blue-600 text-blue-600 hover:bg-blue-50 dark:hover:bg-blue-950 dark:hover:bg-opacity-30 focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500 active:bg-blue-100 dark:border-blue-500 dark:text-blue-400 active:scale-[0.98] transition-transform duration-100 motion-reduce:transform-none';\r\n        }\r\n        if (color === 'secondary') {\r\n          return 'border-2 border-gray-500 text-gray-500 hover:bg-gray-50 dark:hover:bg-gray-800 focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-gray-500 active:bg-gray-100 dark:active:bg-gray-700 dark:border-gray-500 dark:text-gray-400 active:scale-[0.98] transition-transform duration-100 motion-reduce:transform-none';\r\n        }\r\n        if (color === 'success') {\r\n          return 'border-2 border-green-600 text-green-600 hover:bg-green-50 dark:hover:bg-green-950 dark:hover:bg-opacity-30 focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-green-500 active:bg-green-100 dark:border-green-500 dark:text-green-400 active:scale-[0.98] transition-transform duration-100 motion-reduce:transform-none';\r\n        }\r\n        if (color === 'danger') {\r\n          return 'border-2 border-red-600 text-red-600 hover:bg-red-50 dark:hover:bg-red-950 dark:hover:bg-opacity-30 focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-red-500 active:bg-red-100 dark:border-red-500 dark:text-red-400 active:scale-[0.98] transition-transform duration-100 motion-reduce:transform-none';\r\n        }\r\n        if (color === 'warning') {\r\n          return 'border-2 border-yellow-500 text-yellow-600 hover:bg-yellow-50 dark:hover:bg-yellow-950 dark:hover:bg-opacity-30 focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-yellow-500 active:bg-yellow-100 dark:border-yellow-500 dark:text-yellow-400 active:scale-[0.98] transition-transform duration-100 motion-reduce:transform-none';\r\n        }\r\n        if (color === 'info') {\r\n          return 'border-2 border-cyan-500 text-cyan-600 hover:bg-cyan-50 dark:hover:bg-cyan-950 dark:hover:bg-opacity-30 focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-cyan-500 active:bg-cyan-100 dark:border-cyan-500 dark:text-cyan-400 active:scale-[0.98] transition-transform duration-100 motion-reduce:transform-none';\r\n        }\r\n        if (color === 'light') {\r\n          return 'border-2 border-gray-200 text-gray-500 hover:bg-gray-50 focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-gray-300 active:bg-gray-100 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-800 active:scale-[0.98] transition-transform duration-100 motion-reduce:transform-none';\r\n        }\r\n        if (color === 'dark') {\r\n          return 'border-2 border-gray-800 text-gray-800 hover:bg-gray-50 focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-gray-700 active:bg-gray-100 dark:border-gray-600 dark:text-gray-300 dark:hover:bg-gray-800 active:scale-[0.98] transition-transform duration-100 motion-reduce:transform-none';\r\n        }\r\n      }\r\n\r\n      // Text variants (no background, no border)\r\n      if (variant.startsWith('text-')) {\r\n        const color = variant.split('-')[1];\r\n        if (color === 'primary') {\r\n          return 'text-blue-600 hover:bg-blue-50 dark:text-blue-400 dark:hover:bg-blue-950 dark:hover:bg-opacity-30 focus-visible:ring-2 focus-visible:ring-blue-500 active:bg-blue-100 dark:active:bg-blue-900 active:scale-[0.98] transition-transform duration-100 motion-reduce:transform-none';\r\n        }\r\n        if (color === 'secondary') {\r\n          return 'text-gray-600 hover:bg-gray-50 dark:text-gray-400 dark:hover:bg-gray-800 focus-visible:ring-2 focus-visible:ring-gray-500 active:bg-gray-100 dark:active:bg-gray-700 active:scale-[0.98] transition-transform duration-100 motion-reduce:transform-none';\r\n        }\r\n        if (color === 'success') {\r\n          return 'text-green-600 hover:bg-green-50 dark:text-green-400 dark:hover:bg-green-950 dark:hover:bg-opacity-30 focus-visible:ring-2 focus-visible:ring-green-500 active:bg-green-100 dark:active:bg-green-900 active:scale-[0.98] transition-transform duration-100 motion-reduce:transform-none';\r\n        }\r\n        if (color === 'danger') {\r\n          return 'text-red-600 hover:bg-red-50 dark:text-red-400 dark:hover:bg-red-950 dark:hover:bg-opacity-30 focus-visible:ring-2 focus-visible:ring-red-500 active:bg-red-100 dark:active:bg-red-900 active:scale-[0.98] transition-transform duration-100 motion-reduce:transform-none';\r\n        }\r\n        if (color === 'warning') {\r\n          return 'text-yellow-600 hover:bg-yellow-50 dark:text-yellow-400 dark:hover:bg-yellow-950 dark:hover:bg-opacity-30 focus-visible:ring-2 focus-visible:ring-yellow-500 active:bg-yellow-100 dark:active:bg-yellow-900 active:scale-[0.98] transition-transform duration-100 motion-reduce:transform-none';\r\n        }\r\n        if (color === 'info') {\r\n          return 'text-cyan-600 hover:bg-cyan-50 dark:text-cyan-400 dark:hover:bg-cyan-950 dark:hover:bg-opacity-30 focus-visible:ring-2 focus-visible:ring-cyan-500 active:bg-cyan-100 dark:active:bg-cyan-900 active:scale-[0.98] transition-transform duration-100 motion-reduce:transform-none';\r\n        }\r\n      }\r\n\r\n      // Default to primary if variant is not recognized\r\n      return 'bg-blue-600 hover:bg-blue-700 text-white focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500 active:scale-[0.98] transition-transform duration-100 motion-reduce:transform-none';\r\n    };\r\n    \r\n    // Active state\r\n    const activeClass = active ? 'ring-2 ring-offset-2 ring-opacity-50' : '';\r\n    \r\n    // Width class\r\n    const widthClass = fullWidth ? 'w-full' : '';\r\n    \r\n    // Disabled class\r\n    const disabledClass = (disabled || isLoading) \r\n      ? 'opacity-60 cursor-not-allowed pointer-events-none' \r\n      : '';\r\n    \r\n    // Combine all classes\r\n    const buttonClasses = [\r\n      baseClasses,\r\n      radiusClasses[radius],\r\n      sizeClasses[size],\r\n      getVariantClasses(variant),\r\n      widthClass,\r\n      shadowClass,\r\n      activeClass,\r\n      disabledClass,\r\n      className\r\n    ].join(' ');\r\n\r\n    // Loading spinner with appropriate size\r\n    const getSpinnerSize = () => {\r\n      if (size === 'xs' || size === 'sm') return 'h-3.5 w-3.5';\r\n      if (size === 'md') return 'h-4 w-4';\r\n      if (size === 'lg') return 'h-5 w-5';\r\n      if (size === 'xl') return 'h-6 w-6';\r\n      return 'h-4 w-4';\r\n    };\r\n    \r\n    const spinner = (\r\n      <svg \r\n        className={`animate-spin motion-reduce:animate-[spin_1.5s_linear_infinite] ${size === 'xs' || size === 'sm' ? '-ml-0.5 mr-2' : '-ml-1 mr-2'} ${getSpinnerSize()}`} \r\n        xmlns=\"http://www.w3.org/2000/svg\" \r\n        fill=\"none\" \r\n        viewBox=\"0 0 24 24\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n        <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n      </svg>\r\n    );\r\n\r\n    // Process icons - convert string icon names to emoji icons\r\n    const processIcon = (iconProp: ReactNode | string | undefined): ReactNode => {\r\n      if (typeof iconProp === 'string') {\r\n        return <span className=\"inline-flex\">{getIcon(iconProp as any)}</span>;\r\n      }\r\n      return iconProp;\r\n    };\r\n\r\n    const processedIcon = processIcon(icon);\r\n    const processedRightIcon = processIcon(rightIcon);\r\n\r\n    return (\r\n      <button \r\n        ref={ref}\r\n        type={type}\r\n        className={buttonClasses}\r\n        disabled={disabled || isLoading}\r\n        aria-busy={isLoading ? \"true\" : undefined}\r\n        {...rest}\r\n      >\r\n        {isLoading ? (\r\n          <>\r\n            {spinner}\r\n            <span>{loadingText}</span>\r\n          </>\r\n        ) : (\r\n          <>\r\n            {(processedIcon && iconPosition === 'left') && (\r\n              <span className=\"inline-flex transition-transform duration-200 group-hover:translate-x-0.5 motion-reduce:transform-none\">\r\n                {processedIcon}\r\n              </span>\r\n            )}\r\n            {children}\r\n            {(processedRightIcon || (processedIcon && iconPosition === 'right')) && (\r\n              <span className=\"inline-flex transition-transform duration-200 group-hover:translate-x-0.5 motion-reduce:transform-none\">\r\n                {processedRightIcon || (iconPosition === 'right' ? processedIcon : null)}\r\n              </span>\r\n            )}\r\n          </>\r\n        )}\r\n      </button>\r\n    );\r\n  }\r\n);\r\n\r\nButton.displayName = 'Button';\r\n\r\nexport default Button;","import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\n\r\ntype ThemeType = 'light' | 'dark' | 'system';\r\ntype ColorScheme = 'blue' | 'purple' | 'green' | 'amber' | 'red' | 'gray';\r\n\r\ninterface ThemeContextType {\r\n  theme: ThemeType;\r\n  isDark: boolean;\r\n  colorScheme: ColorScheme;\r\n  setTheme: (theme: ThemeType) => void;\r\n  setColorScheme: (colorScheme: ColorScheme) => void;\r\n  toggleTheme: () => void;\r\n}\r\n\r\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\r\n\r\ninterface ThemeProviderProps {\r\n  children: ReactNode;\r\n  defaultTheme?: ThemeType;\r\n  defaultColorScheme?: ColorScheme;\r\n  storageKey?: string;\r\n}\r\n\r\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({\r\n  children,\r\n  defaultTheme = 'system',\r\n  defaultColorScheme = 'blue',\r\n  storageKey = 'ui-theme',\r\n}) => {\r\n  // Initialize state from localStorage or default values\r\n  const [theme, setThemeState] = useState<ThemeType>(() => {\r\n    const savedTheme = localStorage.getItem(`${storageKey}-mode`);\r\n    return (savedTheme as ThemeType) || defaultTheme;\r\n  });\r\n  \r\n  const [colorScheme, setColorSchemeState] = useState<ColorScheme>(() => {\r\n    const savedColorScheme = localStorage.getItem(`${storageKey}-color`);\r\n    return (savedColorScheme as ColorScheme) || defaultColorScheme;\r\n  });\r\n  \r\n  // Determine if dark mode is active\r\n  const [isDark, setIsDark] = useState<boolean>(() => {\r\n    if (theme === 'dark') return true;\r\n    if (theme === 'light') return false;\r\n    return window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n  });\r\n\r\n  // Apply theme to document\r\n  useEffect(() => {\r\n    const root = window.document.documentElement;\r\n    \r\n    // Update root element class\r\n    if (isDark) {\r\n      root.classList.add('dark');\r\n      root.classList.remove('light');\r\n    } else {\r\n      root.classList.add('light');\r\n      root.classList.remove('dark');\r\n    }\r\n    \r\n    // Apply color scheme\r\n    root.setAttribute('data-color-scheme', colorScheme);\r\n  }, [isDark, colorScheme]);\r\n\r\n  // Listen for system preference changes\r\n  useEffect(() => {\r\n    if (theme !== 'system') return;\r\n    \r\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\r\n    \r\n    const handleChange = () => {\r\n      setIsDark(mediaQuery.matches);\r\n    };\r\n    \r\n    mediaQuery.addEventListener('change', handleChange);\r\n    return () => mediaQuery.removeEventListener('change', handleChange);\r\n  }, [theme]);\r\n\r\n  // Theme setter function\r\n  const setTheme = (newTheme: ThemeType) => {\r\n    localStorage.setItem(`${storageKey}-mode`, newTheme);\r\n    setThemeState(newTheme);\r\n    \r\n    if (newTheme === 'system') {\r\n      setIsDark(window.matchMedia('(prefers-color-scheme: dark)').matches);\r\n    } else {\r\n      setIsDark(newTheme === 'dark');\r\n    }\r\n  };\r\n\r\n  // Color scheme setter function\r\n  const setColorScheme = (newColorScheme: ColorScheme) => {\r\n    localStorage.setItem(`${storageKey}-color`, newColorScheme);\r\n    setColorSchemeState(newColorScheme);\r\n  };\r\n\r\n  // Toggle between light and dark modes\r\n  const toggleTheme = () => {\r\n    if (isDark) {\r\n      setTheme('light');\r\n    } else {\r\n      setTheme('dark');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        theme,\r\n        isDark,\r\n        colorScheme,\r\n        setTheme,\r\n        setColorScheme,\r\n        toggleTheme,\r\n      }}\r\n    >\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook for consuming the theme context\r\nexport const useTheme = (): ThemeContextType => {\r\n  const context = useContext(ThemeContext);\r\n  \r\n  if (context === undefined) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  \r\n  return context;\r\n};\r\n\r\nexport default ThemeContext;","import React from 'react';\r\nimport { useTheme } from '../../context/ThemeContext';\r\nimport { Button } from './Button';\r\n\r\ninterface ThemeToggleProps {\r\n  className?: string;\r\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl';\r\n  showLabel?: boolean;\r\n}\r\n\r\n/**\r\n * ThemeToggle - A button component that toggles between light and dark modes\r\n */\r\nexport const ThemeToggle: React.FC<ThemeToggleProps> = ({\r\n  className = '',\r\n  size = 'md',\r\n  showLabel = false,\r\n}) => {\r\n  const { isDark, toggleTheme } = useTheme();\r\n  \r\n  const icon = isDark ? 'sun' : 'moon';\r\n  const label = isDark ? 'Light mode' : 'Dark mode';\r\n\r\n  return (\r\n    <Button\r\n      variant=\"ghost\"\r\n      icon={icon}\r\n      size={size}\r\n      onClick={toggleTheme}\r\n      aria-label={label}\r\n      className={className}\r\n    >\r\n      {showLabel ? label : ''}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ThemeToggle;","import React, { InputHTMLAttributes, ReactNode, forwardRef, useState } from 'react';\r\n\r\nexport type TextInputSize = 'sm' | 'md' | 'lg';\r\nexport type TextInputVariant = 'default' | 'filled' | 'outlined' | 'underlined';\r\n\r\nexport interface TextInputProps extends Omit<InputHTMLAttributes<HTMLInputElement>, 'size'> {\r\n  /** Label text displayed above the input */\r\n  label?: string;\r\n  /** Helper text displayed below the input */\r\n  helperText?: string;\r\n  /** Error message displayed below the input */\r\n  error?: string;\r\n  /** Size of the input */\r\n  size?: TextInputSize;\r\n  /** Visual style variant */\r\n  variant?: TextInputVariant;\r\n  /** Full width of container */\r\n  fullWidth?: boolean;\r\n  /** Left icon or element */\r\n  startAdornment?: ReactNode;\r\n  /** Right icon or element */\r\n  endAdornment?: ReactNode;\r\n  /** Whether to show a clear button when input has text */\r\n  clearable?: boolean;\r\n  /** Whether to show success state */\r\n  success?: boolean;\r\n  /** Whether the field is required */\r\n  required?: boolean;\r\n  /** Custom CSS class for the container */\r\n  containerClassName?: string;\r\n  /** Custom CSS class for the label */\r\n  labelClassName?: string;\r\n  /** Callback when clear button is clicked */\r\n  onClear?: () => void;\r\n  /** Whether to show character count */\r\n  showCharCount?: boolean;\r\n}\r\n\r\n/**\r\n * TextInput component that provides a consistent text input experience\r\n * with various states, adornments, and responsive design.\r\n */\r\nexport const TextInput = forwardRef<HTMLInputElement, TextInputProps>(\r\n  (\r\n    {\r\n      label,\r\n      helperText,\r\n      error,\r\n      size = 'md',\r\n      variant = 'default',\r\n      fullWidth = false,\r\n      startAdornment,\r\n      endAdornment,\r\n      clearable = false,\r\n      success = false,\r\n      required = false,\r\n      disabled = false,\r\n      className = '',\r\n      containerClassName = '',\r\n      labelClassName = '',\r\n      value,\r\n      defaultValue,\r\n      onClear,\r\n      showCharCount = false,\r\n      maxLength,\r\n      ...rest\r\n    },\r\n    ref\r\n  ) => {\r\n    // Track input value for clearable and character count\r\n    const [inputValue, setInputValue] = useState<string>(\r\n      (value as string) || (defaultValue as string) || ''\r\n    );\r\n    \r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setInputValue(e.target.value);\r\n      rest.onChange?.(e);\r\n    };\r\n\r\n    const handleClear = () => {\r\n      setInputValue('');\r\n      onClear?.();\r\n      \r\n      // Create a synthetic change event\r\n      const syntheticEvent = {\r\n        target: { value: '', name: rest.name },\r\n      } as React.ChangeEvent<HTMLInputElement>;\r\n      \r\n      rest.onChange?.(syntheticEvent);\r\n    };\r\n\r\n    // Container styles\r\n    const containerClasses = [\r\n      'relative',\r\n      fullWidth ? 'w-full' : '',\r\n      containerClassName,\r\n    ].filter(Boolean).join(' ');\r\n    \r\n    // Label styles\r\n    const labelClasses = [\r\n      'block mb-1.5 font-medium',\r\n      error ? 'text-red-600 dark:text-red-500' : 'text-gray-700 dark:text-gray-300',\r\n      disabled ? 'opacity-60' : '',\r\n      labelClassName,\r\n    ].filter(Boolean).join(' ');\r\n    \r\n    // Input wrapper styles for adornments\r\n    const inputWrapperClasses = [\r\n      'relative flex items-center',\r\n      startAdornment ? 'pl-9' : '',\r\n      endAdornment || (clearable && inputValue) ? 'pr-9' : '',\r\n    ].filter(Boolean).join(' ');\r\n    \r\n    // Size classes\r\n    const sizeClasses = {\r\n      sm: 'py-1 px-2 text-sm',\r\n      md: 'py-2 px-3',\r\n      lg: 'py-2.5 px-4 text-lg',\r\n    };\r\n    \r\n    // Variant styles\r\n    const getVariantClasses = () => {\r\n      const baseClasses = [\r\n        'w-full rounded-md focus:outline-none transition-colors',\r\n        sizeClasses[size],\r\n        disabled ? 'opacity-60 cursor-not-allowed bg-gray-100 dark:bg-gray-800' : '',\r\n      ];\r\n      \r\n      if (error) {\r\n        baseClasses.push('border-red-500 focus:border-red-500 focus:ring-red-200 dark:focus:ring-red-900');\r\n      } else if (success) {\r\n        baseClasses.push('border-green-500 focus:border-green-500 focus:ring-green-200 dark:focus:ring-green-900');\r\n      }\r\n      \r\n      switch (variant) {\r\n        case 'filled':\r\n          baseClasses.push(\r\n            'border border-transparent',\r\n            error\r\n              ? 'bg-red-50 dark:bg-red-900/20'\r\n              : success\r\n                ? 'bg-green-50 dark:bg-green-900/20'\r\n                : 'bg-gray-100 dark:bg-gray-800',\r\n            !disabled && !error && !success\r\n              ? 'focus:bg-white dark:focus:bg-gray-900 hover:bg-gray-50 dark:hover:bg-gray-750'\r\n              : ''\r\n          );\r\n          break;\r\n          \r\n        case 'outlined':\r\n          baseClasses.push(\r\n            'bg-transparent',\r\n            error\r\n              ? 'border-red-500'\r\n              : success\r\n                ? 'border-green-500'\r\n                : 'border-gray-300 dark:border-gray-600',\r\n            !disabled && !error && !success\r\n              ? 'hover:border-gray-400 dark:hover:border-gray-500 focus:border-primary-500 dark:focus:border-primary-500 focus:ring-1 focus:ring-primary-200 dark:focus:ring-primary-900'\r\n              : ''\r\n          );\r\n          break;\r\n          \r\n        case 'underlined':\r\n          baseClasses.push(\r\n            'rounded-none border-0 border-b-2 px-1',\r\n            'bg-transparent',\r\n            error\r\n              ? 'border-red-500'\r\n              : success\r\n                ? 'border-green-500'\r\n                : 'border-gray-300 dark:border-gray-600',\r\n            !disabled && !error && !success\r\n              ? 'hover:border-gray-500 focus:border-primary-500 dark:focus:border-primary-400'\r\n              : ''\r\n          );\r\n          break;\r\n          \r\n        default: // default variant\r\n          baseClasses.push(\r\n            'border',\r\n            error\r\n              ? 'border-red-500'\r\n              : success\r\n                ? 'border-green-500'\r\n                : 'border-gray-300 dark:border-gray-600',\r\n            'bg-white dark:bg-gray-900',\r\n            !disabled && !error && !success\r\n              ? 'hover:border-gray-400 dark:hover:border-gray-500 focus:border-primary-500 dark:focus:border-primary-500 focus:ring-1 focus:ring-primary-200 dark:focus:ring-primary-900'\r\n              : ''\r\n          );\r\n      }\r\n      \r\n      return baseClasses.filter(Boolean).join(' ');\r\n    };\r\n    \r\n    // Adornment styles\r\n    const adornmentClasses = 'absolute inset-y-0 flex items-center pointer-events-none text-gray-500 dark:text-gray-400';\r\n    const startAdornmentClasses = `${adornmentClasses} left-0 pl-2.5`;\r\n    const endAdornmentClasses = `${adornmentClasses} right-0 pr-2.5`;\r\n    \r\n    // Clear button styles\r\n    const clearButtonClasses = [\r\n      'absolute inset-y-0 right-0 flex items-center pr-2.5',\r\n      'text-gray-400 hover:text-gray-600 dark:text-gray-500 dark:hover:text-gray-300',\r\n      'cursor-pointer transition-colors duration-150',\r\n    ].join(' ');\r\n    \r\n    // Helper/error text\r\n    const helperTextClasses = [\r\n      'mt-1 text-sm',\r\n      error \r\n        ? 'text-red-600 dark:text-red-500' \r\n        : success \r\n          ? 'text-green-600 dark:text-green-500' \r\n          : 'text-gray-500 dark:text-gray-400',\r\n    ].join(' ');\r\n    \r\n    // Character count classes\r\n    const charCountClasses = 'text-xs text-right mt-1 text-gray-500 dark:text-gray-400';\r\n    \r\n    return (\r\n      <div className={containerClasses}>\r\n        {/* Label */}\r\n        {label && (\r\n          <label htmlFor={rest.id} className={labelClasses}>\r\n            {label}\r\n            {required && <span className=\"ml-0.5 text-red-600 dark:text-red-500\">*</span>}\r\n          </label>\r\n        )}\r\n        \r\n        {/* Input with adornments */}\r\n        <div className={inputWrapperClasses}>\r\n          {/* Start adornment */}\r\n          {startAdornment && (\r\n            <div className={startAdornmentClasses}>{startAdornment}</div>\r\n          )}\r\n          \r\n          {/* Input element */}\r\n          <input\r\n            ref={ref}\r\n            className={`${getVariantClasses()} ${className}`}\r\n            value={value}\r\n            defaultValue={defaultValue}\r\n            disabled={disabled}\r\n            aria-invalid={!!error}\r\n            aria-describedby={helperText ? `${rest.id}-helper` : undefined}\r\n            maxLength={maxLength}\r\n            onChange={handleChange}\r\n            {...rest}\r\n          />\r\n          \r\n          {/* End adornment */}\r\n          {endAdornment && (\r\n            <div className={endAdornmentClasses}>{endAdornment}</div>\r\n          )}\r\n          \r\n          {/* Clear button */}\r\n          {clearable && inputValue && !disabled && (\r\n            <div className={clearButtonClasses} onClick={handleClear}>\r\n              <svg \r\n                xmlns=\"http://www.w3.org/2000/svg\" \r\n                className=\"h-4 w-4\" \r\n                fill=\"none\" \r\n                viewBox=\"0 0 24 24\" \r\n                stroke=\"currentColor\"\r\n              >\r\n                <path \r\n                  strokeLinecap=\"round\" \r\n                  strokeLinejoin=\"round\" \r\n                  strokeWidth={2} \r\n                  d=\"M6 18L18 6M6 6l12 12\" \r\n                />\r\n              </svg>\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        {/* Helper text, error or character count */}\r\n        <div className=\"flex justify-between\">\r\n          {(error || helperText) && (\r\n            <p \r\n              id={`${rest.id}-helper`}\r\n              className={helperTextClasses}\r\n            >\r\n              {error || helperText}\r\n            </p>\r\n          )}\r\n          \r\n          {/* Character counter */}\r\n          {showCharCount && maxLength && (\r\n            <p className={charCountClasses}>\r\n              {inputValue.length}/{maxLength}\r\n            </p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { ReactNode, FormHTMLAttributes, createContext, useContext } from 'react';\r\n\r\nexport type FormLayout = 'vertical' | 'horizontal' | 'inline' | 'compact';\r\nexport type FormStatus = 'idle' | 'loading' | 'success' | 'error';\r\nexport type FormSize = 'xs' | 'sm' | 'md' | 'lg';\r\nexport type FormTheme = 'default' | 'ghost' | 'bordered';\r\n\r\ninterface FormContextType {\r\n  layout: FormLayout;\r\n  status: FormStatus;\r\n  disabled: boolean;\r\n  size: FormSize;\r\n  theme: FormTheme;\r\n  requiredMark: boolean | ReactNode;\r\n  labelAlign: 'left' | 'right' | 'center';\r\n  requiredIndicator: ReactNode;\r\n  showErrorMessages: boolean;\r\n  showSuccessIndicator: boolean;\r\n}\r\n\r\nexport interface FormProps extends Omit<FormHTMLAttributes<HTMLFormElement>, 'onSubmit'> {\r\n  /** Form content */\r\n  children: ReactNode;\r\n  /** Form layout mode */\r\n  layout?: FormLayout;\r\n  /** Current status of the form */\r\n  status?: FormStatus;\r\n  /** Whether the form is disabled */\r\n  disabled?: boolean;\r\n  /** Size of form controls */\r\n  size?: FormSize;\r\n  /** Visual style theme */\r\n  theme?: FormTheme;\r\n  /** Whether to show a required mark next to labels */\r\n  requiredMark?: boolean | ReactNode;\r\n  /** Alignment of form labels */\r\n  labelAlign?: 'left' | 'right' | 'center';\r\n  /** Required field indicator */\r\n  requiredIndicator?: ReactNode;\r\n  /** Whether to show error messages below fields */\r\n  showErrorMessages?: boolean;\r\n  /** Whether to show success indicator on valid fields */\r\n  showSuccessIndicator?: boolean;\r\n  /** Custom CSS class */\r\n  className?: string;\r\n  /** Form submission handler */\r\n  onSubmit?: (e: React.FormEvent<HTMLFormElement>, formData: FormData) => void;\r\n  /** Event triggered when form validation fails */\r\n  onValidationFailed?: (invalidFields: string[]) => void;\r\n}\r\n\r\n// Form component with Item property added to the type\r\ninterface FormComponent extends React.FC<FormProps> {\r\n  Item: React.FC<FormItemProps>;\r\n}\r\n\r\n// Create form context\r\nconst FormContext = createContext<FormContextType>({\r\n  layout: 'vertical',\r\n  status: 'idle',\r\n  disabled: false,\r\n  size: 'md',\r\n  theme: 'default',\r\n  requiredMark: true,\r\n  labelAlign: 'left',\r\n  requiredIndicator: <span className=\"text-red-500 ml-1\">*</span>,\r\n  showErrorMessages: true,\r\n  showSuccessIndicator: true\r\n});\r\n\r\nexport const useFormContext = () => useContext(FormContext);\r\n\r\n/**\r\n * Form - A responsive form component with support for different layouts,\r\n * validation states, and field styling.\r\n */\r\nexport const Form = (({\r\n  children,\r\n  layout = 'vertical',\r\n  status = 'idle',\r\n  disabled = false,\r\n  size = 'md',\r\n  theme = 'default',\r\n  requiredMark = true,\r\n  labelAlign = 'left',\r\n  requiredIndicator = <span className=\"text-red-500 ml-1\">*</span>,\r\n  showErrorMessages = true,\r\n  showSuccessIndicator = true,\r\n  className = '',\r\n  onSubmit,\r\n  onValidationFailed,\r\n  ...rest\r\n}) => {\r\n  // Form layout classes\r\n  const layoutClasses = {\r\n    vertical: 'flex flex-col gap-4',\r\n    horizontal: 'grid grid-cols-1 md:grid-cols-[30%_1fr] lg:grid-cols-[25%_1fr] gap-3',\r\n    inline: 'flex flex-wrap items-end gap-3',\r\n    compact: 'flex flex-col gap-2',\r\n  };\r\n\r\n  // Form theme classes\r\n  const themeClasses = {\r\n    default: '',\r\n    ghost: 'bg-transparent',\r\n    bordered: 'border p-6 rounded-lg'\r\n  };\r\n\r\n  // Combine all classes\r\n  const formClasses = [\r\n    layoutClasses[layout],\r\n    themeClasses[theme],\r\n    disabled ? 'opacity-60 pointer-events-none' : '',\r\n    className\r\n  ].filter(Boolean).join(' ');\r\n\r\n  // Process form submission\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    \r\n    // Check HTML form validation\r\n    const form = e.currentTarget;\r\n    if (!form.checkValidity()) {\r\n      e.stopPropagation();\r\n      \r\n      // Get all invalid field names\r\n      const invalidFields = Array.from(form.elements)\r\n        .filter((element) => {\r\n          const el = element as HTMLInputElement;\r\n          return el.validity && !el.validity.valid && el.name;\r\n        })\r\n        .map((element) => (element as HTMLInputElement).name);\r\n      \r\n      if (onValidationFailed) {\r\n        onValidationFailed(invalidFields);\r\n      }\r\n      \r\n      return;\r\n    }\r\n    \r\n    if (onSubmit) {\r\n      const formData = new FormData(form);\r\n      onSubmit(e, formData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContext.Provider\r\n      value={{\r\n        layout,\r\n        status,\r\n        disabled,\r\n        size,\r\n        theme,\r\n        requiredMark,\r\n        labelAlign,\r\n        requiredIndicator,\r\n        showErrorMessages,\r\n        showSuccessIndicator\r\n      }}\r\n    >\r\n      <form \r\n        className={formClasses} \r\n        onSubmit={handleSubmit}\r\n        noValidate={rest.noValidate !== undefined ? rest.noValidate : true}\r\n        {...rest}\r\n      >\r\n        {/* Form status indicator - shown when loading or after success/error */}\r\n        {status !== 'idle' && (\r\n          <div className={`form-status ${status === 'loading' ? 'animate-pulse' : ''}`}>\r\n            {status === 'loading' && (\r\n              <div className=\"bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 text-blue-700 dark:text-blue-300 p-3 rounded-md flex items-center\">\r\n                <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                </svg>\r\n                Processing...\r\n              </div>\r\n            )}\r\n            \r\n            {status === 'success' && (\r\n              <div className=\"bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 text-green-700 dark:text-green-300 p-3 rounded-md\">\r\n                Form submitted successfully\r\n              </div>\r\n            )}\r\n            \r\n            {status === 'error' && (\r\n              <div className=\"bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 text-red-700 dark:text-red-300 p-3 rounded-md\">\r\n                An error occurred while submitting the form\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {children}\r\n      </form>\r\n    </FormContext.Provider>\r\n  );\r\n}) as FormComponent;\r\n\r\n// Form.Item component for form fields\r\nexport interface FormItemProps {\r\n  /** Form field content */\r\n  children: ReactNode;\r\n  /** Label for the form item */\r\n  label?: ReactNode;\r\n  /** Whether the field is required */\r\n  required?: boolean;\r\n  /** Help text to show below the field */\r\n  help?: ReactNode;\r\n  /** Error message */\r\n  error?: string | string[];\r\n  /** Success status override */\r\n  success?: boolean;\r\n  /** Whether to hide the label */\r\n  hideLabel?: boolean;\r\n  /** Unique identifier for the form item */\r\n  id?: string;\r\n  /** Custom CSS class */\r\n  className?: string;\r\n  /** For certain field types, automatically display the field's validation message */\r\n  autoValidationMessage?: boolean;\r\n}\r\n\r\nexport const FormItem: React.FC<FormItemProps> = ({\r\n  children,\r\n  label,\r\n  required = false,\r\n  help,\r\n  error,\r\n  success = false,\r\n  hideLabel = false,\r\n  id,\r\n  className = '',\r\n  autoValidationMessage = true,\r\n}) => {\r\n  const {\r\n    layout,\r\n    requiredMark,\r\n    requiredIndicator,\r\n    labelAlign,\r\n    showErrorMessages,\r\n    showSuccessIndicator,\r\n  } = useFormContext();\r\n\r\n  // Process errors to display\r\n  const hasError = error && (Array.isArray(error) ? error.length > 0 : true);\r\n  const errorMessages = Array.isArray(error) ? error : error ? [error] : [];\r\n\r\n  // Handle label alignment\r\n  const labelAlignClass = {\r\n    left: 'text-left',\r\n    right: 'text-right',\r\n    center: 'text-center',\r\n  };\r\n\r\n  // Layout-specific classes\r\n  const itemLayoutClasses = {\r\n    vertical: '',\r\n    horizontal: 'contents',\r\n    inline: 'flex-grow min-w-fit',\r\n    compact: '',\r\n  };\r\n\r\n  // Label styles based on layout\r\n  const labelLayoutClasses = {\r\n    vertical: 'block mb-1',\r\n    horizontal: 'py-2',\r\n    inline: 'mb-1',\r\n    compact: 'text-sm mb-1',\r\n  };\r\n\r\n  // Item container classes\r\n  const itemClasses = [\r\n    itemLayoutClasses[layout],\r\n    className\r\n  ].filter(Boolean).join(' ');\r\n\r\n  return (\r\n    <div className={itemClasses}>\r\n      {/* Label */}\r\n      {label && !hideLabel && (\r\n        <label\r\n          htmlFor={id}\r\n          className={`\r\n            ${labelLayoutClasses[layout]} \r\n            ${labelAlignClass[labelAlign]} \r\n            text-gray-700 dark:text-gray-300 font-medium\r\n          `}\r\n        >\r\n          {label}\r\n          {required && requiredMark && requiredIndicator}\r\n        </label>\r\n      )}\r\n\r\n      {/* Field container */}\r\n      <div className=\"relative\">\r\n        {/* Field content */}\r\n        {children}\r\n        \r\n        {/* Success indicator */}\r\n        {showSuccessIndicator && success && !hasError && (\r\n          <div className=\"absolute right-3 top-1/2 -translate-y-1/2 text-green-500\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n              <path d=\"M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.267.267 0 0 1 .02-.022z\"/>\r\n            </svg>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      {/* Help text */}\r\n      {help && !hasError && (\r\n        <div className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\r\n          {help}\r\n        </div>\r\n      )}\r\n      \r\n      {/* Error messages */}\r\n      {showErrorMessages && hasError && (\r\n        <div className=\"mt-1 text-sm text-red-600 dark:text-red-400\">\r\n          {errorMessages.map((msg, i) => (\r\n            <div key={i}>{msg}</div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// FormControl component for various input controls\r\nexport interface FormControlProps {\r\n  /** Control content */\r\n  children: ReactNode;\r\n  /** Error state */\r\n  error?: boolean;\r\n  /** Success state */\r\n  success?: boolean;\r\n  /** Custom CSS class */\r\n  className?: string;\r\n}\r\n\r\nexport const FormControl: React.FC<FormControlProps> = ({ \r\n  children,\r\n  error = false,\r\n  success = false,\r\n  className = ''\r\n}) => {\r\n  // Styling for the control container\r\n  const controlClasses = [\r\n    'form-control',\r\n    error ? 'form-control-error' : '',\r\n    success ? 'form-control-success' : '',\r\n    className\r\n  ].filter(Boolean).join(' ');\r\n  \r\n  return (\r\n    <div className={controlClasses}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nForm.Item = FormItem;\r\n\r\nexport default Form;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getAllCategories, categories } from '../tools';\r\n// Import components from design system instead of legacy components\r\nimport { ThemeToggle } from '../design-system/components/inputs';\r\nimport { useTheme } from '../design-system/context/ThemeContext';\r\nimport { getIcon } from '../design-system/icons';\r\n\r\nconst Header: React.FC = () => {\r\n  const allCategories = getAllCategories();\r\n  const { isDark } = useTheme();\r\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\r\n  \r\n  const toggleMobileMenu = () => {\r\n    setMobileMenuOpen(!mobileMenuOpen);\r\n  };\r\n  \r\n  return (\r\n    <header className=\"bg-white dark:bg-gray-800 text-gray-900 dark:text-white shadow-md transition-colors duration-200\">\r\n      <div className=\"container mx-auto px-4\">\r\n        <div className=\"flex justify-between items-center py-3\">\r\n          <Link to=\"/\" className=\"flex items-center space-x-2 text-primary-600 dark:text-primary-400 font-bold text-xl hover:text-primary-700 dark:hover:text-primary-300 transition\">\r\n            {/* Using emoji icon from our system */}\r\n            <span className=\"text-2xl\">{getIcon('code')}</span>\r\n            <span>MyDebugger</span>\r\n          </Link>\r\n          \r\n          <div className=\"hidden md:flex md:items-center space-x-6\">\r\n            {allCategories.map((category) => {\r\n              const CategoryIcon = categories[category].icon;\r\n              return (\r\n                <Link \r\n                  key={category}\r\n                  to={`/category/${category.toLowerCase()}`}\r\n                  className=\"flex items-center space-x-1 text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition\"\r\n                >\r\n                  <CategoryIcon className=\"w-4 h-4\" />\r\n                  <span>{category}</span>\r\n                </Link>\r\n              );\r\n            })}\r\n            <ThemeToggle />\r\n          </div>\r\n          \r\n          <div className=\"md:hidden flex items-center space-x-3\">\r\n            <ThemeToggle />\r\n            <button \r\n              onClick={toggleMobileMenu}\r\n              className=\"p-2 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 text-gray-500 dark:text-gray-400 hover:text-primary-600 dark:hover:text-primary-400 transition\"\r\n              aria-label=\"Toggle menu\"\r\n            >\r\n              {mobileMenuOpen ? (\r\n                <span>{getIcon('close')}</span>\r\n              ) : (\r\n                <span>{getIcon('menu')}</span>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Mobile Menu */}\r\n        {mobileMenuOpen && (\r\n          <div className=\"md:hidden py-4 border-t border-gray-200 dark:border-gray-700 animate-fade-in\">\r\n            <div className=\"flex flex-col space-y-3\">\r\n              {allCategories.map((category) => {\r\n                const CategoryIcon = categories[category].icon;\r\n                return (\r\n                  <Link \r\n                    key={category}\r\n                    to={`/category/${category.toLowerCase()}`}\r\n                    className=\"flex items-center space-x-2 px-2 py-2 rounded-md hover:bg-gray-100 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-300 transition\"\r\n                    onClick={() => setMobileMenuOpen(false)}\r\n                  >\r\n                    <CategoryIcon className=\"w-5 h-5\" />\r\n                    <span>{category}</span>\r\n                  </Link>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport interface CardProps {\r\n  /** Card title */\r\n  title?: React.ReactNode;\r\n  /** Card subtitle */\r\n  subtitle?: React.ReactNode;\r\n  /** Card content */\r\n  children: React.ReactNode;\r\n  /** Footer content */\r\n  footer?: React.ReactNode;\r\n  /** Whether to add extra padding */\r\n  padded?: boolean;\r\n  /** Whether to show a border */\r\n  bordered?: boolean;\r\n  /** Whether to show a shadow */\r\n  shadowed?: boolean;\r\n  /** Custom CSS class */\r\n  className?: string;\r\n  /** ID attribute */\r\n  id?: string;\r\n  /** Card header actions (e.g. buttons) */\r\n  actions?: React.ReactNode;\r\n  /** Card hover effect */\r\n  hoverable?: boolean;\r\n  /** Whether the card is in a loading state */\r\n  loading?: boolean;\r\n  /** Optional image at the top of the card */\r\n  image?: {\r\n    src: string;\r\n    alt?: string;\r\n    className?: string;\r\n    height?: string | number;\r\n  };\r\n  /** Optional click handler for the entire card */\r\n  onClick?: () => void;\r\n  /** Optional href to make the card a link */\r\n  href?: string;\r\n  /** Card color variant */\r\n  variant?: 'default' | 'primary' | 'success' | 'warning' | 'danger' | 'info';\r\n  /** Whether the card has elevation (shadow) */\r\n  isElevated?: boolean;\r\n  /** Whether the card is interactive (has hover effects) */\r\n  isInteractive?: boolean;\r\n}\r\n\r\n/**\r\n * Card - A flexible container for grouping and displaying content\r\n * \r\n * @description\r\n * Cards are used to group and display content in a clear and concise format.\r\n * They can contain text, images, actions, and other UI components. Cards provide\r\n * a consistent way to present information across the application, with options\r\n * for headers, footers, and different visual styles.\r\n * \r\n * Cards can be simple containers or interactive elements that link to detailed content.\r\n * They support various states including loading, hover effects, and color variants\r\n * to match different use cases and information priority levels.\r\n * \r\n * @accessibility\r\n * - When used as interactive elements (with onClick or href), includes proper focus styles\r\n * - Maintains proper heading hierarchy when using titles\r\n * - Provides visual loading state with accessible indicators\r\n * - Ensures sufficient color contrast in all variants and modes\r\n * - Uses semantic HTML structure with appropriate ARIA attributes when needed\r\n * \r\n * @example\r\n * ```tsx\r\n * // Basic card\r\n * <Card title=\"Card Title\">\r\n *   <p>Card content goes here</p>\r\n * </Card>\r\n * \r\n * // Card with all features\r\n * <Card\r\n *   title=\"Feature Overview\"\r\n *   subtitle=\"Learn about our product features\"\r\n *   actions={<Button variant=\"ghost\" size=\"sm\">View All</Button>}\r\n *   footer=\"Last updated: Yesterday\"\r\n *   isElevated\r\n * >\r\n *   <p>Detailed description of features...</p>\r\n * </Card>\r\n * \r\n * // Interactive card\r\n * <Card\r\n *   isInteractive\r\n *   onClick={() => navigateToDetail(item.id)}\r\n *   title={item.name}\r\n *   image={{ src: item.imageUrl, alt: item.name }}\r\n * >\r\n *   <p>{item.description}</p>\r\n * </Card>\r\n * ```\r\n */\r\nexport const Card: React.FC<CardProps> & {\r\n  Header: typeof CardHeader;\r\n  Body: typeof CardBody;\r\n  Footer: typeof CardFooter;\r\n} = ({\r\n  title,\r\n  subtitle,\r\n  children,\r\n  footer,\r\n  padded = true,\r\n  bordered = true,\r\n  shadowed = true,\r\n  className = '',\r\n  id,\r\n  actions,\r\n  hoverable = false,\r\n  loading = false,\r\n  image,\r\n  onClick,\r\n  href,\r\n  variant = 'default',\r\n  isElevated = false,\r\n  isInteractive = false,\r\n}) => {\r\n  // Base card classes\r\n  const cardClasses = [\r\n    'bg-white dark:bg-gray-800 overflow-hidden flex flex-col h-full',\r\n    bordered ? 'border border-gray-200 dark:border-gray-700' : '',\r\n    shadowed || isElevated ? 'shadow-sm' : '',\r\n    (hoverable || isInteractive) ? 'transition-all duration-200 motion-reduce:transition-none hover:shadow-md' : '',\r\n    'rounded-lg',\r\n    (onClick || href || isInteractive) ? 'cursor-pointer focus:outline-none focus-visible:ring-2 focus-visible:ring-primary-500 focus-visible:ring-offset-2' : '',\r\n    isElevated ? 'shadow-md' : '',\r\n    isInteractive ? 'transform hover:-translate-y-1 transition-transform duration-300 motion-reduce:transform-none' : '',\r\n    className,\r\n  ];\r\n  \r\n  // Variant classes\r\n  switch (variant) {\r\n    case 'primary':\r\n      cardClasses.push('bg-primary-50 dark:bg-primary-900/30 border-primary-200 dark:border-primary-800');\r\n      break;\r\n    case 'success':\r\n      cardClasses.push('bg-green-50 dark:bg-green-900/30 border-green-200 dark:border-green-800');\r\n      break;\r\n    case 'warning':\r\n      cardClasses.push('bg-yellow-50 dark:bg-yellow-900/30 border-yellow-200 dark:border-yellow-800');\r\n      break;\r\n    case 'danger':\r\n      cardClasses.push('bg-red-50 dark:bg-red-900/30 border-red-200 dark:border-red-800');\r\n      break;\r\n    case 'info':\r\n      cardClasses.push('bg-blue-50 dark:bg-blue-900/30 border-blue-200 dark:border-blue-800');\r\n      break;\r\n  }\r\n  \r\n  // Wrapper component (a or div)\r\n  const WrapperComponent = href ? 'a' : 'div';\r\n  \r\n  // Event handlers\r\n  const handleClick = (e: React.MouseEvent) => {\r\n    if (onClick) onClick();\r\n  };\r\n  \r\n  // Props for wrapper component\r\n  const wrapperProps = {\r\n    className: cardClasses.filter(Boolean).join(' '),\r\n    id,\r\n    ...(href ? { href } : {}),\r\n    ...(onClick ? { onClick: handleClick } : {}),\r\n    ...(onClick || href ? { tabIndex: 0, role: 'button' } : {}),\r\n  };\r\n  \r\n  return (\r\n    <WrapperComponent {...wrapperProps}>\r\n      {/* Card image */}\r\n      {image && (\r\n        <div className=\"w-full\">\r\n          <img\r\n            src={image.src}\r\n            alt={image.alt || ''}\r\n            className={`w-full object-cover transition-opacity duration-300 motion-reduce:transition-none ${image.className || ''}`}\r\n            style={{ height: image.height }}\r\n          />\r\n        </div>\r\n      )}\r\n      \r\n      {/* Card header if title or actions exist */}\r\n      {(title || actions) && (\r\n        <div className=\"flex justify-between items-start p-4 border-b border-gray-200 dark:border-gray-700\">\r\n          <div>\r\n            {title && (\r\n              <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">\r\n                {title}\r\n              </h3>\r\n            )}\r\n            {subtitle && (\r\n              <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\r\n                {subtitle}\r\n              </p>\r\n            )}\r\n          </div>\r\n          {actions && <div>{actions}</div>}\r\n        </div>\r\n      )}\r\n      \r\n      {/* Card body */}\r\n      <div className={`flex-1 ${padded && !title ? 'p-4' : ''}`}>\r\n        {loading ? (\r\n          <div className=\"flex justify-center items-center py-8\">\r\n            <div className=\"animate-spin motion-reduce:animate-[spin_1.5s_linear_infinite] rounded-full h-8 w-8 border-t-2 border-b-2 border-primary-500\"></div>\r\n          </div>\r\n        ) : (\r\n          children\r\n        )}\r\n      </div>\r\n      \r\n      {/* Card footer */}\r\n      {footer && (\r\n        <div className=\"px-4 py-3 border-t border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-900\">\r\n          {footer}\r\n        </div>\r\n      )}\r\n    </WrapperComponent>\r\n  );\r\n};\r\n\r\n/**\r\n * CardHeader - Component for the card header section\r\n * \r\n * @description\r\n * A specialized component for creating consistent card headers\r\n * with optional title, subtitle, and action elements.\r\n * \r\n * @example\r\n * ```tsx\r\n * <Card>\r\n *   <Card.Header \r\n *     title=\"Analytics Overview\" \r\n *     subtitle=\"Past 30 days\" \r\n *     actions={<Button size=\"sm\">Refresh</Button>}\r\n *   />\r\n *   <Card.Body>\r\n *     {content}\r\n *   </Card.Body>\r\n * </Card>\r\n * ```\r\n */\r\nconst CardHeader: React.FC<{\r\n  /** Header title */\r\n  title?: React.ReactNode;\r\n  /** Header subtitle */\r\n  subtitle?: React.ReactNode;\r\n  /** Actions to display in the header (e.g. buttons) */\r\n  actions?: React.ReactNode;\r\n  /** Custom CSS class */\r\n  className?: string;\r\n  /** Whether to show a divider below the header */\r\n  divider?: boolean;\r\n}> = ({ \r\n  title, \r\n  subtitle, \r\n  actions, \r\n  className = '',\r\n  divider = true,\r\n}) => {\r\n  return (\r\n    <div className={`flex justify-between items-start p-4 ${divider ? 'border-b border-gray-200 dark:border-gray-700' : ''} ${className}`}>\r\n      <div>\r\n        {title && (\r\n          <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">\r\n            {title}\r\n          </h3>\r\n        )}\r\n        {subtitle && (\r\n          <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\r\n            {subtitle}\r\n          </p>\r\n        )}\r\n      </div>\r\n      {actions && <div>{actions}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * CardBody - Component for the main content area of a card\r\n * \r\n * @description\r\n * Contains the primary content of a card with optional padding control.\r\n * \r\n * @example\r\n * ```tsx\r\n * <Card>\r\n *   <Card.Header title=\"User Profile\" />\r\n *   <Card.Body padded>\r\n *     <UserProfileContent />\r\n *   </Card.Body>\r\n * </Card>\r\n * ```\r\n */\r\nconst CardBody: React.FC<{\r\n  /** Card body content */\r\n  children: React.ReactNode;\r\n  /** Custom CSS class */\r\n  className?: string;\r\n  /** Whether to add padding around content */\r\n  padded?: boolean;\r\n}> = ({ \r\n  children, \r\n  className = '',\r\n  padded = true,\r\n}) => {\r\n  return (\r\n    <div className={`${padded ? 'p-4' : ''} ${className}`}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * CardFooter - Component for the card footer section\r\n * \r\n * @description\r\n * A specialized component for creating consistent card footers\r\n * with options for content alignment and styling.\r\n * \r\n * @example\r\n * ```tsx\r\n * <Card>\r\n *   <Card.Body>{content}</Card.Body>\r\n *   <Card.Footer align=\"between\">\r\n *     <span>Created 2 days ago</span>\r\n *     <Button variant=\"primary\">View Details</Button>\r\n *   </Card.Footer>\r\n * </Card>\r\n * ```\r\n */\r\nconst CardFooter: React.FC<{\r\n  /** Footer content */\r\n  children: React.ReactNode;\r\n  /** Custom CSS class */\r\n  className?: string;\r\n  /** Whether to show a divider above the footer */\r\n  divider?: boolean;\r\n  /** Content alignment */\r\n  align?: 'left' | 'center' | 'right' | 'between';\r\n}> = ({\r\n  children,\r\n  className = '',\r\n  divider = true,\r\n  align = 'between',\r\n}) => {\r\n  const alignmentClasses = {\r\n    left: 'justify-start',\r\n    center: 'justify-center',\r\n    right: 'justify-end',\r\n    between: 'justify-between',\r\n  };\r\n  \r\n  return (\r\n    <div className={`px-4 py-3 ${divider ? 'border-t border-gray-200 dark:border-gray-700' : ''} bg-gray-50 dark:bg-gray-900 flex items-center ${alignmentClasses[align]} ${className}`}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Attach subcomponents to Card\r\nCard.Header = CardHeader;\r\nCard.Body = CardBody;\r\nCard.Footer = CardFooter;\r\n\r\nexport default Card;","import React, { ReactNode } from 'react';\r\n\r\nexport type ContainerWidth = 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl' | '5xl' | '6xl' | '7xl' | 'full' | 'none';\r\nexport type ContainerPadding = 'none' | 'sm' | 'md' | 'lg' | 'xl';\r\n\r\nexport interface ResponsiveContainerProps {\r\n  /** The content to be displayed inside the container */\r\n  children: ReactNode;\r\n  /** Maximum width of the container at different breakpoints */\r\n  maxWidth?: ContainerWidth;\r\n  /** Whether to center the container horizontally */\r\n  centered?: boolean;\r\n  /** Padding applied to the container */\r\n  padding?: ContainerPadding;\r\n  /** Custom CSS class */\r\n  className?: string;\r\n  /** Whether to add a responsive gutter around the container */\r\n  withGutter?: boolean;\r\n  /** HTML tag to render the container as */\r\n  as?: 'div' | 'section' | 'article' | 'main';\r\n}\r\n\r\n/**\r\n * ResponsiveContainer - A component for creating consistent, responsive layouts\r\n * with configurable max-width, padding, and alignment.\r\n */\r\nexport const ResponsiveContainer: React.FC<ResponsiveContainerProps> = ({\r\n  children,\r\n  maxWidth = 'xl',\r\n  centered = true,\r\n  padding = 'md',\r\n  className = '',\r\n  withGutter = true,\r\n  as: Component = 'div'\r\n}) => {\r\n  // Max width classes based on breakpoints\r\n  const maxWidthClasses = {\r\n    xs: 'max-w-xs',       // 20rem (320px)\r\n    sm: 'max-w-sm',       // 24rem (384px)\r\n    md: 'max-w-md',       // 28rem (448px)\r\n    lg: 'max-w-lg',       // 32rem (512px)\r\n    xl: 'max-w-xl',       // 36rem (576px)\r\n    '2xl': 'max-w-2xl',   // 42rem (672px)\r\n    '3xl': 'max-w-3xl',   // 48rem (768px)\r\n    '4xl': 'max-w-4xl',   // 56rem (896px)\r\n    '5xl': 'max-w-5xl',   // 64rem (1024px)\r\n    '6xl': 'max-w-6xl',   // 72rem (1152px)\r\n    '7xl': 'max-w-7xl',   // 80rem (1280px)\r\n    full: 'max-w-full',   // 100%\r\n    none: ''              // No max width\r\n  };\r\n\r\n  // Padding classes\r\n  const paddingClasses = {\r\n    none: '',\r\n    sm: 'px-3 py-2',\r\n    md: 'px-4 py-4',\r\n    lg: 'px-6 py-8',\r\n    xl: 'px-8 py-12'\r\n  };\r\n\r\n  // Gutter classes (responsive spacing on the outside of the container)\r\n  const gutterClass = withGutter ? 'mx-4 md:mx-6 lg:mx-8' : '';\r\n\r\n  // Container classes\r\n  const containerClasses = [\r\n    maxWidth !== 'none' ? maxWidthClasses[maxWidth] : '',\r\n    centered ? 'mx-auto' : '',\r\n    padding !== 'none' ? paddingClasses[padding] : '',\r\n    withGutter ? gutterClass : '',\r\n    className\r\n  ].filter(Boolean).join(' ');\r\n\r\n  return (\r\n    <Component className={containerClasses}>\r\n      {children}\r\n    </Component>\r\n  );\r\n};","import React from 'react';\r\n\r\nexport interface LoadingSpinnerProps {\r\n  /** Size of the spinner */\r\n  size?: 'sm' | 'md' | 'lg';\r\n  /** Color class name for the spinner */\r\n  color?: string;\r\n  /** Whether the spinner should cover the full screen with an overlay */\r\n  fullScreen?: boolean;\r\n  /** Custom CSS class */\r\n  className?: string;\r\n}\r\n\r\n/**\r\n * LoadingSpinner component for indicating loading states\r\n * \r\n * @example\r\n * ```tsx\r\n * // Basic spinner\r\n * <LoadingSpinner />\r\n * \r\n * // Custom size and color\r\n * <LoadingSpinner size=\"lg\" color=\"text-primary-500\" />\r\n * \r\n * // Full screen overlay spinner\r\n * <LoadingSpinner fullScreen />\r\n * ```\r\n */\r\nexport const LoadingSpinner: React.FC<LoadingSpinnerProps> = ({\r\n  size = 'md',\r\n  color = 'text-primary-600',\r\n  fullScreen = false,\r\n  className = ''\r\n}) => {\r\n  const sizeClasses = {\r\n    sm: 'w-6 h-6',\r\n    md: 'w-10 h-10',\r\n    lg: 'w-16 h-16'\r\n  };\r\n\r\n  const spinner = (\r\n    <div className={`flex items-center justify-center ${className}`}>\r\n      <div\r\n        className={`${sizeClasses[size]} ${color} animate-spin rounded-full border-4 border-t-transparent border-current`}\r\n        role=\"status\"\r\n        aria-label=\"loading\"\r\n      />\r\n    </div>\r\n  );\r\n\r\n  if (fullScreen) {\r\n    return (\r\n      <div className=\"fixed inset-0 bg-white dark:bg-gray-900 bg-opacity-75 dark:bg-opacity-75 flex items-center justify-center z-50\">\r\n        {spinner}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={`w-full h-full min-h-[10rem] flex items-center justify-center ${className}`}>\r\n      {spinner}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;","import React, { useState, useEffect, useCallback, createContext, useContext, ReactNode } from 'react';\r\nimport { getIcon } from '../../icons';\r\n\r\nexport type ToastType = 'info' | 'success' | 'warning' | 'error' | 'default';\r\nexport type ToastPosition = \r\n  | 'top-right' \r\n  | 'top-center' \r\n  | 'top-left' \r\n  | 'bottom-right' \r\n  | 'bottom-center' \r\n  | 'bottom-left';\r\n\r\nexport interface Toast {\r\n  id: string;\r\n  type: ToastType;\r\n  title?: string;\r\n  message: ReactNode;\r\n  duration?: number;\r\n  position?: ToastPosition;\r\n  onClose?: () => void;\r\n}\r\n\r\ninterface ToastContextProps {\r\n  addToast: (toast: Omit<Toast, 'id'>) => string;\r\n  removeToast: (id: string) => void;\r\n  clearToasts: () => void;\r\n}\r\n\r\n// Create the Toast context\r\nconst ToastContext = createContext<ToastContextProps | undefined>(undefined);\r\n\r\n// Toast Provider Props\r\ninterface ToastProviderProps {\r\n  children: ReactNode;\r\n  defaultPosition?: ToastPosition;\r\n  defaultDuration?: number;\r\n  maxToasts?: number;\r\n}\r\n\r\n/**\r\n * Toast Provider - Manages toast notifications across the application\r\n */\r\nexport const ToastProvider: React.FC<ToastProviderProps> = ({\r\n  children,\r\n  defaultPosition = 'bottom-right',\r\n  defaultDuration = 5000,\r\n  maxToasts = 5\r\n}) => {\r\n  const [toasts, setToasts] = useState<Toast[]>([]);\r\n\r\n  // Remove a toast by id\r\n  const removeToast = useCallback((id: string) => {\r\n    setToasts(prev => prev.filter(toast => toast.id !== id));\r\n  }, []);\r\n\r\n  // Add a new toast\r\n  const addToast = useCallback((toast: Omit<Toast, 'id'>) => {\r\n    const id = `toast-${Date.now()}-${Math.random().toString(36).substring(2, 9)}`;\r\n    \r\n    const newToast: Toast = {\r\n      ...toast,\r\n      id,\r\n      duration: toast.duration || defaultDuration,\r\n      position: toast.position || defaultPosition,\r\n    };\r\n    \r\n    // If we have too many toasts, remove the oldest ones\r\n    setToasts(prev => {\r\n      const updatedToasts = [...prev, newToast];\r\n      if (updatedToasts.length > maxToasts) {\r\n        return updatedToasts.slice(-maxToasts);\r\n      }\r\n      return updatedToasts;\r\n    });\r\n\r\n    return id;\r\n  }, [defaultDuration, defaultPosition, maxToasts]);\r\n\r\n  // Clear all toasts\r\n  const clearToasts = useCallback(() => {\r\n    setToasts([]);\r\n  }, []);\r\n  \r\n  // Group toasts by position\r\n  const getToastsByPosition = useCallback(() => {\r\n    const groups: Record<ToastPosition, Toast[]> = {\r\n      'top-left': [],\r\n      'top-center': [],\r\n      'top-right': [],\r\n      'bottom-left': [],\r\n      'bottom-center': [],\r\n      'bottom-right': [],\r\n    };\r\n    \r\n    toasts.forEach(toast => {\r\n      groups[toast.position || defaultPosition].push(toast);\r\n    });\r\n    \r\n    return groups;\r\n  }, [toasts, defaultPosition]);\r\n\r\n  // Value for the context\r\n  const contextValue = {\r\n    addToast,\r\n    removeToast,\r\n    clearToasts,\r\n  };\r\n\r\n  const toastGroups = getToastsByPosition();\r\n\r\n  return (\r\n    <ToastContext.Provider value={contextValue}>\r\n      {children}\r\n      \r\n      {/* Toast containers for each position */}\r\n      {Object.entries(toastGroups).map(([position, positionToasts]) => (\r\n        positionToasts.length > 0 && (\r\n          <div\r\n            key={position}\r\n            className={`fixed z-50 m-4 flex flex-col ${getPositionClasses(position as ToastPosition)}`}\r\n            aria-live=\"polite\"\r\n          >\r\n            {positionToasts.map(toast => (\r\n              <ToastItem \r\n                key={toast.id} \r\n                toast={toast}\r\n                onClose={() => removeToast(toast.id)}\r\n              />\r\n            ))}\r\n          </div>\r\n        )\r\n      ))}\r\n    </ToastContext.Provider>\r\n  );\r\n};\r\n\r\n// Helper to get position classes\r\nconst getPositionClasses = (position: ToastPosition): string => {\r\n  switch (position) {\r\n    case 'top-left':\r\n      return 'top-0 left-0 items-start';\r\n    case 'top-center':\r\n      return 'top-0 left-1/2 -translate-x-1/2 items-center';\r\n    case 'top-right':\r\n      return 'top-0 right-0 items-end';\r\n    case 'bottom-left':\r\n      return 'bottom-0 left-0 items-start';\r\n    case 'bottom-center':\r\n      return 'bottom-0 left-1/2 -translate-x-1/2 items-center';\r\n    case 'bottom-right':\r\n      return 'bottom-0 right-0 items-end';\r\n    default:\r\n      return 'bottom-0 right-0 items-end';\r\n  }\r\n};\r\n\r\n// Individual Toast Item Component\r\ninterface ToastItemProps {\r\n  toast: Toast;\r\n  onClose: () => void;\r\n}\r\n\r\nconst ToastItem: React.FC<ToastItemProps> = ({ toast, onClose }) => {\r\n  const { id, type, title, message, duration, onClose: toastOnClose } = toast;\r\n\r\n  // Auto-dismiss after duration\r\n  useEffect(() => {\r\n    if (duration === Infinity) return;\r\n    \r\n    const timer = setTimeout(() => {\r\n      handleClose();\r\n    }, duration);\r\n    \r\n    return () => clearTimeout(timer);\r\n  }, [duration]);\r\n  \r\n  // Handle close action\r\n  const handleClose = useCallback(() => {\r\n    if (toastOnClose) {\r\n      toastOnClose();\r\n    }\r\n    onClose();\r\n  }, [onClose, toastOnClose]);\r\n  \r\n  // Toast type styles\r\n  const toastStyles = {\r\n    default: {\r\n      container: 'bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700',\r\n      icon: getIcon('info'),\r\n      iconClass: 'text-gray-500 dark:text-gray-400',\r\n    },\r\n    info: {\r\n      container: 'bg-blue-50 dark:bg-blue-900/20 border-blue-200 dark:border-blue-800',\r\n      icon: getIcon('info'),\r\n      iconClass: 'text-blue-500 dark:text-blue-400',\r\n    },\r\n    success: {\r\n      container: 'bg-green-50 dark:bg-green-900/20 border-green-200 dark:border-green-800',\r\n      icon: getIcon('check'),\r\n      iconClass: 'text-green-500 dark:text-green-400',\r\n    },\r\n    warning: {\r\n      container: 'bg-yellow-50 dark:bg-yellow-900/20 border-yellow-200 dark:border-yellow-800',\r\n      icon: getIcon('warning'),\r\n      iconClass: 'text-yellow-500 dark:text-yellow-400',\r\n    },\r\n    error: {\r\n      container: 'bg-red-50 dark:bg-red-900/20 border-red-200 dark:border-red-800',\r\n      icon: getIcon('xMark'),\r\n      iconClass: 'text-red-500 dark:text-red-400',\r\n    },\r\n  };\r\n\r\n  const { container, icon, iconClass } = toastStyles[type];\r\n\r\n  return (\r\n    <div\r\n      id={id}\r\n      className={`flex w-full max-w-xs sm:max-w-sm md:max-w-md items-center p-4 mb-3 rounded-md shadow-lg border ${container} animate-fade-in relative overflow-hidden`}\r\n      role=\"alert\"\r\n    >\r\n      {/* Progress bar */}\r\n      {duration !== Infinity && (\r\n        <div \r\n          className={`absolute bottom-0 left-0 h-1 ${iconClass.replace('text', 'bg')}`}\r\n          style={{ \r\n            animation: `shrink ${duration}ms linear forwards`,\r\n            width: '100%'\r\n          }}\r\n        />\r\n      )}\r\n      \r\n      {/* Content */}\r\n      <div className={`mr-3 ${iconClass}`}>{icon}</div>\r\n      <div className=\"flex-1 mr-2\">\r\n        {title && (\r\n          <h4 className=\"text-sm font-semibold mb-1 dark:text-white\">{title}</h4>\r\n        )}\r\n        <div className=\"text-sm font-normal dark:text-gray-300\">{message}</div>\r\n      </div>\r\n      \r\n      {/* Close button */}\r\n      <button\r\n        type=\"button\"\r\n        className=\"text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300 focus:outline-none\"\r\n        aria-label=\"Close\"\r\n        onClick={handleClose}\r\n      >\r\n        {getIcon('close')}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Toast loading animation\r\nconst globalStyle = `\r\n@keyframes shrink {\r\n  from {\r\n    width: 100%;\r\n  }\r\n  to {\r\n    width: 0%;\r\n  }\r\n}\r\n\r\n@keyframes fade-in {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(10px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n.animate-fade-in {\r\n  animation: fade-in 0.2s ease-out forwards;\r\n}\r\n`;\r\n\r\n// Insert global styles\r\nif (typeof document !== 'undefined') {\r\n  const styleEl = document.createElement('style');\r\n  styleEl.textContent = globalStyle;\r\n  document.head.appendChild(styleEl);\r\n}\r\n\r\n// Hook for using toast functionality\r\nexport const useToast = (): ToastContextProps => {\r\n  const context = useContext(ToastContext);\r\n  if (!context) {\r\n    throw new Error('useToast must be used within a ToastProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n// Helper function to create toast directly\r\nexport const toast = {\r\n  show: (message: ReactNode, options?: Omit<Toast, 'id' | 'message' | 'type'>) => {\r\n    const context = useContext(ToastContext);\r\n    if (!context) {\r\n      console.error('Toast provider not found');\r\n      return '';\r\n    }\r\n    return context.addToast({ type: 'default', message, ...options });\r\n  },\r\n  info: (message: ReactNode, options?: Omit<Toast, 'id' | 'message' | 'type'>) => {\r\n    const context = useContext(ToastContext);\r\n    if (!context) {\r\n      console.error('Toast provider not found');\r\n      return '';\r\n    }\r\n    return context.addToast({ type: 'info', message, ...options });\r\n  },\r\n  success: (message: ReactNode, options?: Omit<Toast, 'id' | 'message' | 'type'>) => {\r\n    const context = useContext(ToastContext);\r\n    if (!context) {\r\n      console.error('Toast provider not found');\r\n      return '';\r\n    }\r\n    return context.addToast({ type: 'success', message, ...options });\r\n  },\r\n  warning: (message: ReactNode, options?: Omit<Toast, 'id' | 'message' | 'type'>) => {\r\n    const context = useContext(ToastContext);\r\n    if (!context) {\r\n      console.error('Toast provider not found');\r\n      return '';\r\n    }\r\n    return context.addToast({ type: 'warning', message, ...options });\r\n  },\r\n  error: (message: ReactNode, options?: Omit<Toast, 'id' | 'message' | 'type'>) => {\r\n    const context = useContext(ToastContext);\r\n    if (!context) {\r\n      console.error('Toast provider not found');\r\n      return '';\r\n    }\r\n    return context.addToast({ type: 'error', message, ...options });\r\n  },\r\n};\r\n\r\nexport default ToastProvider;","import React, { ReactNode, lazy, Suspense } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Tool } from '../../../tools/index';\r\nimport { ResponsiveContainer } from './ResponsiveContainer';\r\nimport { LoadingSpinner } from '../feedback';\r\n\r\n// Import RelatedTools component dynamically\r\nconst RelatedTools = lazy(() => \r\n  import('../../../tools/RelatedTools')\r\n    .then(module => ({ default: module.default }))\r\n    .catch(() => ({ default: () => null }))\r\n);\r\n\r\nexport interface ToolLayoutProps {\r\n  /** Tool object containing metadata */\r\n  tool: Tool;\r\n  /** Content to be rendered inside the tool layout */\r\n  children: ReactNode;\r\n  /** Whether to show the tool header */\r\n  showHeader?: boolean;\r\n  /** Whether to show the tool description */\r\n  showDescription?: boolean;\r\n  /** Whether to show related tools */\r\n  showRelatedTools?: boolean;\r\n}\r\n\r\n/**\r\n * Standard layout wrapper for all tools with consistent UI\r\n * \r\n * @example\r\n * ```tsx\r\n * <ToolLayout tool={tool}>\r\n *   <div>Tool content goes here</div>\r\n * </ToolLayout>\r\n * ```\r\n */\r\nexport const ToolLayout: React.FC<ToolLayoutProps> = ({\r\n  tool,\r\n  children,\r\n  showHeader = true,\r\n  showDescription = true,\r\n  showRelatedTools = true\r\n}) => {\r\n  const { title, description, metadata, id } = tool;\r\n  const pageTitle = `${title} | MyDebugger`;\r\n  const pageDescription = description;\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{pageTitle}</title>\r\n        <meta name=\"description\" content={pageDescription} />\r\n        <meta property=\"og:title\" content={pageTitle} />\r\n        <meta property=\"og:description\" content={pageDescription} />\r\n        <meta property=\"og:type\" content=\"website\" />\r\n        <meta property=\"og:url\" content={`https://mydebugger.vercel.app${tool.route}`} />\r\n        <meta name=\"twitter:card\" content=\"summary\" />\r\n        <meta name=\"twitter:title\" content={pageTitle} />\r\n        <meta name=\"twitter:description\" content={pageDescription} />\r\n        <meta name=\"keywords\" content={metadata.keywords.join(', ')} />\r\n        <link rel=\"canonical\" href={`https://mydebugger.vercel.app${tool.route}`} />\r\n      </Helmet>\r\n      \r\n      <ResponsiveContainer maxWidth=\"6xl\" padding=\"md\" className=\"transition-colors duration-200\">\r\n        {showHeader && (\r\n          <div className=\"flex items-center mb-2\">\r\n            <div className=\"mr-3 p-2 bg-primary-100 dark:bg-primary-900 rounded-lg\">\r\n              <tool.icon className=\"h-8 w-8 text-primary-600 dark:text-primary-400\" />\r\n            </div>\r\n            <div className=\"flex items-center flex-wrap\">\r\n              <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white mr-2\">{title}</h1>\r\n              {tool.isBeta && (\r\n                <span className=\"ml-1 px-2 py-1 bg-yellow-100 dark:bg-yellow-900 text-yellow-800 dark:text-yellow-200 text-xs font-medium rounded\">\r\n                  BETA\r\n                </span>\r\n              )}\r\n              {tool.isNew && (\r\n                <span className=\"ml-1 px-2 py-1 bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200 text-xs font-medium rounded\">\r\n                  NEW\r\n                </span>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {showDescription && (\r\n          <div className=\"mb-8\">\r\n            <p className=\"text-gray-600 dark:text-gray-300\">{description}</p>\r\n          </div>\r\n        )}\r\n        \r\n        <div className={`${tool.uiOptions?.fullWidth ? \"w-full\" : \"\"} animate-fade-in`}>\r\n          {children}\r\n        </div>\r\n        \r\n        {showRelatedTools && (\r\n          <Suspense fallback={<LoadingSpinner size=\"sm\" />}>\r\n            <RelatedTools toolId={id} />\r\n          </Suspense>\r\n        )}\r\n        \r\n        {metadata.learnMoreUrl && (\r\n          <div className=\"mt-8 border-t border-gray-200 dark:border-gray-700 pt-6\">\r\n            <h2 className=\"text-xl font-semibold mb-4 text-gray-900 dark:text-white\">Learn More</h2>\r\n            <div className=\"bg-white dark:bg-gray-800 p-4 rounded-md border border-gray-200 dark:border-gray-700 shadow-sm\">\r\n              <a \r\n                href={metadata.learnMoreUrl} \r\n                target=\"_blank\" \r\n                rel=\"noopener noreferrer\"\r\n                className=\"text-primary-600 dark:text-primary-400 hover:text-primary-700 dark:hover:text-primary-300 font-medium inline-flex items-center\"\r\n              >\r\n                Read more about {title}\r\n                <svg className=\"h-4 w-4 ml-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\" />\r\n                </svg>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </ResponsiveContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ToolLayout;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getIcon } from '../design-system/icons';\r\nimport { Card } from '../design-system/components/layout';\r\n\r\nconst Footer: React.FC = () => {\r\n  return (\r\n    <footer className=\"bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-300 shadow-inner transition-colors duration-200 mt-auto\">\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\r\n          <div>\r\n            <h3 className=\"text-lg font-bold mb-3 text-gray-900 dark:text-white flex items-center\">\r\n              <span className=\"mr-2\">{getIcon('code')}</span>\r\n              MyDebugger\r\n            </h3>\r\n            <p className=\"text-gray-600 dark:text-gray-400 text-sm\">\r\n              A platform for debugging, encoding, decoding & demonstrating your technical work.\r\n            </p>\r\n          </div>\r\n          \r\n          <div>\r\n            <h3 className=\"text-lg font-bold mb-3 text-gray-900 dark:text-white\">Links</h3>\r\n            <ul className=\"space-y-2 text-sm\">\r\n              <li>\r\n                <Link to=\"/\" className=\"text-gray-600 dark:text-gray-400 hover:text-primary-600 dark:hover:text-primary-400 transition flex items-center\">\r\n                  <span className=\"mr-2\">{getIcon('home')}</span>\r\n                  Home\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <a href=\"https://github.com/yourusername/mydebugger\" \r\n                  className=\"text-gray-600 dark:text-gray-400 hover:text-primary-600 dark:hover:text-primary-400 transition flex items-center\" \r\n                  target=\"_blank\" \r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  <span className=\"mr-2\">{getIcon('link')}</span>\r\n                  GitHub\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/about\" className=\"text-gray-600 dark:text-gray-400 hover:text-primary-600 dark:hover:text-primary-400 transition flex items-center\">\r\n                  <span className=\"mr-2\">{getIcon('info')}</span>\r\n                  About\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          \r\n          <div>\r\n            <h3 className=\"text-lg font-bold mb-3 text-gray-900 dark:text-white\">Share</h3>\r\n            <div className=\"flex space-x-4\">\r\n              <Card isInteractive className=\"p-2\">\r\n                <a \r\n                  href=\"#\" \r\n                  className=\"text-gray-500 dark:text-gray-400 hover:text-primary-600 dark:hover:text-primary-400 transition\"\r\n                  aria-label=\"Twitter\"\r\n                >\r\n                  <svg className=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path d=\"M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.937 4.937 0 004.604 3.417 9.868 9.868 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63a9.936 9.936 0 002.46-2.548l-.047-.02z\" />\r\n                  </svg>\r\n                </a>\r\n              </Card>\r\n              <Card isInteractive className=\"p-2\">\r\n                <a \r\n                  href=\"#\" \r\n                  className=\"text-gray-500 dark:text-gray-400 hover:text-primary-600 dark:hover:text-primary-400 transition\"\r\n                  aria-label=\"LinkedIn\"\r\n                >\r\n                  <svg className=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path d=\"M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z\" />\r\n                  </svg>\r\n                </a>\r\n              </Card>\r\n              <Card isInteractive className=\"p-2\">\r\n                <a \r\n                  href=\"#\" \r\n                  className=\"text-gray-500 dark:text-gray-400 hover:text-primary-600 dark:hover:text-primary-400 transition\"\r\n                  aria-label=\"GitHub\"\r\n                >\r\n                  <svg className=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\"/>\r\n                  </svg>\r\n                </a>\r\n              </Card>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"border-t border-gray-200 dark:border-gray-700 mt-8 pt-6 text-sm text-gray-500 dark:text-gray-500 text-center\">\r\n          <p>© {new Date().getFullYear()} MyDebugger. All rights reserved.</p>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { getIcon } from '../../icons';\r\n\r\nexport type BadgeVariant = \r\n  | 'primary' \r\n  | 'secondary' \r\n  | 'success' \r\n  | 'danger' \r\n  | 'warning' \r\n  | 'info' \r\n  | 'light' \r\n  | 'dark';\r\n\r\nexport type BadgeSize = 'xs' | 'sm' | 'md' | 'lg';\r\n\r\nexport interface BadgeProps {\r\n  /** Content to display inside the badge (string, number, or ReactNode) */\r\n  children?: React.ReactNode;\r\n  /** The visual style variant of the badge */\r\n  variant?: BadgeVariant;\r\n  /** Color alias for variant prop (for backwards compatibility) */\r\n  color?: BadgeVariant;\r\n  /** Size of the badge */\r\n  size?: BadgeSize;\r\n  /** Whether the badge should be shown as a dot only */\r\n  dot?: boolean;\r\n  /** Whether the badge is displayed inline (affects margin/padding) */\r\n  inline?: boolean;\r\n  /** Whether the badge should have a slight pulse animation */\r\n  pulse?: boolean;\r\n  /** Whether the badge should have a pill shape (more rounded corners) */\r\n  pill?: boolean;\r\n  /** Maximum value to show (will display e.g. \"9+\" for values over 9) */\r\n  max?: number;\r\n  /** Whether badge is invisible */\r\n  invisible?: boolean;\r\n  /** Custom CSS class */\r\n  className?: string;\r\n  /** Optional click handler */\r\n  onClick?: (e: React.MouseEvent<HTMLSpanElement>) => void;\r\n  /** Optional icon to display (emoji name from icon system) */\r\n  icon?: string;\r\n}\r\n\r\n/**\r\n * Badge - A versatile component for displaying status indicators, counts, and notifications\r\n * \r\n * @description\r\n * Badges are small visual indicators typically used to display counts, status, or to \r\n * highlight new or unread items. They can appear as standalone components or be attached \r\n * to other elements like buttons or navigation items.\r\n * \r\n * @accessibility\r\n * - When used as a button (with onClick handler), includes appropriate role=\"button\" and tabIndex\r\n * - Contrast ratios meet WCAG standards for all variants\r\n * - When displaying numbers, respects max prop to ensure the text remains readable\r\n * \r\n * @example\r\n * ```tsx\r\n * // Basic badge\r\n * <Badge>42</Badge>\r\n * \r\n * // Status badge\r\n * <Badge variant=\"success\">Active</Badge>\r\n * \r\n * // Notification dot\r\n * <BadgeContainer>\r\n *   <Icon name=\"bell\" />\r\n *   <Badge dot variant=\"danger\" />\r\n * </BadgeContainer>\r\n * \r\n * // With maximum value\r\n * <Badge max={99}>150</Badge> // Displays \"99+\"\r\n * ```\r\n */\r\nexport const Badge: React.FC<BadgeProps> = ({\r\n  children,\r\n  variant = 'primary',\r\n  color,\r\n  size = 'md',\r\n  dot = false,\r\n  inline = false,\r\n  pulse = false,\r\n  pill = false,\r\n  max,\r\n  invisible = false,\r\n  className = '',\r\n  onClick,\r\n  icon,\r\n  ...rest\r\n}) => {\r\n  // Don't render if invisible\r\n  if (invisible) {\r\n    return null;\r\n  }\r\n\r\n  // Use color prop as fallback for variant (for backwards compatibility)\r\n  const finalVariant = variant || color || 'primary';\r\n\r\n  // Process content\r\n  let content = children;\r\n  \r\n  // For numerical values, respect max limit\r\n  if (typeof children === 'number' && max !== undefined && children > max) {\r\n    content = `${max}+`;\r\n  }\r\n  \r\n  // If icon is provided, use emoji\r\n  if (icon && !content) {\r\n    content = getIcon(icon as any);\r\n  }\r\n  \r\n  // Variant classes with dark mode support\r\n  const variantClasses = {\r\n    primary: 'bg-blue-500 dark:bg-blue-600 text-white',\r\n    secondary: 'bg-gray-500 dark:bg-gray-600 text-white',\r\n    success: 'bg-green-500 dark:bg-green-600 text-white',\r\n    danger: 'bg-red-500 dark:bg-red-600 text-white',\r\n    warning: 'bg-yellow-500 dark:bg-yellow-600 text-white dark:text-gray-900',\r\n    info: 'bg-cyan-500 dark:bg-cyan-600 text-white',\r\n    light: 'bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200',\r\n    dark: 'bg-gray-800 dark:bg-gray-900 text-white',\r\n  };\r\n\r\n  // Size classes\r\n  const sizeClasses = {\r\n    xs: dot ? 'h-1.5 w-1.5' : 'h-4 min-w-4 text-xs px-1',\r\n    sm: dot ? 'h-2 w-2' : 'h-5 min-w-5 text-xs px-1.5',\r\n    md: dot ? 'h-2.5 w-2.5' : 'h-6 min-w-6 text-sm px-1.5',\r\n    lg: dot ? 'h-3 w-3' : 'h-7 min-w-7 text-base px-2',\r\n  };\r\n\r\n  // Position classes\r\n  const positionClasses = inline ? 'relative inline-flex' : 'absolute -top-2 -right-2';\r\n\r\n  // Shape classes\r\n  const shapeClasses = pill ? 'rounded-full' : 'rounded';\r\n\r\n  // Animation classes\r\n  const animationClasses = pulse \r\n    ? 'animate-pulse' \r\n    : '';\r\n\r\n  // Combine all classes\r\n  const badgeClasses = [\r\n    dot ? 'flex' : 'inline-flex items-center justify-center',\r\n    variantClasses[finalVariant],\r\n    sizeClasses[size],\r\n    positionClasses,\r\n    shapeClasses,\r\n    animationClasses,\r\n    onClick ? 'cursor-pointer' : '',\r\n    className\r\n  ].filter(Boolean).join(' ');\r\n\r\n  return (\r\n    <span \r\n      className={badgeClasses}\r\n      onClick={onClick}\r\n      role={onClick ? 'button' : undefined}\r\n      tabIndex={onClick ? 0 : undefined}\r\n      {...rest}\r\n    >\r\n      {!dot && content}\r\n    </span>\r\n  );\r\n};\r\n\r\n/**\r\n * BadgeContainer - A wrapper component to position badges relative to their parent elements\r\n * \r\n * @description\r\n * BadgeContainer creates a positioning context for badges, allowing them to be properly\r\n * positioned relative to other elements like icons, buttons, or menu items.\r\n * \r\n * @accessibility\r\n * - Maintains proper parent-child relationship for assistive technologies\r\n * - Preserves the accessibility of wrapped children\r\n * \r\n * @example\r\n * ```tsx\r\n * // Basic usage with notification badge\r\n * <BadgeContainer>\r\n *   <Button>Notifications</Button>\r\n *   <Badge>5</Badge>\r\n * </BadgeContainer>\r\n * \r\n * // With status indicator\r\n * <BadgeContainer>\r\n *   <Avatar src=\"/user.jpg\" alt=\"User profile\" />\r\n *   <Badge dot variant=\"success\" />\r\n * </BadgeContainer>\r\n * ```\r\n */\r\nexport const BadgeContainer: React.FC<{\r\n  /** Elements to wrap with the badge container */\r\n  children: React.ReactNode;\r\n  /** Optional CSS class to apply to the container */\r\n  className?: string;\r\n}> = ({ \r\n  children, \r\n  className = '' \r\n}) => {\r\n  return (\r\n    <div className={`relative inline-block ${className}`}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Badge;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { \r\n  getAllCategories, \r\n  getPopularTools, \r\n  getNewTools,\r\n  getAllTools, \r\n  ToolCategory, \r\n  Tool, \r\n  categories \r\n} from '../tools';\r\n\r\n// Import components from design system instead of legacy components\r\nimport { Card } from '../design-system/components/layout';\r\nimport { Button } from '../design-system/components/inputs';\r\nimport { Badge } from '../design-system/components/display';\r\nimport { getIcon } from '../design-system/icons';\r\n\r\n// Responsive container component (we can create this in the layout category if needed)\r\nconst ResponsiveContainer: React.FC<{\r\n  children: React.ReactNode;\r\n  maxWidth?: string;\r\n  padding?: string;\r\n}> = ({ children, maxWidth = \"7xl\", padding = \"md\" }) => {\r\n  const maxWidthClass = {\r\n    sm: 'max-w-sm',\r\n    md: 'max-w-md',\r\n    lg: 'max-w-lg',\r\n    xl: 'max-w-xl',\r\n    '2xl': 'max-w-2xl',\r\n    '3xl': 'max-w-3xl',\r\n    '4xl': 'max-w-4xl',\r\n    '5xl': 'max-w-5xl',\r\n    '6xl': 'max-w-6xl',\r\n    '7xl': 'max-w-7xl',\r\n    full: 'max-w-full',\r\n  }[maxWidth] || 'max-w-7xl';\r\n\r\n  const paddingClass = {\r\n    none: 'px-0',\r\n    xs: 'px-2',\r\n    sm: 'px-4',\r\n    md: 'px-6',\r\n    lg: 'px-8',\r\n    xl: 'px-12',\r\n  }[padding] || 'px-6';\r\n\r\n  return (\r\n    <div className={`${maxWidthClass} mx-auto w-full ${paddingClass}`}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Home: React.FC = () => {\r\n  const [searchQuery, setSearchQuery] = useState<string>('');\r\n  const [activeFilter, setActiveFilter] = useState<'all' | 'popular' | 'new' | ToolCategory>('all');\r\n  \r\n  const allTools = getAllTools();\r\n  const allCategories = getAllCategories();\r\n  const popularTools = getPopularTools();\r\n  const newTools = getNewTools();\r\n\r\n  // Filter tools based on search query and active filter\r\n  const filteredTools = allTools.filter(tool => {\r\n    // Search filter\r\n    const matchesSearch = searchQuery === '' || \r\n      tool.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n      tool.description.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n      tool.metadata.keywords.some(keyword => \r\n        keyword.toLowerCase().includes(searchQuery.toLowerCase())\r\n      );\r\n    \r\n    // Category filter\r\n    let matchesFilter = true;\r\n    if (activeFilter === 'popular') {\r\n      matchesFilter = tool.isPopular === true;\r\n    } else if (activeFilter === 'new') {\r\n      matchesFilter = tool.isNew === true;\r\n    } else if (activeFilter !== 'all') {\r\n      matchesFilter = tool.category === activeFilter;\r\n    }\r\n    \r\n    return matchesSearch && matchesFilter;\r\n  });\r\n  \r\n  return (\r\n    <ResponsiveContainer maxWidth=\"7xl\" padding=\"md\">\r\n      {/* Hero Section */}\r\n      <div className=\"bg-gradient-to-r from-blue-600 to-indigo-700 rounded-xl p-8 mb-12 shadow-lg text-white\">\r\n        <div className=\"max-w-3xl mx-auto text-center\">\r\n          <h1 className=\"text-4xl md:text-5xl font-bold mb-4\">Developer Tool Hub</h1>\r\n          <p className=\"text-xl md:text-2xl text-blue-100 mb-8\">\r\n            Powerful tools for developers to debug, encode, decode & test your applications\r\n          </p>\r\n          \r\n          {/* Search Box */}\r\n          <div className=\"relative max-w-xl mx-auto\">\r\n            <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n              {/* Using the design system icon */}\r\n              <span className=\"text-blue-300\">{getIcon('search')}</span>\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search for tools...\"\r\n              className=\"w-full pl-10 pr-4 py-3 rounded-lg text-gray-800 bg-white bg-opacity-90 focus:bg-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition\"\r\n              value={searchQuery}\r\n              onChange={(e) => setSearchQuery(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Filter Tabs */}\r\n      <div className=\"flex flex-wrap gap-2 mb-8\">\r\n        <FilterTab \r\n          label=\"All Tools\" \r\n          isActive={activeFilter === 'all'} \r\n          onClick={() => setActiveFilter('all')} \r\n        />\r\n        <FilterTab \r\n          label=\"Popular\" \r\n          isActive={activeFilter === 'popular'} \r\n          onClick={() => setActiveFilter('popular')} \r\n          count={popularTools.length}\r\n        />\r\n        {newTools.length > 0 && (\r\n          <FilterTab \r\n            label=\"New\" \r\n            isActive={activeFilter === 'new'} \r\n            onClick={() => setActiveFilter('new')} \r\n            count={newTools.length}\r\n            highlight\r\n          />\r\n        )}\r\n        \r\n        <div className=\"h-6 border-r border-gray-300 mx-2\"></div>\r\n        \r\n        {allCategories.map((category) => {\r\n          const CategoryIcon = categories[category].icon;\r\n          return (\r\n            <FilterTab \r\n              key={category} \r\n              label={category} \r\n              isActive={activeFilter === category} \r\n              onClick={() => setActiveFilter(category)} \r\n              icon={<CategoryIcon className=\"h-4 w-4 mr-1.5\" />}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      \r\n      {/* Tools Grid */}\r\n      {filteredTools.length > 0 ? (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {filteredTools.map((tool) => (\r\n            <ToolCard key={tool.id} tool={tool} />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div className=\"text-center py-12\">\r\n          <h3 className=\"text-xl font-medium text-gray-700 mb-2\">No matching tools found</h3>\r\n          <p className=\"text-gray-500 mb-4\">Try adjusting your search or filter criteria</p>\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={() => {\r\n              setSearchQuery('');\r\n              setActiveFilter('all');\r\n            }}\r\n          >\r\n            Reset Filters\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\n// Filter Tab Component\r\ninterface FilterTabProps {\r\n  label: string;\r\n  isActive: boolean;\r\n  onClick: () => void;\r\n  count?: number;\r\n  highlight?: boolean;\r\n  icon?: React.ReactNode;\r\n}\r\n\r\nconst FilterTab: React.FC<FilterTabProps> = ({ \r\n  label, \r\n  isActive, \r\n  onClick, \r\n  count, \r\n  highlight = false,\r\n  icon\r\n}) => {\r\n  return (\r\n    <Button\r\n      onClick={onClick}\r\n      variant={isActive ? \"primary\" : \"ghost\"}\r\n      size=\"sm\"\r\n      icon={icon}\r\n      className={`\r\n        rounded-full\r\n        ${highlight && !isActive ? 'ring-2 ring-green-400' : ''}\r\n      `}\r\n    >\r\n      {label}\r\n      {count !== undefined && (\r\n        <Badge \r\n          variant={isActive ? \"light\" : \"secondary\"} \r\n          size=\"xs\" \r\n          inline \r\n          pill\r\n          className=\"ml-1.5\"\r\n        >\r\n          {count}\r\n        </Badge>\r\n      )}\r\n    </Button>\r\n  );\r\n};\r\n\r\n// Tool Card Component\r\ninterface ToolCardProps {\r\n  tool: Tool;\r\n}\r\n\r\nconst ToolCard: React.FC<ToolCardProps> = ({ tool }) => {\r\n  const { title, description, route, icon: Icon, isNew, isBeta } = tool;\r\n  \r\n  return (\r\n    <Link to={route}>\r\n      <Card \r\n        isElevated \r\n        isInteractive \r\n        className=\"h-full\"\r\n      >\r\n        <div className=\"flex flex-col h-full\">\r\n          <div className=\"flex items-start mb-4\">\r\n            <div className=\"p-2 rounded-lg bg-blue-50 mr-4\">\r\n              <Icon className=\"h-6 w-6 text-blue-500\" />\r\n            </div>\r\n            <div className=\"flex-1\">\r\n              <div className=\"flex items-center\">\r\n                <h3 className=\"text-lg font-semibold text-gray-800\">{title}</h3>\r\n                {isNew && (\r\n                  <Badge variant=\"success\" size=\"sm\" className=\"ml-2\">NEW</Badge>\r\n                )}\r\n                {isBeta && (\r\n                  <Badge variant=\"warning\" size=\"sm\" className=\"ml-2\">BETA</Badge>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <p className=\"text-gray-600 flex-grow\">{description}</p>\r\n          \r\n          <div className=\"mt-6 flex justify-between items-center\">\r\n            <span className=\"text-xs font-medium text-gray-500 uppercase\">\r\n              {tool.category}\r\n            </span>\r\n            <span className=\"text-blue-600 font-medium text-sm flex items-center\">\r\n              Try now\r\n              {getIcon('arrow-right')}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from '../design-system/components/inputs';\r\nimport { Card } from '../design-system/components/layout';\r\nimport { getIcon } from '../design-system/icons';\r\n\r\nconst NotFound: React.FC = () => {\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-16 flex justify-center\">\r\n      <Card isElevated className=\"max-w-md text-center p-8\">\r\n        <div className=\"text-6xl font-bold text-gray-400 mb-4\">{getIcon('error')}</div>\r\n        <h1 className=\"text-6xl font-bold text-gray-800 mb-4\">404</h1>\r\n        <h2 className=\"text-2xl font-semibold text-gray-700 mb-6\">Page Not Found</h2>\r\n        <p className=\"text-gray-600 mb-8\">\r\n          Sorry, the page you are looking for might have been removed or doesn't exist.\r\n        </p>\r\n        <Link to=\"/\">\r\n          <Button \r\n            variant=\"primary\"\r\n            icon=\"home\"\r\n          >\r\n            Back to Home\r\n          </Button>\r\n        </Link>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;","import React, { Suspense } from 'react';\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\nimport Header from './layout/Header';\r\nimport Footer from './layout/Footer';\r\nimport Home from './pages/Home';\r\nimport NotFound from './pages/NotFound';\r\nimport toolRegistry from './tools';\r\nimport { ThemeProvider } from './design-system/context/ThemeContext';\r\nimport { LoadingSpinner } from './design-system/components/feedback';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <ThemeProvider>\r\n      <BrowserRouter basename=\"/\">\r\n        <div className=\"min-h-screen flex flex-col bg-gray-50 dark:bg-gray-900 transition-colors duration-200\">\r\n          <Header />\r\n          \r\n          <main className=\"flex-grow\">\r\n            <Suspense fallback={<LoadingSpinner />}>\r\n              <Routes>\r\n                <Route path=\"/\" element={<Home />} />\r\n                \r\n                {/* Dynamic routes for all tools */}\r\n                {toolRegistry.map((tool) => (\r\n                  <Route\r\n                    key={tool.route}\r\n                    path={tool.route}\r\n                    element={<tool.component />}\r\n                  />\r\n                ))}\r\n                \r\n                {/* Catch-all route for 404s */}\r\n                <Route path=\"*\" element={<NotFound />} />\r\n              </Routes>\r\n            </Suspense>\r\n          </main>\r\n          \r\n          <Footer />\r\n        </div>\r\n      </BrowserRouter>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.createRoot(document.getElementById('root')!).render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n);"],"file":"assets/index-a8d3ac02.js"}