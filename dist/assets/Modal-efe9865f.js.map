{"version":3,"file":"Modal-efe9865f.js","sources":["../../src/design-system/components/overlays/Modal.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nexport type ModalSize = 'sm' | 'md' | 'lg' | 'xl' | '2xl' | 'full';\r\n\r\nexport interface ModalProps {\r\n  /** Whether the modal is currently open */\r\n  isOpen: boolean;\r\n  /** Callback fired when the modal is closed */\r\n  onClose: () => void;\r\n  /** Title shown in the modal header */\r\n  title?: React.ReactNode;\r\n  /** Optional description shown below the title */\r\n  description?: React.ReactNode;\r\n  /** Content of the modal */\r\n  children: React.ReactNode;\r\n  /** Size of the modal */\r\n  size?: ModalSize;\r\n  /** Whether the modal can be closed by clicking outside */\r\n  closeOnClickOutside?: boolean;\r\n  /** Alias for closeOnClickOutside for backwards compatibility */\r\n  closeOnBackdropClick?: boolean;\r\n  /** Whether the modal can be closed by pressing Escape */\r\n  closeOnEsc?: boolean;\r\n  /** Whether to render a close button in the header */\r\n  showCloseButton?: boolean;\r\n  /** Custom footer content */\r\n  footer?: React.ReactNode;\r\n  /** Whether to center the modal vertically */\r\n  centered?: boolean;\r\n  /** Custom modal header */\r\n  header?: React.ReactNode;\r\n  /** Custom CSS class for the modal container */\r\n  className?: string;\r\n  /** Custom CSS class for the backdrop */\r\n  backdropClassName?: string;\r\n  /** HTML id for the modal */\r\n  id?: string;\r\n  /** Whether the modal is in a loading state */\r\n  loading?: boolean;\r\n  /** Whether the modal should animate */\r\n  animate?: boolean;\r\n  /** Whether the modal should be full height */\r\n  fullHeight?: boolean;\r\n}\r\n\r\n// Define types for the subcomponents\r\ntype ModalHeaderProps = {\r\n  /** Title for the modal header */\r\n  title?: React.ReactNode;\r\n  /** Subtitle or description to display below the title */\r\n  subtitle?: React.ReactNode;\r\n  /** Handler for close button click */\r\n  onClose?: () => void;\r\n  /** Additional CSS classes to apply */\r\n  className?: string;\r\n  /** Direct child content (used when title is not specified) */\r\n  children?: React.ReactNode;\r\n};\r\n\r\ntype ModalFooterProps = {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n};\r\n\r\ntype ModalBodyProps = {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n};\r\n\r\n// Define the Modal component type with subcomponents\r\ninterface ModalComponent extends React.FC<ModalProps> {\r\n  Header: React.FC<ModalHeaderProps>;\r\n  Footer: React.FC<ModalFooterProps>;\r\n  Body: React.FC<ModalBodyProps>;\r\n}\r\n\r\n/**\r\n * Modal - A dialog component that focuses user attention on specific content or actions\r\n * \r\n * @description\r\n * Modals present content in a layer that sits above the page, requiring user interaction\r\n * before they can return to the underlying page. They're useful for focusing attention on\r\n * important information, collecting user input, or presenting details without navigating\r\n * away from the current context.\r\n * \r\n * The Modal component provides a customizable and accessible dialog with support for\r\n * different sizes, animations, headers, footers, and content areas. It manages focus\r\n * trapping and keyboard interactions automatically.\r\n * \r\n * @accessibility\r\n * - Uses ARIA role=\"dialog\" and aria-modal=\"true\" for screen reader identification\r\n * - Manages keyboard focus trapping within the modal when open\r\n * - Supports closing via ESC key for keyboard users\r\n * - Associates header text with the dialog using aria-labelledby\r\n * - Associates description text with the dialog using aria-describedby\r\n * - Provides proper focus management when opening and closing\r\n * - Respects reduced motion preferences for animations\r\n * \r\n * @example\r\n * // Basic modal with title and buttons\r\n * const [isOpen, setIsOpen] = useState(false);\r\n * \r\n * <Button onClick={() => setIsOpen(true)}>Open Modal</Button>\r\n * \r\n * <Modal\r\n *   isOpen={isOpen}\r\n *   onClose={() => setIsOpen(false)}\r\n *   title=\"Confirm Action\"\r\n *   footer={\r\n *     <>\r\n *       <Button variant=\"light\" onClick={() => setIsOpen(false)}>Cancel</Button>\r\n *       <Button onClick={handleConfirm}>Confirm</Button>\r\n *     </>\r\n *   }\r\n * >\r\n *   <p>Are you sure you want to proceed with this action?</p>\r\n * </Modal>\r\n * \r\n * // Using Modal with compositional components\r\n * <Modal isOpen={isOpen} onClose={handleClose} size=\"lg\">\r\n *   <Modal.Header title=\"Edit Profile\" subtitle=\"Update your profile information\" onClose={handleClose} />\r\n *   <Modal.Body>\r\n *     <Form>Form fields go here</Form>\r\n *   </Modal.Body>\r\n *   <Modal.Footer>\r\n *     <Button variant=\"light\" onClick={handleClose}>Cancel</Button>\r\n *     <Button onClick={handleSave}>Save Changes</Button>\r\n *   </Modal.Footer>\r\n * </Modal>\r\n */\r\nexport const Modal: ModalComponent = ({\r\n  isOpen,\r\n  onClose,\r\n  title,\r\n  description,\r\n  children,\r\n  size = 'md',\r\n  closeOnClickOutside = true,\r\n  closeOnBackdropClick,\r\n  closeOnEsc = true,\r\n  showCloseButton = true,\r\n  footer,\r\n  centered = false, \r\n  header,\r\n  className = '',\r\n  backdropClassName = '',\r\n  id,\r\n  loading = false,\r\n  animate = true,\r\n  fullHeight = false,\r\n}) => {\r\n  const [mounted, setMounted] = useState(false);\r\n  const modalRef = useRef<HTMLDivElement>(null);\r\n  \r\n  // Use closeOnBackdropClick if provided, otherwise fall back to closeOnClickOutside\r\n  const shouldCloseOnClickOutside = closeOnBackdropClick !== undefined ? closeOnBackdropClick : closeOnClickOutside;\r\n  \r\n  // Mount the modal in the DOM only on the client side\r\n  useEffect(() => {\r\n    setMounted(true);\r\n    \r\n    // Lock body scroll when modal is open\r\n    if (isOpen) {\r\n      document.body.style.overflow = 'hidden';\r\n    }\r\n    \r\n    // Cleanup function\r\n    return () => {\r\n      document.body.style.overflow = '';\r\n    };\r\n  }, [isOpen]);\r\n  \r\n  // Handle click outside the modal\r\n  const handleBackdropClick = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    if (shouldCloseOnClickOutside && e.target === e.currentTarget) {\r\n      onClose();\r\n    }\r\n  };\r\n  \r\n  // Handle ESC key press\r\n  useEffect(() => {\r\n    const handleKeyDown = (e: KeyboardEvent) => {\r\n      if (closeOnEsc && e.key === 'Escape' && isOpen) {\r\n        onClose();\r\n      }\r\n    };\r\n    \r\n    document.addEventListener('keydown', handleKeyDown);\r\n    \r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [closeOnEsc, isOpen, onClose]);\r\n  \r\n  // Auto-focus the first focusable element in the modal when opened\r\n  useEffect(() => {\r\n    if (isOpen && modalRef.current) {\r\n      const focusableElements = modalRef.current.querySelectorAll(\r\n        'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\r\n      ) as NodeListOf<HTMLElement>;\r\n      \r\n      if (focusableElements.length > 0) {\r\n        focusableElements[0].focus();\r\n      }\r\n    }\r\n  }, [isOpen]);\r\n  \r\n  // Size classes for the modal\r\n  const sizeClasses = {\r\n    sm: 'max-w-sm',\r\n    md: 'max-w-md',\r\n    lg: 'max-w-lg',\r\n    xl: 'max-w-xl',\r\n    '2xl': 'max-w-2xl',\r\n    full: 'max-w-full min-h-screen w-full m-0',\r\n  };\r\n  \r\n  // Transition classes with reduced motion support\r\n  const backdropTransitionClasses = animate \r\n    ? 'transition-opacity duration-300 ease-in-out motion-reduce:transition-none'\r\n    : '';\r\n    \r\n  const modalTransitionClasses = animate\r\n    ? 'transition-all duration-300 ease-in-out motion-reduce:transition-none'\r\n    : '';\r\n  \r\n  // Modal container classes\r\n  const modalContainerClasses = [\r\n    'relative bg-white dark:bg-gray-900 rounded-lg shadow-xl overflow-hidden',\r\n    'w-full mx-4',\r\n    size !== 'full' ? sizeClasses[size] : 'rounded-none',\r\n    fullHeight ? 'h-full' : '',\r\n    modalTransitionClasses,\r\n    className,\r\n  ].filter(Boolean).join(' ');\r\n  \r\n  // Backdrop classes\r\n  const backdropClasses = [\r\n    'fixed inset-0 flex items-center bg-black bg-opacity-50 z-50',\r\n    centered ? 'items-center' : 'items-start md:items-center pt-16 md:pt-0',\r\n    backdropClassName,\r\n    backdropTransitionClasses,\r\n  ].filter(Boolean).join(' ');\r\n  \r\n  // Don't render anything if not mounted (SSR case)\r\n  if (!mounted) {\r\n    return null;\r\n  }\r\n  \r\n  // Create the modal content\r\n  const modalContent = (\r\n    <div\r\n      className={backdropClasses}\r\n      style={{ \r\n        opacity: isOpen ? 1 : 0,\r\n        pointerEvents: isOpen ? 'auto' : 'none'\r\n      }}\r\n      onClick={handleBackdropClick}\r\n      aria-hidden={!isOpen}\r\n      role=\"dialog\"\r\n      aria-modal=\"true\"\r\n      aria-labelledby={title ? `${id}-title` : undefined}\r\n      aria-describedby={description ? `${id}-description` : undefined}\r\n    >\r\n      {/* Modal container */}\r\n      <div\r\n        ref={modalRef}\r\n        className={modalContainerClasses}\r\n        style={{ \r\n          transform: isOpen ? 'scale(1) translateY(0)' : 'scale(0.95) translateY(-10px)',\r\n          opacity: isOpen ? 1 : 0\r\n        }}\r\n        id={id}\r\n      >\r\n        {/* Modal header */}\r\n        {(title || header || showCloseButton) && (\r\n          <div className=\"px-6 py-4 border-b border-gray-200 dark:border-gray-700 flex justify-between items-center\">\r\n            {header || (\r\n              <div>\r\n                {title && (\r\n                  <h3 \r\n                    id={`${id}-title`} \r\n                    className=\"text-lg font-medium text-gray-900 dark:text-gray-100\"\r\n                  >\r\n                    {title}\r\n                  </h3>\r\n                )}\r\n                {description && (\r\n                  <p \r\n                    id={`${id}-description`} \r\n                    className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\"\r\n                  >\r\n                    {description}\r\n                  </p>\r\n                )}\r\n              </div>\r\n            )}\r\n            \r\n            {showCloseButton && (\r\n              <button\r\n                type=\"button\"\r\n                className=\"p-1 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-primary-500 transition-colors duration-200 motion-reduce:transition-none\"\r\n                onClick={onClose}\r\n                aria-label=\"Close modal\"\r\n              >\r\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n                </svg>\r\n              </button>\r\n            )}\r\n          </div>\r\n        )}\r\n        \r\n        {/* Modal body */}\r\n        <div className={`p-6 ${fullHeight ? 'overflow-y-auto flex-1' : ''}`}>\r\n          {loading ? (\r\n            <div className=\"flex justify-center items-center py-8\">\r\n              <div className=\"animate-spin motion-reduce:animate-[spin_1.5s_linear_infinite] rounded-full h-10 w-10 border-t-2 border-b-2 border-primary-500\"></div>\r\n            </div>\r\n          ) : (\r\n            children\r\n          )}\r\n        </div>\r\n        \r\n        {/* Modal footer */}\r\n        {footer && (\r\n          <div className=\"px-6 py-4 border-t border-gray-200 dark:border-gray-700 flex justify-end space-x-3\">\r\n            {footer}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n  // Use portal to render the modal at the end of the document body\r\n  return createPortal(modalContent, document.body);\r\n};\r\n\r\n/**\r\n * Modal.Header - A reusable header component for modals\r\n * \r\n * @description\r\n * Provides a consistent header layout for modals with optional title, subtitle,\r\n * and close button. Use this component for semantic markup and consistent styling.\r\n * \r\n * @example\r\n * <Modal.Header \r\n *   title=\"Edit Profile\"\r\n *   subtitle=\"Update your personal information\" \r\n *   onClose={handleClose}\r\n * />\r\n */\r\nModal.Header = function ModalHeader({\r\n  title,\r\n  subtitle,\r\n  onClose,\r\n  className = '',\r\n  children,\r\n}: ModalHeaderProps) {\r\n  return (\r\n    <div className={`px-6 py-4 border-b border-gray-200 dark:border-gray-700 flex justify-between items-center ${className}`}>\r\n      <div>\r\n        {title && (\r\n          <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">\r\n            {title}\r\n          </h3>\r\n        )}\r\n        {subtitle && (\r\n          <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\r\n            {subtitle}\r\n          </p>\r\n        )}\r\n        {!title && children && (\r\n          <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">\r\n            {children}\r\n          </h3>\r\n        )}\r\n      </div>\r\n      \r\n      {onClose && (\r\n        <button\r\n          type=\"button\"\r\n          className=\"p-1 text-gray-400 hover:text-gray-500 dark:hover:text-gray-300 focus:outline-none focus:ring-2 focus:ring-primary-500 rounded-full transition-colors duration-200 motion-reduce:transition-none\"\r\n          onClick={onClose}\r\n          aria-label=\"Close\"\r\n        >\r\n          <svg className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n          </svg>\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * Modal.Footer - A reusable footer component for modals\r\n * \r\n * @description\r\n * Provides a consistent footer layout for modals, typically containing action buttons.\r\n * The footer is styled with a top border and right-aligned content by default.\r\n * \r\n * @example\r\n * <Modal.Footer>\r\n *   <Button variant=\"light\" onClick={handleCancel}>Cancel</Button>\r\n *   <Button onClick={handleSave}>Save Changes</Button>\r\n * </Modal.Footer>\r\n */\r\nModal.Footer = function ModalFooter({\r\n  children,\r\n  className = '',\r\n}: ModalFooterProps) {\r\n  return (\r\n    <div className={`px-6 py-4 border-t border-gray-200 dark:border-gray-700 flex justify-end space-x-2 ${className}`}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * Modal.Body - A component for the modal's body content\r\n * \r\n * @description\r\n * Provides consistent padding and styling for the main content area of a modal.\r\n * \r\n * @example\r\n * <Modal.Body>\r\n *   <p>This is the main content of the modal.</p>\r\n *   <Form>\r\n *     <TextInput label=\"Name\" />\r\n *     <TextInput label=\"Email\" type=\"email\" />\r\n *   </Form>\r\n * </Modal.Body>\r\n */\r\nModal.Body = function ModalBody({\r\n  children,\r\n  className = '',\r\n}: ModalBodyProps) {\r\n  return (\r\n    <div className={`p-6 ${className}`}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;"],"names":["Modal","isOpen","onClose","title","description","children","size","closeOnClickOutside","closeOnBackdropClick","closeOnEsc","showCloseButton","footer","centered","header","className","backdropClassName","id","loading","animate","fullHeight","mounted","setMounted","useState","modalRef","useRef","shouldCloseOnClickOutside","useEffect","handleBackdropClick","e","handleKeyDown","focusableElements","sizeClasses","backdropTransitionClasses","modalTransitionClasses","modalContainerClasses","backdropClasses","modalContent","jsx","jsxs","createPortal","subtitle"],"mappings":"uFAmIO,MAAMA,EAAwB,CAAC,CACpC,OAAAC,EACA,QAAAC,EACA,MAAAC,EACA,YAAAC,EACA,SAAAC,EACA,KAAAC,EAAO,KACP,oBAAAC,EAAsB,GACtB,qBAAAC,EACA,WAAAC,EAAa,GACb,gBAAAC,EAAkB,GAClB,OAAAC,EACA,SAAAC,EAAW,GACX,OAAAC,EACA,UAAAC,EAAY,GACZ,kBAAAC,EAAoB,GACpB,GAAAC,EACA,QAAAC,EAAU,GACV,QAAAC,EAAU,GACV,WAAAC,EAAa,EACf,IAAM,CACJ,KAAM,CAACC,EAASC,CAAU,EAAIC,WAAS,EAAK,EACtCC,EAAWC,SAAuB,IAAI,EAGtCC,EAA4BjB,IAAyB,OAAYA,EAAuBD,EAG9FmB,EAAAA,UAAU,KACRL,EAAW,EAAI,EAGXpB,IACO,SAAA,KAAK,MAAM,SAAW,UAI1B,IAAM,CACF,SAAA,KAAK,MAAM,SAAW,EAAA,GAEhC,CAACA,CAAM,CAAC,EAGL,MAAA0B,EAAuBC,GAAwC,CAC/DH,GAA6BG,EAAE,SAAWA,EAAE,eACtC1B,GACV,EAIFwB,EAAAA,UAAU,IAAM,CACR,MAAAG,EAAiBD,GAAqB,CACtCnB,GAAcmB,EAAE,MAAQ,UAAY3B,GAC9BC,GACV,EAGO,gBAAA,iBAAiB,UAAW2B,CAAa,EAE3C,IAAM,CACF,SAAA,oBAAoB,UAAWA,CAAa,CAAA,CAEtD,EAAA,CAACpB,EAAYR,EAAQC,CAAO,CAAC,EAGhCwB,EAAAA,UAAU,IAAM,CACV,GAAAzB,GAAUsB,EAAS,QAAS,CACxB,MAAAO,EAAoBP,EAAS,QAAQ,iBACzC,0EAAA,EAGEO,EAAkB,OAAS,GACXA,EAAA,CAAC,EAAE,OAEzB,CAAA,EACC,CAAC7B,CAAM,CAAC,EAGX,MAAM8B,EAAc,CAClB,GAAI,WACJ,GAAI,WACJ,GAAI,WACJ,GAAI,WACJ,MAAO,YACP,KAAM,oCAAA,EAIFC,EAA4Bd,EAC9B,4EACA,GAEEe,EAAyBf,EAC3B,wEACA,GAGEgB,EAAwB,CAC5B,0EACA,cACA5B,IAAS,OAASyB,EAAYzB,CAAI,EAAI,eACtCa,EAAa,SAAW,GACxBc,EACAnB,CACA,EAAA,OAAO,OAAO,EAAE,KAAK,GAAG,EAGpBqB,EAAkB,CACtB,8DACAvB,EAAW,eAAiB,4CAC5BG,EACAiB,CACA,EAAA,OAAO,OAAO,EAAE,KAAK,GAAG,EAG1B,GAAI,CAACZ,EACI,OAAA,KAIT,MAAMgB,EACJC,EAAA,IAAC,MAAA,CACC,UAAWF,EACX,MAAO,CACL,QAASlC,EAAS,EAAI,EACtB,cAAeA,EAAS,OAAS,MACnC,EACA,QAAS0B,EACT,cAAa,CAAC1B,EACd,KAAK,SACL,aAAW,OACX,kBAAiBE,EAAQ,GAAGa,CAAE,SAAW,OACzC,mBAAkBZ,EAAc,GAAGY,CAAE,eAAiB,OAGtD,SAAAsB,EAAA,KAAC,MAAA,CACC,IAAKf,EACL,UAAWW,EACX,MAAO,CACL,UAAWjC,EAAS,yBAA2B,gCAC/C,QAASA,EAAS,EAAI,CACxB,EACA,GAAAe,EAGE,SAAA,EAAAb,GAASU,GAAUH,IAClB4B,EAAAA,KAAA,MAAA,CAAI,UAAU,4FACZ,SAAA,CAAAzB,UACE,MACE,CAAA,SAAA,CACCV,GAAAkC,EAAA,IAAC,KAAA,CACC,GAAI,GAAGrB,CAAE,SACT,UAAU,uDAET,SAAAb,CAAA,CACH,EAEDC,GACCiC,EAAA,IAAC,IAAA,CACC,GAAI,GAAGrB,CAAE,eACT,UAAU,gDAET,SAAAZ,CAAA,CACH,CAAA,EAEJ,EAGDM,GACC2B,EAAA,IAAC,SAAA,CACC,KAAK,SACL,UAAU,kMACV,QAASnC,EACT,aAAW,cAEX,SAAAmC,EAAAA,IAAC,OAAI,UAAU,UAAU,KAAK,OAAO,OAAO,eAAe,QAAQ,YAAY,MAAM,6BACnF,SAACA,EAAA,IAAA,OAAA,CAAK,cAAc,QAAQ,eAAe,QAAQ,YAAY,IAAI,EAAE,sBAAA,CAAuB,CAC9F,CAAA,CAAA,CACF,CAAA,EAEJ,QAID,MAAI,CAAA,UAAW,OAAOlB,EAAa,yBAA2B,EAAE,GAC9D,SAAAF,QACE,MAAI,CAAA,UAAU,wCACb,SAACoB,EAAA,IAAA,MAAA,CAAI,UAAU,gIAAiI,CAAA,EAClJ,EAEAhC,CAEJ,CAAA,EAGCM,GACC0B,EAAA,IAAC,MAAI,CAAA,UAAU,qFACZ,SACH1B,EAAA,CAAA,CAAA,CAEJ,CAAA,CAAA,EAKG,OAAA4B,eAAaH,EAAc,SAAS,IAAI,CACjD,EAgBApC,EAAM,OAAS,SAAqB,CAClC,MAAAG,EACA,SAAAqC,EACA,QAAAtC,EACA,UAAAY,EAAY,GACZ,SAAAT,CACF,EAAqB,CACnB,OACGiC,EAAA,KAAA,MAAA,CAAI,UAAW,6FAA6FxB,CAAS,GACpH,SAAA,CAAAwB,OAAC,MACE,CAAA,SAAA,CAAAnC,GACEkC,EAAA,IAAA,KAAA,CAAG,UAAU,oDACX,SACHlC,EAAA,EAEDqC,GACCH,EAAA,IAAC,IAAE,CAAA,UAAU,gDACV,SACHG,EAAA,EAED,CAACrC,GAASE,SACR,KAAG,CAAA,UAAU,oDACX,SAAAA,EACH,CAAA,EAEJ,EAECH,GACCmC,EAAA,IAAC,SAAA,CACC,KAAK,SACL,UAAU,kMACV,QAASnC,EACT,aAAW,QAEX,SAAAmC,EAAA,IAAC,OAAI,UAAU,UAAU,KAAK,OAAO,QAAQ,YAAY,OAAO,eAC9D,eAAC,OAAK,CAAA,cAAc,QAAQ,eAAe,QAAQ,YAAY,IAAI,EAAE,uBAAuB,CAC9F,CAAA,CAAA,CACF,CAEJ,CAAA,CAAA,CAEJ,EAeArC,EAAM,OAAS,SAAqB,CAClC,SAAAK,EACA,UAAAS,EAAY,EACd,EAAqB,CACnB,aACG,MAAI,CAAA,UAAW,sFAAsFA,CAAS,GAC5G,SAAAT,CACH,CAAA,CAEJ,EAiBAL,EAAM,KAAO,SAAmB,CAC9B,SAAAK,EACA,UAAAS,EAAY,EACd,EAAmB,CACjB,aACG,MAAI,CAAA,UAAW,OAAOA,CAAS,GAC7B,SAAAT,CACH,CAAA,CAEJ"}