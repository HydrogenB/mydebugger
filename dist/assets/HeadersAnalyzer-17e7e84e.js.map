{"version":3,"file":"HeadersAnalyzer-17e7e84e.js","sources":["../../src/tools/headers/HeadersAnalyzer.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { getToolByRoute } from '../index';\r\nimport { ToolLayout } from '../../design-system/components/layout';\r\nimport { Card } from '../../design-system/components/layout';\r\nimport { Button } from '../../design-system/components/inputs';\r\nimport { LoadingSpinner } from '../../design-system/components/feedback';\r\n\r\ninterface HeaderData {\r\n  name: string;\r\n  value: string;\r\n  description: string;\r\n  category: string;\r\n  source: 'request' | 'response';\r\n}\r\n\r\ninterface ParsedHeaders {\r\n  request: HeaderData[];\r\n  response: HeaderData[];\r\n}\r\n\r\nconst HeadersAnalyzer: React.FC = () => {\r\n  const tool = getToolByRoute('/headers');\r\n  const [url, setUrl] = useState<string>('');\r\n  const [headers, setHeaders] = useState<ParsedHeaders | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [activeTab, setActiveTab] = useState<'request' | 'response'>('response');\r\n  const [filter, setFilter] = useState<string>('');\r\n  \r\n  // SEO metadata\r\n  const pageTitle = \"HTTP Headers Analyzer | MyDebugger\";\r\n  const pageDescription = \"Analyze and understand HTTP request/response headers.\";\r\n  \r\n  // Header categories for grouping\r\n  const headerCategories = {\r\n    'caching': 'Caching',\r\n    'security': 'Security',\r\n    'content': 'Content',\r\n    'cors': 'CORS',\r\n    'authentication': 'Authentication',\r\n    'other': 'Other'\r\n  };\r\n  \r\n  // Header descriptions for common headers\r\n  const headerDescriptions: Record<string, { description: string, category: string }> = {\r\n    'content-type': { \r\n      description: 'Indicates the media type of the resource', \r\n      category: 'content' \r\n    },\r\n    'content-length': { \r\n      description: 'Indicates the size of the entity-body in bytes', \r\n      category: 'content' \r\n    },\r\n    'cache-control': { \r\n      description: 'Directives for caching mechanisms in both requests and responses', \r\n      category: 'caching' \r\n    },\r\n    'expires': { \r\n      description: 'Date/time after which the response is considered stale', \r\n      category: 'caching' \r\n    },\r\n    'etag': { \r\n      description: 'Identifier for a specific version of a resource', \r\n      category: 'caching' \r\n    },\r\n    'server': { \r\n      description: 'Information about the software used by the origin server', \r\n      category: 'other' \r\n    },\r\n    'strict-transport-security': { \r\n      description: 'Force communication over HTTPS instead of HTTP', \r\n      category: 'security' \r\n    },\r\n    'x-content-type-options': { \r\n      description: 'Prevents MIME type sniffing', \r\n      category: 'security' \r\n    },\r\n    'x-frame-options': { \r\n      description: 'Indicates whether a browser should be allowed to render a page in a frame/iframe', \r\n      category: 'security' \r\n    },\r\n    'access-control-allow-origin': { \r\n      description: 'Indicates whether the response can be shared with resources with the given origin', \r\n      category: 'cors' \r\n    },\r\n    'access-control-allow-methods': { \r\n      description: 'Specifies the methods allowed when accessing the resource', \r\n      category: 'cors' \r\n    },\r\n    'authorization': { \r\n      description: 'Authentication credentials for HTTP authentication', \r\n      category: 'authentication' \r\n    }\r\n  };\r\n\r\n  const analyzeHeaders = async () => {\r\n    if (!url) {\r\n      setError('Please enter a URL to analyze');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n    setHeaders(null);\r\n\r\n    try {\r\n      // Add protocol if missing\r\n      let formattedUrl = url;\r\n      if (!url.startsWith('http://') && !url.startsWith('https://')) {\r\n        formattedUrl = 'https://' + url;\r\n      }\r\n\r\n      // Use a CORS proxy to avoid CORS issues\r\n      const proxyUrl = `https://cors-anywhere.herokuapp.com/${formattedUrl}`;\r\n      \r\n      const response = await fetch(proxyUrl, {\r\n        method: 'GET',\r\n        headers: {\r\n          'X-Requested-With': 'XMLHttpRequest'\r\n        }\r\n      });\r\n      \r\n      const parsedHeaders: ParsedHeaders = {\r\n        request: [],\r\n        response: []\r\n      };\r\n      \r\n      // Parse response headers\r\n      response.headers.forEach((value, name) => {\r\n        const lowerName = name.toLowerCase();\r\n        const headerInfo = headerDescriptions[lowerName] || { \r\n          description: 'No description available', \r\n          category: 'other' \r\n        };\r\n        \r\n        parsedHeaders.response.push({\r\n          name,\r\n          value,\r\n          description: headerInfo.description,\r\n          category: headerInfo.category,\r\n          source: 'response'\r\n        });\r\n      });\r\n      \r\n      // Since we can't directly access the request headers in the browser,\r\n      // we'll add some common ones for demonstration\r\n      const commonRequestHeaders = [\r\n        { name: 'Accept', value: '*/*', category: 'content' },\r\n        { name: 'Accept-Encoding', value: 'gzip, deflate, br', category: 'content' },\r\n        { name: 'Accept-Language', value: 'en-US,en;q=0.9', category: 'content' },\r\n        { name: 'User-Agent', value: 'MyDebugger Headers Tool', category: 'other' },\r\n        { name: 'X-Requested-With', value: 'XMLHttpRequest', category: 'other' }\r\n      ];\r\n      \r\n      commonRequestHeaders.forEach(header => {\r\n        parsedHeaders.request.push({\r\n          name: header.name,\r\n          value: header.value,\r\n          description: headerDescriptions[header.name.toLowerCase()]?.description || 'No description available',\r\n          category: header.category,\r\n          source: 'request'\r\n        });\r\n      });\r\n      \r\n      setHeaders(parsedHeaders);\r\n    } catch (err) {\r\n      setError(`Error fetching headers: ${err instanceof Error ? err.message : 'Unknown error'}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === 'Enter') {\r\n      analyzeHeaders();\r\n    }\r\n  };\r\n\r\n  // Filter headers based on search input\r\n  const filteredHeaders = headers ? \r\n    headers[activeTab].filter(header => \r\n      header.name.toLowerCase().includes(filter.toLowerCase()) || \r\n      header.value.toLowerCase().includes(filter.toLowerCase())\r\n    ) : [];\r\n  \r\n  // Group headers by category\r\n  const groupedHeaders: Record<string, HeaderData[]> = {};\r\n  \r\n  filteredHeaders.forEach(header => {\r\n    const category = header.category;\r\n    if (!groupedHeaders[category]) {\r\n      groupedHeaders[category] = [];\r\n    }\r\n    groupedHeaders[category].push(header);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{pageTitle}</title>\r\n        <meta name=\"description\" content={pageDescription} />\r\n        <meta property=\"og:title\" content={pageTitle} />\r\n        <meta property=\"og:description\" content={pageDescription} />\r\n        <meta property=\"og:type\" content=\"website\" />\r\n        <meta property=\"og:url\" content=\"https://mydebugger.vercel.app/headers\" />\r\n        <meta name=\"twitter:card\" content=\"summary\" />\r\n        <meta name=\"twitter:title\" content={pageTitle} />\r\n        <meta name=\"twitter:description\" content={pageDescription} />\r\n        <link rel=\"canonical\" href=\"https://mydebugger.vercel.app/headers\" />\r\n      </Helmet>\r\n      <ToolLayout tool={tool!}>\r\n        <div className=\"space-y-6\">\r\n          <Card isElevated className=\"transition-all duration-200\">\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <label htmlFor=\"url-input\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                  Enter URL to analyze headers\r\n                </label>\r\n                <div className=\"flex\">\r\n                  <input\r\n                    id=\"url-input\"\r\n                    type=\"text\"\r\n                    className=\"flex-grow rounded-l-md border-gray-300 dark:border-gray-700 dark:bg-gray-800 dark:text-white shadow-sm focus:border-primary-500 focus:ring focus:ring-primary-200 dark:focus:ring-primary-900 focus:ring-opacity-50\"\r\n                    placeholder=\"example.com\"\r\n                    value={url}\r\n                    onChange={(e) => setUrl(e.target.value)}\r\n                    onKeyPress={handleKeyPress}\r\n                    disabled={loading}\r\n                  />\r\n                  <Button\r\n                    onClick={analyzeHeaders}\r\n                    isLoading={loading}\r\n                    disabled={loading || !url}\r\n                    className=\"rounded-l-none\"\r\n                  >\r\n                    Analyze\r\n                  </Button>\r\n                </div>\r\n                <p className=\"mt-2 text-sm text-gray-500 dark:text-gray-400\">\r\n                  Enter a URL to fetch and analyze its HTTP headers\r\n                </p>\r\n              </div>\r\n              \r\n              {error && (\r\n                <div className=\"p-3 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-md text-red-700 dark:text-red-400 text-sm\">\r\n                  {error}\r\n                </div>\r\n              )}\r\n              \r\n              {loading && (\r\n                <div className=\"flex justify-center py-8\">\r\n                  <LoadingSpinner />\r\n                </div>\r\n              )}\r\n              \r\n              {headers && !loading && (\r\n                <div className=\"animate-fade-in\">\r\n                  <div className=\"border-b border-gray-200 dark:border-gray-700 mb-4\">\r\n                    <div className=\"flex\">\r\n                      <button\r\n                        className={`py-2 px-4 border-b-2 font-medium text-sm focus:outline-none ${\r\n                          activeTab === 'response'\r\n                            ? 'border-primary-500 text-primary-600 dark:text-primary-400'\r\n                            : 'border-transparent text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 hover:border-gray-300'\r\n                        }`}\r\n                        onClick={() => setActiveTab('response')}\r\n                      >\r\n                        Response Headers ({headers.response.length})\r\n                      </button>\r\n                      <button\r\n                        className={`py-2 px-4 border-b-2 font-medium text-sm focus:outline-none ${\r\n                          activeTab === 'request'\r\n                            ? 'border-primary-500 text-primary-600 dark:text-primary-400'\r\n                            : 'border-transparent text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 hover:border-gray-300'\r\n                        }`}\r\n                        onClick={() => setActiveTab('request')}\r\n                      >\r\n                        Request Headers ({headers.request.length})\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"mb-4\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"w-full rounded-md border-gray-300 dark:border-gray-700 dark:bg-gray-800 dark:text-white shadow-sm focus:border-primary-500 focus:ring focus:ring-primary-200 dark:focus:ring-primary-900 focus:ring-opacity-50\"\r\n                      placeholder=\"Filter headers...\"\r\n                      value={filter}\r\n                      onChange={(e) => setFilter(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  \r\n                  {filteredHeaders.length === 0 ? (\r\n                    <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\r\n                      No headers found {filter ? `matching \"${filter}\"` : ''}\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"space-y-6\">\r\n                      {Object.entries(groupedHeaders).map(([category, headers]) => (\r\n                        <div key={category}>\r\n                          <h3 className=\"font-medium text-gray-900 dark:text-gray-100 mb-3\">\r\n                            {headerCategories[category as keyof typeof headerCategories] || 'Other'}\r\n                          </h3>\r\n                          <div className=\"bg-gray-50 dark:bg-gray-900 rounded-md overflow-hidden\">\r\n                            <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\r\n                              <thead className=\"bg-gray-100 dark:bg-gray-800\">\r\n                                <tr>\r\n                                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider w-1/4\">\r\n                                    Header\r\n                                  </th>\r\n                                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                                    Value\r\n                                  </th>\r\n                                </tr>\r\n                              </thead>\r\n                              <tbody className=\"divide-y divide-gray-200 dark:divide-gray-700\">\r\n                                {headers.map((header, index) => (\r\n                                  <tr \r\n                                    key={index}\r\n                                    className=\"hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors\"\r\n                                  >\r\n                                    <td className=\"px-4 py-3 text-sm font-medium text-gray-900 dark:text-gray-100\">\r\n                                      <div>{header.name}</div>\r\n                                      <div className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">{header.description}</div>\r\n                                    </td>\r\n                                    <td className=\"px-4 py-3 text-sm text-gray-600 dark:text-gray-300 font-mono break-all\">\r\n                                      {header.value}\r\n                                    </td>\r\n                                  </tr>\r\n                                ))}\r\n                              </tbody>\r\n                            </table>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </Card>\r\n          \r\n          <Card title=\"About HTTP Headers\" isElevated>\r\n            <div className=\"prose dark:prose-invert max-w-none\">\r\n              <p>\r\n                HTTP headers let clients and servers pass additional information with requests or responses. \r\n                They consist of name-value pairs separated by colons.\r\n              </p>\r\n              <h3>Common Response Headers</h3>\r\n              <ul>\r\n                <li><strong>Content-Type</strong>: Indicates the media type of the resource</li>\r\n                <li><strong>Content-Length</strong>: Indicates the size of the entity-body in bytes</li>\r\n                <li><strong>Cache-Control</strong>: Directives for caching mechanisms</li>\r\n                <li><strong>Set-Cookie</strong>: Send cookies from the server to the user agent</li>\r\n              </ul>\r\n              <h3>Common Request Headers</h3>\r\n              <ul>\r\n                <li><strong>Accept</strong>: Media types the client can process</li>\r\n                <li><strong>User-Agent</strong>: Application type, OS, software vendor, or version</li>\r\n                <li><strong>Authorization</strong>: Authentication credentials for HTTP authentication</li>\r\n                <li><strong>Cookie</strong>: Previously set cookies by the server with Set-Cookie</li>\r\n              </ul>\r\n            </div>\r\n          </Card>\r\n        </div>\r\n      </ToolLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeadersAnalyzer;"],"names":["HeadersAnalyzer","tool","getToolByRoute","url","setUrl","useState","headers","setHeaders","loading","setLoading","error","setError","activeTab","setActiveTab","filter","setFilter","pageTitle","pageDescription","headerCategories","headerDescriptions","analyzeHeaders","formattedUrl","proxyUrl","response","parsedHeaders","value","name","lowerName","headerInfo","header","_a","err","handleKeyPress","e","filteredHeaders","groupedHeaders","category","jsxs","Fragment","Helmet","jsx","ToolLayout","Card","Button","LoadingSpinner","index"],"mappings":"4JAqBA,MAAMA,EAA4B,IAAM,CAChC,MAAAC,EAAOC,EAAe,UAAU,EAChC,CAACC,EAAKC,CAAM,EAAIC,WAAiB,EAAE,EACnC,CAACC,EAASC,CAAU,EAAIF,WAA+B,IAAI,EAC3D,CAACG,EAASC,CAAU,EAAIJ,WAAkB,EAAK,EAC/C,CAACK,EAAOC,CAAQ,EAAIN,WAAwB,IAAI,EAChD,CAACO,EAAWC,CAAY,EAAIR,WAAiC,UAAU,EACvE,CAACS,EAAQC,CAAS,EAAIV,WAAiB,EAAE,EAGzCW,EAAY,qCACZC,EAAkB,wDAGlBC,EAAmB,CACvB,QAAW,UACX,SAAY,WACZ,QAAW,UACX,KAAQ,OACR,eAAkB,iBAClB,MAAS,OAAA,EAILC,EAAgF,CACpF,eAAgB,CACd,YAAa,2CACb,SAAU,SACZ,EACA,iBAAkB,CAChB,YAAa,iDACb,SAAU,SACZ,EACA,gBAAiB,CACf,YAAa,mEACb,SAAU,SACZ,EACA,QAAW,CACT,YAAa,yDACb,SAAU,SACZ,EACA,KAAQ,CACN,YAAa,kDACb,SAAU,SACZ,EACA,OAAU,CACR,YAAa,2DACb,SAAU,OACZ,EACA,4BAA6B,CAC3B,YAAa,iDACb,SAAU,UACZ,EACA,yBAA0B,CACxB,YAAa,8BACb,SAAU,UACZ,EACA,kBAAmB,CACjB,YAAa,mFACb,SAAU,UACZ,EACA,8BAA+B,CAC7B,YAAa,oFACb,SAAU,MACZ,EACA,+BAAgC,CAC9B,YAAa,4DACb,SAAU,MACZ,EACA,cAAiB,CACf,YAAa,qDACb,SAAU,gBACZ,CAAA,EAGIC,EAAiB,SAAY,CACjC,GAAI,CAACjB,EAAK,CACRQ,EAAS,+BAA+B,EACxC,MACF,CAEAF,EAAW,EAAI,EACfE,EAAS,IAAI,EACbJ,EAAW,IAAI,EAEX,GAAA,CAEF,IAAIc,EAAelB,EACf,CAACA,EAAI,WAAW,SAAS,GAAK,CAACA,EAAI,WAAW,UAAU,IAC1DkB,EAAe,WAAalB,GAIxB,MAAAmB,EAAW,uCAAuCD,CAAY,GAE9DE,EAAW,MAAM,MAAMD,EAAU,CACrC,OAAQ,MACR,QAAS,CACP,mBAAoB,gBACtB,CAAA,CACD,EAEKE,EAA+B,CACnC,QAAS,CAAC,EACV,SAAU,CAAC,CAAA,EAIbD,EAAS,QAAQ,QAAQ,CAACE,EAAOC,IAAS,CAClC,MAAAC,EAAYD,EAAK,cACjBE,EAAaT,EAAmBQ,CAAS,GAAK,CAClD,YAAa,2BACb,SAAU,OAAA,EAGZH,EAAc,SAAS,KAAK,CAC1B,KAAAE,EACA,MAAAD,EACA,YAAaG,EAAW,YACxB,SAAUA,EAAW,SACrB,OAAQ,UAAA,CACT,CAAA,CACF,EAI4B,CAC3B,CAAE,KAAM,SAAU,MAAO,MAAO,SAAU,SAAU,EACpD,CAAE,KAAM,kBAAmB,MAAO,oBAAqB,SAAU,SAAU,EAC3E,CAAE,KAAM,kBAAmB,MAAO,iBAAkB,SAAU,SAAU,EACxE,CAAE,KAAM,aAAc,MAAO,0BAA2B,SAAU,OAAQ,EAC1E,CAAE,KAAM,mBAAoB,MAAO,iBAAkB,SAAU,OAAQ,CAAA,EAGpD,QAAkBC,GAAA,OACrCL,EAAc,QAAQ,KAAK,CACzB,KAAMK,EAAO,KACb,MAAOA,EAAO,MACd,cAAaC,EAAAX,EAAmBU,EAAO,KAAK,YAAa,CAAA,IAA5C,YAAAC,EAA+C,cAAe,2BAC3E,SAAUD,EAAO,SACjB,OAAQ,SAAA,CACT,CAAA,CACF,EAEDtB,EAAWiB,CAAa,QACjBO,EAAK,CACZpB,EAAS,2BAA2BoB,aAAe,MAAQA,EAAI,QAAU,eAAe,EAAE,CAAA,QAC1F,CACAtB,EAAW,EAAK,CAClB,CAAA,EAGIuB,EAAkBC,GAA6C,CAC/DA,EAAE,MAAQ,SACGb,GACjB,EAIIc,EAAkB5B,EACtBA,EAAQM,CAAS,EAAE,UACjBiB,EAAO,KAAK,YAAY,EAAE,SAASf,EAAO,YAAa,CAAA,GACvDe,EAAO,MAAM,YAAA,EAAc,SAASf,EAAO,aAAa,GACtD,GAGAqB,EAA+C,CAAA,EAErD,OAAAD,EAAgB,QAAkBL,GAAA,CAChC,MAAMO,EAAWP,EAAO,SACnBM,EAAeC,CAAQ,IACXD,EAAAC,CAAQ,EAAI,IAEdD,EAAAC,CAAQ,EAAE,KAAKP,CAAM,CAAA,CACrC,EAIGQ,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAAD,OAACE,EACC,CAAA,SAAA,CAAAC,EAAAA,IAAC,SAAO,SAAUxB,CAAA,CAAA,EACjBwB,EAAA,IAAA,OAAA,CAAK,KAAK,cAAc,QAASvB,EAAiB,EAClDuB,EAAA,IAAA,OAAA,CAAK,SAAS,WAAW,QAASxB,EAAW,EAC7CwB,EAAA,IAAA,OAAA,CAAK,SAAS,iBAAiB,QAASvB,EAAiB,EACzDuB,EAAA,IAAA,OAAA,CAAK,SAAS,UAAU,QAAQ,UAAU,EAC1CA,EAAA,IAAA,OAAA,CAAK,SAAS,SAAS,QAAQ,wCAAwC,EACvEA,EAAA,IAAA,OAAA,CAAK,KAAK,eAAe,QAAQ,UAAU,EAC3CA,EAAA,IAAA,OAAA,CAAK,KAAK,gBAAgB,QAASxB,EAAW,EAC9CwB,EAAA,IAAA,OAAA,CAAK,KAAK,sBAAsB,QAASvB,EAAiB,EAC1DuB,EAAA,IAAA,OAAA,CAAK,IAAI,YAAY,KAAK,wCAAwC,CAAA,EACrE,QACCC,EAAW,CAAA,KAAAxC,EACV,SAACoC,OAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACG,EAAAA,IAAAE,EAAA,CAAK,WAAU,GAAC,UAAU,8BACzB,SAACL,EAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAG,MAAC,QAAM,CAAA,QAAQ,YAAY,UAAU,kEAAkE,SAEvG,+BAAA,EACAH,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAAAG,EAAA,IAAC,QAAA,CACC,GAAG,YACH,KAAK,OACL,UAAU,sNACV,YAAY,cACZ,MAAOrC,EACP,SAAW8B,GAAM7B,EAAO6B,EAAE,OAAO,KAAK,EACtC,WAAYD,EACZ,SAAUxB,CAAA,CACZ,EACAgC,EAAA,IAACG,EAAA,CACC,QAASvB,EACT,UAAWZ,EACX,SAAUA,GAAW,CAACL,EACtB,UAAU,iBACX,SAAA,SAAA,CAED,CAAA,EACF,EACCqC,EAAA,IAAA,IAAA,CAAE,UAAU,gDAAgD,SAE7D,oDAAA,CAAA,EACF,EAEC9B,GACC8B,EAAA,IAAC,MAAI,CAAA,UAAU,+HACZ,SACH9B,EAAA,EAGDF,GACEgC,EAAA,IAAA,MAAA,CAAI,UAAU,2BACb,SAAAA,MAACI,GAAe,CAAA,EAClB,EAGDtC,GAAW,CAACE,GACV6B,EAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAG,EAAAA,IAAC,OAAI,UAAU,qDACb,SAACH,EAAA,KAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAAAA,EAAA,KAAC,SAAA,CACC,UAAW,+DACTzB,IAAc,WACV,4DACA,wHACN,GACA,QAAS,IAAMC,EAAa,UAAU,EACvC,SAAA,CAAA,qBACoBP,EAAQ,SAAS,OAAO,GAAA,CAAA,CAC7C,EACA+B,EAAA,KAAC,SAAA,CACC,UAAW,+DACTzB,IAAc,UACV,4DACA,wHACN,GACA,QAAS,IAAMC,EAAa,SAAS,EACtC,SAAA,CAAA,oBACmBP,EAAQ,QAAQ,OAAO,GAAA,CAAA,CAC3C,CAAA,CAAA,CACF,CACF,CAAA,EAEAkC,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,UAAU,iNACV,YAAY,oBACZ,MAAO1B,EACP,SAAWmB,GAAMlB,EAAUkB,EAAE,OAAO,KAAK,CAAA,CAAA,EAE7C,EAECC,EAAgB,SAAW,EACzBG,EAAA,KAAA,MAAA,CAAI,UAAU,oDAAoD,SAAA,CAAA,oBAC/CvB,EAAS,aAAaA,CAAM,IAAM,EAAA,EACtD,EAEC0B,EAAA,IAAA,MAAA,CAAI,UAAU,YACZ,gBAAO,QAAQL,CAAc,EAAE,IAAI,CAAC,CAACC,EAAU9B,CAAO,WACpD,MACC,CAAA,SAAA,CAAAkC,MAAC,MAAG,UAAU,oDACX,SAAiBtB,EAAAkB,CAAyC,GAAK,QAClE,QACC,MAAI,CAAA,UAAU,yDACb,SAACC,EAAA,KAAA,QAAA,CAAM,UAAU,2DACf,SAAA,CAAAG,MAAC,QAAM,CAAA,UAAU,+BACf,SAAAH,EAAA,KAAC,KACC,CAAA,SAAA,CAAAG,MAAC,KAAG,CAAA,MAAM,MAAM,UAAU,0GAA0G,SAEpI,SAAA,QACC,KAAG,CAAA,MAAM,MAAM,UAAU,oGAAoG,SAE9H,QAAA,CAAA,CAAA,CACF,CACF,CAAA,EACAA,EAAAA,IAAC,SAAM,UAAU,gDACd,SAAAlC,EAAQ,IAAI,CAACuB,EAAQgB,IACpBR,EAAA,KAAC,KAAA,CAEC,UAAU,6DAEV,SAAA,CAACA,EAAAA,KAAA,KAAA,CAAG,UAAU,iEACZ,SAAA,CAACG,EAAAA,IAAA,MAAA,CAAK,WAAO,IAAK,CAAA,EACjBA,EAAA,IAAA,MAAA,CAAI,UAAU,gDAAiD,WAAO,YAAY,CAAA,EACrF,EACCA,EAAA,IAAA,KAAA,CAAG,UAAU,yEACX,WAAO,MACV,CAAA,CAAA,EATKK,CAWR,CAAA,EACH,CAAA,CAAA,CACF,CACF,CAAA,CAAA,GAjCQT,CAkCV,CACD,EACH,CAAA,EAEJ,CAAA,CAAA,CAEJ,CACF,CAAA,EAEAI,EAAAA,IAACE,GAAK,MAAM,qBAAqB,WAAU,GACzC,SAAAL,EAAA,KAAC,MAAI,CAAA,UAAU,qCACb,SAAA,CAAAG,EAAAA,IAAC,KAAE,SAGH,oJAAA,CAAA,EACAA,EAAAA,IAAC,MAAG,SAAuB,yBAAA,CAAA,SAC1B,KACC,CAAA,SAAA,CAAAH,OAAC,KAAG,CAAA,SAAA,CAAAG,EAAAA,IAAC,UAAO,SAAY,cAAA,CAAA,EAAS,4CAAA,EAA0C,SAC1E,KAAG,CAAA,SAAA,CAAAA,EAAAA,IAAC,UAAO,SAAc,gBAAA,CAAA,EAAS,kDAAA,EAAgD,SAClF,KAAG,CAAA,SAAA,CAAAA,EAAAA,IAAC,UAAO,SAAa,eAAA,CAAA,EAAS,qCAAA,EAAmC,SACpE,KAAG,CAAA,SAAA,CAAAA,EAAAA,IAAC,UAAO,SAAU,YAAA,CAAA,EAAS,kDAAA,EAAgD,CAAA,EACjF,EACAA,EAAAA,IAAC,MAAG,SAAsB,wBAAA,CAAA,SACzB,KACC,CAAA,SAAA,CAAAH,OAAC,KAAG,CAAA,SAAA,CAAAG,EAAAA,IAAC,UAAO,SAAM,QAAA,CAAA,EAAS,sCAAA,EAAoC,SAC9D,KAAG,CAAA,SAAA,CAAAA,EAAAA,IAAC,UAAO,SAAU,YAAA,CAAA,EAAS,qDAAA,EAAmD,SACjF,KAAG,CAAA,SAAA,CAAAA,EAAAA,IAAC,UAAO,SAAa,eAAA,CAAA,EAAS,sDAAA,EAAoD,SACrF,KAAG,CAAA,SAAA,CAAAA,EAAAA,IAAC,UAAO,SAAM,QAAA,CAAA,EAAS,wDAAA,EAAsD,CAAA,EACnF,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CACF,CAAA,CAAA,CAEJ"}