{"version":3,"file":"Tooltip-bb8efc4b.js","sources":["../../src/design-system/foundations/animations.ts","../../src/design-system/components/overlays/Tooltip.tsx"],"sourcesContent":["// Design system animation tokens and utilities\r\n\r\n/**\r\n * Animation foundations for the design system\r\n * \r\n * This file provides standardized animation tokens and utilities that can be used\r\n * across all components in the design system to ensure consistency in motion design.\r\n * \r\n * All animations include support for reduced motion preferences by providing alternative\r\n * animations or durations that respect user preferences for reduced motion.\r\n */\r\n\r\n// Standard durations in milliseconds\r\nexport const durations = {\r\n  instant: 0,\r\n  extraFast: 100,\r\n  fast: 200,\r\n  normal: 300,\r\n  slow: 500,\r\n  extraSlow: 800,\r\n};\r\n\r\n// Standard easing functions\r\nexport const easings = {\r\n  // Standard easings\r\n  linear: 'linear',\r\n  ease: 'ease',\r\n  easeIn: 'ease-in',\r\n  easeOut: 'ease-out',\r\n  easeInOut: 'ease-in-out',\r\n  \r\n  // Custom cubic-bezier easings\r\n  emphasized: 'cubic-bezier(0.2, 0, 0, 1)',\r\n  emphasizedDecelerate: 'cubic-bezier(0.05, 0.7, 0.1, 1.0)',\r\n  emphasizedAccelerate: 'cubic-bezier(0.3, 0, 0.8, 0.15)',\r\n  \r\n  // Spring-like easings\r\n  spring: 'cubic-bezier(0.5, 0, 0.1, 1.2)',\r\n  bounce: 'cubic-bezier(0.175, 0.885, 0.32, 1.275)',\r\n};\r\n\r\n// CSS keyframe animations to be used in component classes\r\nexport const keyframes = {\r\n  fadeIn: `\r\n    @keyframes fadeIn {\r\n      from { opacity: 0; }\r\n      to { opacity: 1; }\r\n    }\r\n  `,\r\n  fadeOut: `\r\n    @keyframes fadeOut {\r\n      from { opacity: 1; }\r\n      to { opacity: 0; }\r\n    }\r\n  `,\r\n  slideInRight: `\r\n    @keyframes slideInRight {\r\n      from { transform: translateX(100%); }\r\n      to { transform: translateX(0); }\r\n    }\r\n  `,\r\n  slideInLeft: `\r\n    @keyframes slideInLeft {\r\n      from { transform: translateX(-100%); }\r\n      to { transform: translateX(0); }\r\n    }\r\n  `,\r\n  slideInUp: `\r\n    @keyframes slideInUp {\r\n      from { transform: translateY(100%); }\r\n      to { transform: translateY(0); }\r\n    }\r\n  `,\r\n  slideInDown: `\r\n    @keyframes slideInDown {\r\n      from { transform: translateY(-100%); }\r\n      to { transform: translateY(0); }\r\n    }\r\n  `,\r\n  bounceIn: `\r\n    @keyframes bounceIn {\r\n      0% { transform: scale(0.8); opacity: 0; }\r\n      70% { transform: scale(1.05); opacity: 1; }\r\n      100% { transform: scale(1); }\r\n    }\r\n  `,\r\n  spin: `\r\n    @keyframes spin {\r\n      from { transform: rotate(0deg); }\r\n      to { transform: rotate(360deg); }\r\n    }\r\n  `,\r\n  pulse: `\r\n    @keyframes pulse {\r\n      0% { transform: scale(1); }\r\n      50% { transform: scale(1.05); }\r\n      100% { transform: scale(1); }\r\n    }\r\n  `,\r\n  // Add new tooltip animations with GPU acceleration\r\n  tooltipFadeDown: `\r\n    @keyframes tooltipFadeDown {\r\n      from { opacity: 0; transform: translateY(-8px); }\r\n      to { opacity: 1; transform: translateY(0); }\r\n    }\r\n  `,\r\n  tooltipFadeUp: `\r\n    @keyframes tooltipFadeUp {\r\n      from { opacity: 0; transform: translateY(8px); }\r\n      to { opacity: 1; transform: translateY(0); }\r\n    }\r\n  `,\r\n  tooltipFadeLeft: `\r\n    @keyframes tooltipFadeLeft {\r\n      from { opacity: 0; transform: translateX(8px); }\r\n      to { opacity: 1; transform: translateX(0); }\r\n    }\r\n  `,\r\n  tooltipFadeRight: `\r\n    @keyframes tooltipFadeRight {\r\n      from { opacity: 0; transform: translateX(-8px); }\r\n      to { opacity: 1; transform: translateX(0); }\r\n    }\r\n  `,\r\n  // Scale animations\r\n  scaleIn: `\r\n    @keyframes scaleIn {\r\n      from { transform: scale(0.9); opacity: 0; }\r\n      to { transform: scale(1); opacity: 1; }\r\n    }\r\n  `,\r\n  scaleOut: `\r\n    @keyframes scaleOut {\r\n      from { transform: scale(1); opacity: 1; }\r\n      to { transform: scale(0.9); opacity: 0; }\r\n    }\r\n  `,\r\n};\r\n\r\n// Animation style definitions that can be imported into components\r\nexport const animations = {\r\n  fadeIn: {\r\n    animation: 'fadeIn 0.3s ease forwards',\r\n  },\r\n  fadeOut: {\r\n    animation: 'fadeOut 0.3s ease forwards',\r\n  },\r\n  slideInRight: {\r\n    animation: 'slideInRight 0.3s ease forwards',\r\n  },\r\n  slideInLeft: {\r\n    animation: 'slideInLeft 0.3s ease forwards',\r\n  },\r\n  slideInUp: {\r\n    animation: 'slideInUp 0.3s ease forwards',\r\n  },\r\n  slideInDown: {\r\n    animation: 'slideInDown 0.3s ease forwards',\r\n  },\r\n  bounceIn: {\r\n    animation: 'bounceIn 0.5s ease forwards',\r\n  },\r\n  spin: {\r\n    animation: 'spin 1s linear infinite',\r\n  },\r\n  pulse: {\r\n    animation: 'pulse 2s ease infinite',\r\n  },\r\n  scaleIn: {\r\n    animation: 'scaleIn 0.3s ease-out forwards',\r\n  },\r\n  scaleOut: {\r\n    animation: 'scaleOut 0.3s ease-in forwards',\r\n  },\r\n};\r\n\r\n// Utility function to generate animation classes for Tailwind\r\nexport const animationClasses = {\r\n  'animate-fade-in': 'animate-fadeIn',\r\n  'animate-fade-out': 'animate-fadeOut',\r\n  'animate-slide-in-right': 'animate-slideInRight',\r\n  'animate-slide-in-left': 'animate-slideInLeft',\r\n  'animate-slide-in-up': 'animate-slideInUp',\r\n  'animate-slide-in-down': 'animate-slideInDown',\r\n  'animate-bounce-in': 'animate-bounceIn',\r\n  'animate-spin': 'animate-spin',\r\n  'animate-pulse': 'animate-pulse',\r\n  'animate-scale-in': 'animate-scaleIn',\r\n  'animate-scale-out': 'animate-scaleOut',\r\n  'animate-tooltip-fade-down': 'animate-tooltipFadeDown',\r\n  'animate-tooltip-fade-up': 'animate-tooltipFadeUp',\r\n  'animate-tooltip-fade-left': 'animate-tooltipFadeLeft',\r\n  'animate-tooltip-fade-right': 'animate-tooltipFadeRight',\r\n};\r\n\r\n/**\r\n * Guidelines for using animations in components:\r\n * \r\n * 1. Use standard durations and easing functions for consistency\r\n * 2. Always include motion-reduce alternatives:\r\n *    - For transitions: motion-reduce:transition-none\r\n *    - For animations: motion-reduce:animate-none\r\n *    - For transforms: motion-reduce:transform-none\r\n * 3. Use GPU-accelerated properties (transform, opacity) for better performance\r\n * 4. Apply consistent timing across similar interactions:\r\n *    - Micro-interactions: extraFast (100ms)\r\n *    - Button feedback: fast (200ms)\r\n *    - Modal/drawer transitions: normal (300ms)\r\n *    - Page transitions: slow (500ms)\r\n * 5. For looping animations, keep them subtle and use longer durations\r\n * \r\n * Example usage:\r\n * ```tsx\r\n * // In a component\r\n * <button className=\"transition-colors duration-200 motion-reduce:transition-none\">Click me</button>\r\n * <div className=\"animate-fade-in motion-reduce:animate-none\">Animated content</div>\r\n * ```\r\n */\r\n\r\n// Helpers for building consistent animation strings\r\nexport const buildTransition = (properties: string[], duration: number = durations.normal, easing: string = easings.easeInOut): string => {\r\n  return `${properties.join(', ')} ${duration}ms ${easing}`;\r\n};\r\n\r\n// Helper to get appropriate duration for reduced motion preferences\r\nexport const getReducedMotionDuration = (originalDuration: number): number => {\r\n  // For reduced motion preferences, make all animations faster\r\n  return Math.min(originalDuration, durations.fast);\r\n};","import React, { useState, useRef, useEffect } from 'react';\r\nimport { durations, easings } from '../../foundations/animations';\r\n\r\nexport type TooltipPosition = 'top' | 'right' | 'bottom' | 'left';\r\nexport type TooltipSize = 'sm' | 'md' | 'lg';\r\n\r\nexport interface TooltipProps {\r\n  /** The element to attach the tooltip to */\r\n  children: React.ReactNode;\r\n  /** Content to display in the tooltip */\r\n  content: React.ReactNode;\r\n  /** Position of the tooltip relative to the element */\r\n  position?: TooltipPosition;\r\n  /** Size of the tooltip that determines padding and font size */\r\n  size?: TooltipSize;\r\n  /** Maximum width of the tooltip */\r\n  maxWidth?: string;\r\n  /** Delay before showing tooltip (ms) */\r\n  delay?: number;\r\n  /** Delay before showing tooltip (ms) - alias for 'delay' */\r\n  showDelay?: number;\r\n  /** Delay before hiding tooltip (ms) */\r\n  hideDelay?: number;\r\n  /** Whether the tooltip is disabled */\r\n  disabled?: boolean;\r\n  /** Whether to show the arrow */\r\n  showArrow?: boolean;\r\n  /** Custom CSS class for the tooltip */\r\n  className?: string;\r\n  /** ID attribute for the tooltip */\r\n  id?: string;\r\n  /** Whether to show tooltip on touch devices */\r\n  enableOnTouch?: boolean;\r\n  /** Whether to allow HTML content */\r\n  allowHtml?: boolean;\r\n  /** Controlled visibility state */\r\n  isOpen?: boolean;\r\n}\r\n\r\n/**\r\n * Tooltip - A component that displays additional information when hovering over an element\r\n * \r\n * @description\r\n * Tooltips provide additional context and information when users hover over or focus on\r\n * an element. They are non-modal and disappear when the user moves their cursor away or\r\n * shifts focus. Tooltips should be used for supplementary information that enhances the\r\n * user experience but isn't essential for basic functionality.\r\n * \r\n * The tooltip component handles positioning, visibility, and animations automatically.\r\n * It supports different positions, sizes, delays, and customizable content. Tooltips\r\n * are designed to be accessible and respect user preferences for reduced motion.\r\n * \r\n * @accessibility\r\n * - Uses proper ARIA role=\"tooltip\" for screen reader identification\r\n * - Supports both mouse hover and keyboard focus events\r\n * - Includes configurable delay to prevent accidental triggering\r\n * - Handles proper cleanup to prevent memory leaks\r\n * - Respects reduced motion preferences through adaptive animations\r\n * - Ensures sufficient color contrast for readability\r\n * - Uses appropriate font sizes for legibility\r\n * \r\n * @example\r\n * ```tsx\r\n * // Basic tooltip\r\n * <Tooltip content=\"Additional information\">\r\n *   <Button>Hover me</Button>\r\n * </Tooltip>\r\n * \r\n * // Positioned tooltip with delay\r\n * <Tooltip \r\n *   content=\"This appears after a delay\" \r\n *   position=\"right\"\r\n *   delay={500}\r\n * >\r\n *   <InfoIcon />\r\n * </Tooltip>\r\n * \r\n * // Rich content tooltip\r\n * <Tooltip\r\n *   content={\r\n *     <div>\r\n *       <h4 className=\"font-bold\">Heading</h4>\r\n *       <p>Detailed explanation with multiple lines</p>\r\n *     </div>\r\n *   }\r\n *   maxWidth=\"max-w-md\"\r\n *   size=\"lg\"\r\n * >\r\n *   <TextWithIcon>More details</TextWithIcon>\r\n * </Tooltip>\r\n * ```\r\n */\r\nexport const Tooltip: React.FC<TooltipProps> = ({\r\n  children,\r\n  content,\r\n  position = 'top',\r\n  size = 'md',\r\n  maxWidth = 'max-w-xs',\r\n  delay = 0,\r\n  showDelay,\r\n  hideDelay,\r\n  disabled = false,\r\n  showArrow = true,\r\n  className = '',\r\n  id,\r\n  enableOnTouch = false,\r\n  allowHtml = false,\r\n  isOpen,\r\n}) => {\r\n  const [isVisible, setIsVisible] = useState(isOpen || false);\r\n  const [shouldRender, setShouldRender] = useState(isOpen || false);\r\n  const showTimeoutRef = useRef<number | null>(null);\r\n  const hideTimeoutRef = useRef<number | null>(null);\r\n  const triggerRef = useRef<HTMLDivElement>(null);\r\n  const tooltipRef = useRef<HTMLDivElement>(null);\r\n  \r\n  // Use showDelay if provided, otherwise fall back to delay\r\n  const effectiveShowDelay = showDelay !== undefined ? showDelay : delay;\r\n  \r\n  // Effect to handle controlled visibility via isOpen prop\r\n  useEffect(() => {\r\n    if (isOpen !== undefined) {\r\n      setIsVisible(isOpen);\r\n      setShouldRender(isOpen);\r\n    }\r\n  }, [isOpen]);\r\n  \r\n  // Show tooltip\r\n  const showTooltip = () => {\r\n    if (disabled || isOpen !== undefined) return;\r\n    \r\n    // Clear any pending hide timeout\r\n    if (hideTimeoutRef.current) {\r\n      clearTimeout(hideTimeoutRef.current);\r\n      hideTimeoutRef.current = null;\r\n    }\r\n    \r\n    setShouldRender(true);\r\n    if (effectiveShowDelay > 0) {\r\n      showTimeoutRef.current = window.setTimeout(() => {\r\n        setIsVisible(true);\r\n      }, effectiveShowDelay);\r\n    } else {\r\n      setIsVisible(true);\r\n    }\r\n  };\r\n  \r\n  // Hide tooltip\r\n  const hideTooltip = () => {\r\n    if (isOpen !== undefined) return; // Don't hide if controlled externally\r\n    \r\n    // Clear any pending show timeout\r\n    if (showTimeoutRef.current) {\r\n      clearTimeout(showTimeoutRef.current);\r\n      showTimeoutRef.current = null;\r\n    }\r\n    \r\n    const performHide = () => {\r\n      setIsVisible(false);\r\n      \r\n      // Small delay before unmounting to allow for exit animations\r\n      setTimeout(() => {\r\n        setShouldRender(false);\r\n      }, durations.normal);\r\n    };\r\n    \r\n    if (hideDelay && hideDelay > 0) {\r\n      hideTimeoutRef.current = window.setTimeout(performHide, hideDelay);\r\n    } else {\r\n      performHide();\r\n    }\r\n  };\r\n\r\n  // Ensure we clean up any timeouts when component unmounts\r\n  useEffect(() => {\r\n    return () => {\r\n      if (showTimeoutRef.current) {\r\n        clearTimeout(showTimeoutRef.current);\r\n      }\r\n      if (hideTimeoutRef.current) {\r\n        clearTimeout(hideTimeoutRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Position classes based on position prop\r\n  const getPositionClasses = () => {\r\n    switch (position) {\r\n      case 'right':\r\n        return 'left-full top-1/2 -translate-y-1/2 ml-2 transform-gpu';\r\n      case 'bottom':\r\n        return 'top-full left-1/2 -translate-x-1/2 mt-2 transform-gpu';\r\n      case 'left':\r\n        return 'right-full top-1/2 -translate-y-1/2 mr-2 transform-gpu';\r\n      default: // top\r\n        return 'bottom-full left-1/2 -translate-x-1/2 mb-2 transform-gpu';\r\n    }\r\n  };\r\n\r\n  // Size classes based on size prop\r\n  const getSizeClasses = () => {\r\n    switch (size) {\r\n      case 'sm':\r\n        return 'px-2 py-1 text-xs';\r\n      case 'lg':\r\n        return 'px-3 py-2 text-base';\r\n      default: // md\r\n        return 'px-2.5 py-1.5 text-sm';\r\n    }\r\n  };\r\n\r\n  // Animation classes based on position\r\n  const getAnimationClasses = () => {\r\n    if (!isVisible) return '';\r\n    \r\n    const animationMap = {\r\n      'top': 'animate-tooltip-fade-down motion-reduce:animate-fade-in',\r\n      'bottom': 'animate-tooltip-fade-up motion-reduce:animate-fade-in',\r\n      'left': 'animate-tooltip-fade-right motion-reduce:animate-fade-in',\r\n      'right': 'animate-tooltip-fade-left motion-reduce:animate-fade-in'\r\n    };\r\n    \r\n    return animationMap[position];\r\n  };\r\n\r\n  // Arrow position classes\r\n  const getArrowClasses = () => {\r\n    switch (position) {\r\n      case 'right':\r\n        return 'left-0 top-1/2 -translate-y-1/2 -translate-x-1/2 border-r-gray-800 dark:border-r-gray-700 border-t-transparent border-b-transparent border-l-transparent';\r\n      case 'bottom':\r\n        return 'top-0 left-1/2 -translate-x-1/2 -translate-y-1/2 border-b-gray-800 dark:border-b-gray-700 border-l-transparent border-r-transparent border-t-transparent';\r\n      case 'left':\r\n        return 'right-0 top-1/2 -translate-y-1/2 translate-x-1/2 border-l-gray-800 dark:border-l-gray-700 border-t-transparent border-b-transparent border-r-transparent';\r\n      default: // top\r\n        return 'bottom-0 left-1/2 -translate-x-1/2 translate-y-1/2 border-t-gray-800 dark:border-t-gray-700 border-l-transparent border-r-transparent border-b-transparent';\r\n    }\r\n  };\r\n\r\n  // Touch device handling\r\n  const touchStartEvents = enableOnTouch \r\n    ? { \r\n      onTouchStart: (e: React.TouchEvent) => {\r\n        e.preventDefault();\r\n        showTooltip();\r\n      },\r\n      onTouchEnd: hideTooltip\r\n    } \r\n    : {};\r\n\r\n  // Base tooltip classes\r\n  const tooltipClasses = [\r\n    'absolute z-50',\r\n    'bg-gray-800 dark:bg-gray-700',\r\n    'text-white',\r\n    'rounded shadow-lg',\r\n    getSizeClasses(),\r\n    'transition-all duration-300 ease-emphasized motion-reduce:transition-none',\r\n    getPositionClasses(),\r\n    getAnimationClasses(),\r\n    maxWidth,\r\n    isVisible ? 'opacity-100' : 'opacity-0 pointer-events-none',\r\n    className\r\n  ].filter(Boolean).join(' ');\r\n\r\n  // Arrow classes\r\n  const arrowClasses = [\r\n    'absolute w-0 h-0',\r\n    'border-solid border-[6px]',\r\n    'transition-transform duration-200 motion-reduce:transition-none',\r\n    getArrowClasses()\r\n  ].join(' ');\r\n\r\n  return (\r\n    <div\r\n      className=\"relative inline-block\"\r\n      onMouseEnter={showTooltip}\r\n      onMouseLeave={hideTooltip}\r\n      onFocus={showTooltip}\r\n      onBlur={hideTooltip}\r\n      ref={triggerRef}\r\n      {...touchStartEvents}\r\n    >\r\n      {/* Trigger element */}\r\n      {children}\r\n      \r\n      {/* Tooltip content */}\r\n      {shouldRender && (\r\n        <div\r\n          ref={tooltipRef}\r\n          className={tooltipClasses}\r\n          role=\"tooltip\"\r\n          id={id}\r\n          {...(allowHtml ? { dangerouslySetInnerHTML: { __html: content as string } } : {})}\r\n        >\r\n          {showArrow && <div className={arrowClasses} />}\r\n          {!allowHtml && content}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tooltip;"],"names":["durations","Tooltip","children","content","position","size","maxWidth","delay","showDelay","hideDelay","disabled","showArrow","className","id","enableOnTouch","allowHtml","isOpen","isVisible","setIsVisible","useState","shouldRender","setShouldRender","showTimeoutRef","useRef","hideTimeoutRef","triggerRef","tooltipRef","effectiveShowDelay","useEffect","showTooltip","hideTooltip","performHide","getPositionClasses","getSizeClasses","getAnimationClasses","getArrowClasses","touchStartEvents","e","tooltipClasses","arrowClasses","jsxs","jsx"],"mappings":"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"}