{"version":3,"file":"LinkTracer-1b851cfd.js","sources":["../../src/tools/linktracer/LinkTracer.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { getToolByRoute } from '../index';\r\nimport { ToolLayout, Card, Button, LoadingSpinner } from '../../design-system';\r\n\r\ninterface Hop {\r\n  n: number;\r\n  url: string;\r\n  status: number;\r\n  method: string;\r\n  latencyMs: number;\r\n  error?: string;\r\n}\r\n\r\ninterface TraceResult {\r\n  hops: Hop[];\r\n  totalTimeMs: number;\r\n  warnings: string[];\r\n}\r\n\r\ninterface UserAgentOption {\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\nconst LinkTracer: React.FC = () => {\r\n  const tool = getToolByRoute('/link-tracer');\r\n  const [url, setUrl] = useState<string>('');\r\n  const [traceResults, setTraceResults] = useState<TraceResult | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [showAdvanced, setShowAdvanced] = useState<boolean>(false);\r\n  const [selectedMethod, setSelectedMethod] = useState<string>('HEAD');\r\n  const [selectedUserAgent, setSelectedUserAgent] = useState<string>('default');\r\n  const [customUserAgent, setCustomUserAgent] = useState<string>('');\r\n  const [maxHops, setMaxHops] = useState<number>(20);\r\n  const [exportFeedback, setExportFeedback] = useState<string | null>(null);\r\n  const feedbackTimeoutRef = useRef<number | null>(null);\r\n\r\n  // User agent presets\r\n  const userAgentOptions: UserAgentOption[] = [\r\n    { label: 'Default', value: 'default' },\r\n    { label: 'Chrome (Desktop)', value: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36' },\r\n    { label: 'Safari (iOS)', value: 'Mozilla/5.0 (iPhone; CPU iPhone OS 14_6 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.0 Mobile/15E148 Safari/604.1' },\r\n    { label: 'Firefox', value: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0' },\r\n    { label: 'Google Bot', value: 'Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)' },\r\n    { label: 'Custom', value: 'custom' }\r\n  ];\r\n\r\n  // HTTP methods\r\n  const httpMethods = ['HEAD', 'GET', 'OPTIONS'];\r\n\r\n  // Load saved preferences from localStorage\r\n  useEffect(() => {\r\n    try {\r\n      const savedPrefs = localStorage.getItem('linkTracerPrefs');\r\n      if (savedPrefs) {\r\n        const prefs = JSON.parse(savedPrefs);\r\n        if (prefs.method) setSelectedMethod(prefs.method);\r\n        if (prefs.userAgent) setSelectedUserAgent(prefs.userAgent);\r\n        if (prefs.customUserAgent) setCustomUserAgent(prefs.customUserAgent);\r\n        if (prefs.maxHops) setMaxHops(prefs.maxHops);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading Link Tracer preferences:', error);\r\n    }\r\n  }, []);\r\n\r\n  // Save preferences to localStorage when they change\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('linkTracerPrefs', JSON.stringify({\r\n        method: selectedMethod,\r\n        userAgent: selectedUserAgent,\r\n        customUserAgent,\r\n        maxHops\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error saving Link Tracer preferences:', error);\r\n    }\r\n  }, [selectedMethod, selectedUserAgent, customUserAgent, maxHops]);\r\n\r\n  const handleTrace = async () => {\r\n    if (!url) {\r\n      setError('Please enter a URL');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n    setTraceResults(null);\r\n\r\n    try {\r\n      // Get the actual user agent string to use\r\n      let userAgent = 'MyDebugger-LinkTracer/1.0';\r\n      if (selectedUserAgent === 'custom') {\r\n        userAgent = customUserAgent || userAgent;\r\n      } else if (selectedUserAgent !== 'default') {\r\n        userAgent = selectedUserAgent;\r\n      }\r\n\r\n      // Call the link trace API\r\n      const response = await fetch('/api/link-trace', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          url,\r\n          method: selectedMethod,\r\n          userAgent,\r\n          maxHops\r\n        }),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || `Request failed with status ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setTraceResults(data);\r\n    } catch (err) {\r\n      setError(`Error tracing URL: ${err instanceof Error ? err.message : 'Unknown error'}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === 'Enter') {\r\n      handleTrace();\r\n    }\r\n  };\r\n\r\n  const handleCopyJSON = () => {\r\n    if (!traceResults) return;\r\n    navigator.clipboard.writeText(JSON.stringify(traceResults, null, 2));\r\n    \r\n    // Show feedback\r\n    showFeedback('JSON copied to clipboard!');\r\n  };\r\n\r\n  const handleExportCSV = () => {\r\n    if (!traceResults) return;\r\n    \r\n    // Create CSV content\r\n    let csv = 'Hop,Status,Method,URL,Latency (ms)\\n';\r\n    traceResults.hops.forEach(hop => {\r\n      csv += `${hop.n},${hop.status},${hop.method},\"${hop.url}\",${hop.latencyMs}\\n`;\r\n    });\r\n    \r\n    // Create download link\r\n    const blob = new Blob([csv], { type: 'text/csv' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.setAttribute('hidden', '');\r\n    a.setAttribute('href', url);\r\n    a.setAttribute('download', 'redirect-trace.csv');\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    \r\n    // Show feedback\r\n    showFeedback('CSV file downloaded!');\r\n  };\r\n\r\n  // Helper to show temporary feedback message\r\n  const showFeedback = (message: string) => {\r\n    setExportFeedback(message);\r\n    \r\n    // Clear any existing timeout\r\n    if (feedbackTimeoutRef.current) {\r\n      window.clearTimeout(feedbackTimeoutRef.current);\r\n    }\r\n    \r\n    // Set new timeout to clear message\r\n    feedbackTimeoutRef.current = window.setTimeout(() => {\r\n      setExportFeedback(null);\r\n    }, 3000);\r\n  };\r\n\r\n  // Cleanup timeout on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (feedbackTimeoutRef.current) {\r\n        window.clearTimeout(feedbackTimeoutRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const getStatusClass = (status: number): string => {\r\n    if (status >= 200 && status < 300) {\r\n      return 'bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200';\r\n    } else if (status >= 300 && status < 400) {\r\n      return 'bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200';\r\n    } else if (status >= 400 && status < 500) {\r\n      return 'bg-orange-100 dark:bg-orange-900 text-orange-800 dark:text-orange-200';\r\n    } else if (status >= 500) {\r\n      return 'bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-200';\r\n    } else {\r\n      return 'bg-gray-100 dark:bg-gray-800 text-gray-800 dark:text-gray-200';\r\n    }\r\n  };\r\n\r\n  // SEO metadata\r\n  const pageTitle = \"URL Redirect Checker | MyDebugger\";\r\n  const pageDescription = \"Trace the complete redirect path of any URL, including status codes, latency and security warnings.\";\r\n  \r\n  return (\r\n    <ToolLayout tool={tool!}>\r\n      <Helmet>\r\n        <title>{pageTitle}</title>\r\n        <meta name=\"description\" content={pageDescription} />\r\n        <meta property=\"og:title\" content={pageTitle} />\r\n        <meta property=\"og:description\" content={pageDescription} />\r\n        <meta property=\"og:type\" content=\"website\" />\r\n        <meta property=\"og:url\" content=\"https://mydebugger.vercel.app/link-tracer\" />\r\n        <meta name=\"twitter:card\" content=\"summary\" />\r\n        <meta name=\"twitter:title\" content={pageTitle} />\r\n        <meta name=\"twitter:description\" content={pageDescription} />\r\n        <link rel=\"canonical\" href=\"https://mydebugger.vercel.app/link-tracer\" />\r\n      </Helmet>\r\n      \r\n      <div className=\"space-y-6\">\r\n        <Card isElevated>\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label htmlFor=\"url-input\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                Enter URL to trace redirects\r\n              </label>\r\n              <div className=\"flex\">\r\n                <input\r\n                  id=\"url-input\"\r\n                  type=\"text\"\r\n                  className=\"flex-grow rounded-l-md border-gray-300 dark:border-gray-700 dark:bg-gray-800 dark:text-white shadow-sm focus:border-primary-500 focus:ring focus:ring-primary-200 dark:focus:ring-primary-900 focus:ring-opacity-50\"\r\n                  placeholder=\"https://bit.ly/example\"\r\n                  value={url}\r\n                  onChange={(e) => setUrl(e.target.value)}\r\n                  onKeyPress={handleKeyPress}\r\n                  disabled={loading}\r\n                />\r\n                <Button\r\n                  onClick={handleTrace}\r\n                  isLoading={loading}\r\n                  disabled={loading || !url}\r\n                  className=\"rounded-l-none\"\r\n                >\r\n                  Trace URL\r\n                </Button>\r\n              </div>\r\n              <p className=\"mt-2 text-sm text-gray-500 dark:text-gray-400\">\r\n                Enter any URL to trace its complete redirect path, including shortened URLs.\r\n              </p>\r\n            </div>\r\n\r\n            {/* Advanced Options Toggle */}\r\n            <div>\r\n              <button\r\n                onClick={() => setShowAdvanced(!showAdvanced)}\r\n                className=\"text-sm text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200 flex items-center focus:outline-none\"\r\n              >\r\n                <svg \r\n                  className={`h-4 w-4 mr-1 transition-transform ${showAdvanced ? 'transform rotate-90' : ''}`}\r\n                  fill=\"none\" \r\n                  viewBox=\"0 0 24 24\" \r\n                  stroke=\"currentColor\"\r\n                >\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n                </svg>\r\n                Advanced Options\r\n              </button>\r\n\r\n              {showAdvanced && (\r\n                <div className=\"mt-3 p-4 bg-gray-50 dark:bg-gray-800 rounded-md border border-gray-200 dark:border-gray-700\">\r\n                  <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2\">\r\n                    {/* HTTP Method */}\r\n                    <div>\r\n                      <label htmlFor=\"http-method\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                        HTTP Method\r\n                      </label>\r\n                      <div className=\"flex space-x-3\">\r\n                        {httpMethods.map(method => (\r\n                          <label key={method} className=\"flex items-center\">\r\n                            <input\r\n                              type=\"radio\"\r\n                              name=\"http-method\"\r\n                              value={method}\r\n                              checked={selectedMethod === method}\r\n                              onChange={() => setSelectedMethod(method)}\r\n                              className=\"h-4 w-4 text-primary-600 focus:ring-primary-500\"\r\n                            />\r\n                            <span className=\"ml-2 text-sm text-gray-700 dark:text-gray-300\">{method}</span>\r\n                          </label>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Max Hops */}\r\n                    <div>\r\n                      <label htmlFor=\"max-hops\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                        Max Redirects: {maxHops}\r\n                      </label>\r\n                      <input\r\n                        id=\"max-hops\"\r\n                        type=\"range\"\r\n                        min=\"1\"\r\n                        max=\"30\"\r\n                        value={maxHops}\r\n                        onChange={(e) => setMaxHops(parseInt(e.target.value))}\r\n                        className=\"w-full\"\r\n                      />\r\n                    </div>\r\n\r\n                    {/* User Agent */}\r\n                    <div className=\"md:col-span-2\">\r\n                      <label htmlFor=\"user-agent\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                        User Agent\r\n                      </label>\r\n                      <select\r\n                        id=\"user-agent\"\r\n                        value={selectedUserAgent}\r\n                        onChange={(e) => setSelectedUserAgent(e.target.value)}\r\n                        className=\"block w-full rounded-md border-gray-300 dark:border-gray-700 dark:bg-gray-800 dark:text-white shadow-sm focus:border-primary-500 focus:ring focus:ring-primary-500 text-sm\"\r\n                      >\r\n                        {userAgentOptions.map(option => (\r\n                          <option key={option.value} value={option.value}>{option.label}</option>\r\n                        ))}\r\n                      </select>\r\n\r\n                      {selectedUserAgent === 'custom' && (\r\n                        <input\r\n                          type=\"text\"\r\n                          value={customUserAgent}\r\n                          onChange={(e) => setCustomUserAgent(e.target.value)}\r\n                          placeholder=\"Enter custom User-Agent string\"\r\n                          className=\"mt-2 block w-full rounded-md border-gray-300 dark:border-gray-700 dark:bg-gray-800 dark:text-white shadow-sm focus:border-primary-500 focus:ring focus:ring-primary-500 text-sm\"\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {error && (\r\n              <div className=\"p-3 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-md text-red-700 dark:text-red-400 text-sm\">\r\n                {error}\r\n              </div>\r\n            )}\r\n\r\n            {loading && (\r\n              <div className=\"flex justify-center py-12\">\r\n                <LoadingSpinner />\r\n              </div>\r\n            )}\r\n\r\n            {traceResults && !loading && (\r\n              <div className=\"animate-fade-in space-y-4\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <h2 className=\"text-xl font-medium text-gray-900 dark:text-white\">\r\n                    Redirect Trace Results\r\n                  </h2>\r\n                  <div className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                    <span className=\"font-medium\">Total Time:</span> {traceResults.totalTimeMs}ms | \r\n                    <span className=\"font-medium ml-2\">Hops:</span> {traceResults.hops.length}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Warnings Section */}\r\n                {traceResults.warnings.length > 0 && (\r\n                  <div className=\"p-3 bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-md\">\r\n                    <h3 className=\"font-medium text-yellow-800 dark:text-yellow-300 mb-1\">Warnings</h3>\r\n                    <ul className=\"list-disc list-inside text-sm text-yellow-700 dark:text-yellow-400 space-y-1\">\r\n                      {traceResults.warnings.map((warning, index) => (\r\n                        <li key={index}>\r\n                          {warning.includes('PROTOCOL_DOWNGRADE') ? \r\n                            'HTTPS to HTTP downgrade detected' : warning}\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Results Table */}\r\n                <div className=\"bg-white dark:bg-gray-900 overflow-hidden border border-gray-200 dark:border-gray-700 rounded-md shadow\">\r\n                  <div className=\"overflow-x-auto\">\r\n                    <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\r\n                      <thead className=\"bg-gray-50 dark:bg-gray-800\">\r\n                        <tr>\r\n                          <th scope=\"col\" className=\"px-3 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                            Hop\r\n                          </th>\r\n                          <th scope=\"col\" className=\"px-3 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                            Status\r\n                          </th>\r\n                          <th scope=\"col\" className=\"px-3 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                            Method\r\n                          </th>\r\n                          <th scope=\"col\" className=\"px-3 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                            URL\r\n                          </th>\r\n                          <th scope=\"col\" className=\"px-3 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                            Latency\r\n                          </th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\r\n                        {traceResults.hops.map((hop, index) => (\r\n                          <tr key={index} className={index % 2 === 0 ? 'bg-white dark:bg-gray-900' : 'bg-gray-50 dark:bg-gray-800'}>\r\n                            <td className=\"px-3 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100\">\r\n                              {hop.n}\r\n                            </td>\r\n                            <td className=\"px-3 py-4 whitespace-nowrap text-xs\">\r\n                              <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full font-medium ${getStatusClass(hop.status)}`}>\r\n                                {hop.status || 'Error'}\r\n                              </span>\r\n                            </td>\r\n                            <td className=\"px-3 py-4 whitespace-nowrap text-sm text-gray-700 dark:text-gray-300\">\r\n                              {hop.method}\r\n                            </td>\r\n                            <td className=\"px-3 py-4 text-sm text-gray-700 dark:text-gray-300 font-mono break-all max-w-md\">\r\n                              {hop.url}\r\n                              {hop.error && (\r\n                                <p className=\"text-xs text-red-500 mt-1\">{hop.error}</p>\r\n                              )}\r\n                            </td>\r\n                            <td className=\"px-3 py-4 whitespace-nowrap text-sm text-gray-700 dark:text-gray-300\">\r\n                              {hop.latencyMs}ms\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Export Options */}\r\n                <div className=\"flex flex-wrap justify-between items-center mt-6 bg-gray-50 dark:bg-gray-800 p-4 rounded-md border border-gray-200 dark:border-gray-700\">\r\n                  <div>\r\n                    <h3 className=\"font-medium text-gray-900 dark:text-white\">Export Results</h3>\r\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">Download or copy trace data in different formats</p>\r\n                  </div>\r\n                  <div className=\"flex space-x-2 mt-3 sm:mt-0\">\r\n                    <Button\r\n                      onClick={handleCopyJSON}\r\n                      variant=\"light\"\r\n                      size=\"sm\"\r\n                      className=\"flex items-center\"\r\n                    >\r\n                      <svg className=\"w-4 h-4 mr-2\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M8 5H6C4.89543 5 4 5.89543 4 7V19C4 20.1046 4.89543 21 6 21H16C17.1046 21 18 20.1046 18 19V18M8 5C8 3.89543 8.89543 3 10 3H14C15.1046 3 16 3.89543 16 5V7M8 5V7H16V5M16 10H20M18 8V12\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                      </svg>\r\n                      JSON\r\n                    </Button>\r\n                    <Button\r\n                      onClick={handleExportCSV}\r\n                      variant=\"light\"\r\n                      size=\"sm\"\r\n                      className=\"flex items-center\"\r\n                    >\r\n                      <svg className=\"w-4 h-4 mr-2\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M12 10V16M12 16L9 13M12 16L15 13M17 21H7C5.89543 21 5 20.1046 5 19V5C5 3.89543 5.89543 3 7 3H14L19 8V19C19 20.1046 18.1046 21 17 21Z\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                      </svg>\r\n                      CSV\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => window.open(traceResults.hops[traceResults.hops.length - 1].url, '_blank')}\r\n                      variant=\"primary\"\r\n                      size=\"sm\"\r\n                      className=\"flex items-center\"\r\n                    >\r\n                      <svg className=\"w-4 h-4 mr-2\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M10 6H6C4.89543 6 4 6.89543 4 8V18C4 19.1046 4.89543 20 6 20H16C17.1046 20 18 19.1046 18 18V14M14 4H20M20 4V10M20 4L10 14\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                      </svg>\r\n                      Open URL\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Export Feedback */}\r\n                {exportFeedback && (\r\n                  <div className=\"mt-2 flex items-center justify-center p-2 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-md text-green-700 dark:text-green-400 text-sm\">\r\n                    <svg className=\"w-5 h-5 mr-2\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <path d=\"M9 12L11 14L15 10M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                    </svg>\r\n                    {exportFeedback}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Card>\r\n\r\n        <Card title=\"About URL Redirects\" isElevated>\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n            <div className=\"border border-gray-200 dark:border-gray-700 rounded-md p-3\">\r\n              <h3 className=\"font-medium text-gray-900 dark:text-white mb-1\">301 Redirect</h3>\r\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">Permanent redirect. The requested resource has been assigned a new permanent URI.</p>\r\n            </div>\r\n            <div className=\"border border-gray-200 dark:border-gray-700 rounded-md p-3\">\r\n              <h3 className=\"font-medium text-gray-900 dark:text-white mb-1\">302 Redirect</h3>\r\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">Temporary redirect. The requested resource resides temporarily under a different URI.</p>\r\n            </div>\r\n            <div className=\"border border-gray-200 dark:border-gray-700 rounded-md p-3\">\r\n              <h3 className=\"font-medium text-gray-900 dark:text-white mb-1\">307 Redirect</h3>\r\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">Temporary redirect that guarantees the HTTP method won't change in the redirected request.</p>\r\n            </div>\r\n            <div className=\"border border-gray-200 dark:border-gray-700 rounded-md p-3\">\r\n              <h3 className=\"font-medium text-gray-900 dark:text-white mb-1\">308 Redirect</h3>\r\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">Permanent redirect that guarantees the HTTP method won't change in the redirected request.</p>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    </ToolLayout>\r\n  );\r\n};\r\n\r\nexport default LinkTracer;"],"names":["LinkTracer","tool","getToolByRoute","url","setUrl","useState","traceResults","setTraceResults","loading","setLoading","error","setError","showAdvanced","setShowAdvanced","selectedMethod","setSelectedMethod","selectedUserAgent","setSelectedUserAgent","customUserAgent","setCustomUserAgent","maxHops","setMaxHops","exportFeedback","setExportFeedback","feedbackTimeoutRef","useRef","userAgentOptions","httpMethods","useEffect","savedPrefs","prefs","handleTrace","userAgent","response","errorData","data","err","handleKeyPress","e","handleCopyJSON","showFeedback","handleExportCSV","csv","hop","blob","a","message","getStatusClass","status","pageTitle","pageDescription","jsxs","ToolLayout","Helmet","jsx","Card","Button","method","option","LoadingSpinner","warning","index"],"mappings":"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"}