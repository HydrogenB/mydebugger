{"version":3,"file":"ComponentsDemo-4efb3a06.js","sources":["../../src/design-system/foundations/animations.ts","../../src/design-system/components/overlays/Tooltip.tsx","../../src/design-system/components/display/InfoBox.tsx","../../src/tools/components-demo/ComponentsDemo.tsx"],"sourcesContent":["// Design system animation tokens and utilities\r\n\r\n/**\r\n * Animation foundations for the design system\r\n * \r\n * This file provides standardized animation tokens and utilities that can be used\r\n * across all components in the design system to ensure consistency in motion design.\r\n * \r\n * All animations include support for reduced motion preferences by providing alternative\r\n * animations or durations that respect user preferences for reduced motion.\r\n */\r\n\r\n// Standard durations in milliseconds\r\nexport const durations = {\r\n  instant: 0,\r\n  extraFast: 100,\r\n  fast: 200,\r\n  normal: 300,\r\n  slow: 500,\r\n  extraSlow: 800,\r\n};\r\n\r\n// Standard easing functions\r\nexport const easings = {\r\n  // Standard easings\r\n  linear: 'linear',\r\n  ease: 'ease',\r\n  easeIn: 'ease-in',\r\n  easeOut: 'ease-out',\r\n  easeInOut: 'ease-in-out',\r\n  \r\n  // Custom cubic-bezier easings\r\n  emphasized: 'cubic-bezier(0.2, 0, 0, 1)',\r\n  emphasizedDecelerate: 'cubic-bezier(0.05, 0.7, 0.1, 1.0)',\r\n  emphasizedAccelerate: 'cubic-bezier(0.3, 0, 0.8, 0.15)',\r\n  \r\n  // Spring-like easings\r\n  spring: 'cubic-bezier(0.5, 0, 0.1, 1.2)',\r\n  bounce: 'cubic-bezier(0.175, 0.885, 0.32, 1.275)',\r\n};\r\n\r\n// CSS keyframe animations to be used in component classes\r\nexport const keyframes = {\r\n  fadeIn: `\r\n    @keyframes fadeIn {\r\n      from { opacity: 0; }\r\n      to { opacity: 1; }\r\n    }\r\n  `,\r\n  fadeOut: `\r\n    @keyframes fadeOut {\r\n      from { opacity: 1; }\r\n      to { opacity: 0; }\r\n    }\r\n  `,\r\n  slideInRight: `\r\n    @keyframes slideInRight {\r\n      from { transform: translateX(100%); }\r\n      to { transform: translateX(0); }\r\n    }\r\n  `,\r\n  slideInLeft: `\r\n    @keyframes slideInLeft {\r\n      from { transform: translateX(-100%); }\r\n      to { transform: translateX(0); }\r\n    }\r\n  `,\r\n  slideInUp: `\r\n    @keyframes slideInUp {\r\n      from { transform: translateY(100%); }\r\n      to { transform: translateY(0); }\r\n    }\r\n  `,\r\n  slideInDown: `\r\n    @keyframes slideInDown {\r\n      from { transform: translateY(-100%); }\r\n      to { transform: translateY(0); }\r\n    }\r\n  `,\r\n  bounceIn: `\r\n    @keyframes bounceIn {\r\n      0% { transform: scale(0.8); opacity: 0; }\r\n      70% { transform: scale(1.05); opacity: 1; }\r\n      100% { transform: scale(1); }\r\n    }\r\n  `,\r\n  spin: `\r\n    @keyframes spin {\r\n      from { transform: rotate(0deg); }\r\n      to { transform: rotate(360deg); }\r\n    }\r\n  `,\r\n  pulse: `\r\n    @keyframes pulse {\r\n      0% { transform: scale(1); }\r\n      50% { transform: scale(1.05); }\r\n      100% { transform: scale(1); }\r\n    }\r\n  `,\r\n  // Add new tooltip animations with GPU acceleration\r\n  tooltipFadeDown: `\r\n    @keyframes tooltipFadeDown {\r\n      from { opacity: 0; transform: translateY(-8px); }\r\n      to { opacity: 1; transform: translateY(0); }\r\n    }\r\n  `,\r\n  tooltipFadeUp: `\r\n    @keyframes tooltipFadeUp {\r\n      from { opacity: 0; transform: translateY(8px); }\r\n      to { opacity: 1; transform: translateY(0); }\r\n    }\r\n  `,\r\n  tooltipFadeLeft: `\r\n    @keyframes tooltipFadeLeft {\r\n      from { opacity: 0; transform: translateX(8px); }\r\n      to { opacity: 1; transform: translateX(0); }\r\n    }\r\n  `,\r\n  tooltipFadeRight: `\r\n    @keyframes tooltipFadeRight {\r\n      from { opacity: 0; transform: translateX(-8px); }\r\n      to { opacity: 1; transform: translateX(0); }\r\n    }\r\n  `,\r\n  // Scale animations\r\n  scaleIn: `\r\n    @keyframes scaleIn {\r\n      from { transform: scale(0.9); opacity: 0; }\r\n      to { transform: scale(1); opacity: 1; }\r\n    }\r\n  `,\r\n  scaleOut: `\r\n    @keyframes scaleOut {\r\n      from { transform: scale(1); opacity: 1; }\r\n      to { transform: scale(0.9); opacity: 0; }\r\n    }\r\n  `,\r\n};\r\n\r\n// Animation style definitions that can be imported into components\r\nexport const animations = {\r\n  fadeIn: {\r\n    animation: 'fadeIn 0.3s ease forwards',\r\n  },\r\n  fadeOut: {\r\n    animation: 'fadeOut 0.3s ease forwards',\r\n  },\r\n  slideInRight: {\r\n    animation: 'slideInRight 0.3s ease forwards',\r\n  },\r\n  slideInLeft: {\r\n    animation: 'slideInLeft 0.3s ease forwards',\r\n  },\r\n  slideInUp: {\r\n    animation: 'slideInUp 0.3s ease forwards',\r\n  },\r\n  slideInDown: {\r\n    animation: 'slideInDown 0.3s ease forwards',\r\n  },\r\n  bounceIn: {\r\n    animation: 'bounceIn 0.5s ease forwards',\r\n  },\r\n  spin: {\r\n    animation: 'spin 1s linear infinite',\r\n  },\r\n  pulse: {\r\n    animation: 'pulse 2s ease infinite',\r\n  },\r\n  scaleIn: {\r\n    animation: 'scaleIn 0.3s ease-out forwards',\r\n  },\r\n  scaleOut: {\r\n    animation: 'scaleOut 0.3s ease-in forwards',\r\n  },\r\n};\r\n\r\n// Utility function to generate animation classes for Tailwind\r\nexport const animationClasses = {\r\n  'animate-fade-in': 'animate-fadeIn',\r\n  'animate-fade-out': 'animate-fadeOut',\r\n  'animate-slide-in-right': 'animate-slideInRight',\r\n  'animate-slide-in-left': 'animate-slideInLeft',\r\n  'animate-slide-in-up': 'animate-slideInUp',\r\n  'animate-slide-in-down': 'animate-slideInDown',\r\n  'animate-bounce-in': 'animate-bounceIn',\r\n  'animate-spin': 'animate-spin',\r\n  'animate-pulse': 'animate-pulse',\r\n  'animate-scale-in': 'animate-scaleIn',\r\n  'animate-scale-out': 'animate-scaleOut',\r\n  'animate-tooltip-fade-down': 'animate-tooltipFadeDown',\r\n  'animate-tooltip-fade-up': 'animate-tooltipFadeUp',\r\n  'animate-tooltip-fade-left': 'animate-tooltipFadeLeft',\r\n  'animate-tooltip-fade-right': 'animate-tooltipFadeRight',\r\n};\r\n\r\n/**\r\n * Guidelines for using animations in components:\r\n * \r\n * 1. Use standard durations and easing functions for consistency\r\n * 2. Always include motion-reduce alternatives:\r\n *    - For transitions: motion-reduce:transition-none\r\n *    - For animations: motion-reduce:animate-none\r\n *    - For transforms: motion-reduce:transform-none\r\n * 3. Use GPU-accelerated properties (transform, opacity) for better performance\r\n * 4. Apply consistent timing across similar interactions:\r\n *    - Micro-interactions: extraFast (100ms)\r\n *    - Button feedback: fast (200ms)\r\n *    - Modal/drawer transitions: normal (300ms)\r\n *    - Page transitions: slow (500ms)\r\n * 5. For looping animations, keep them subtle and use longer durations\r\n * \r\n * Example usage:\r\n * ```tsx\r\n * // In a component\r\n * <button className=\"transition-colors duration-200 motion-reduce:transition-none\">Click me</button>\r\n * <div className=\"animate-fade-in motion-reduce:animate-none\">Animated content</div>\r\n * ```\r\n */\r\n\r\n// Helpers for building consistent animation strings\r\nexport const buildTransition = (properties: string[], duration: number = durations.normal, easing: string = easings.easeInOut): string => {\r\n  return `${properties.join(', ')} ${duration}ms ${easing}`;\r\n};\r\n\r\n// Helper to get appropriate duration for reduced motion preferences\r\nexport const getReducedMotionDuration = (originalDuration: number): number => {\r\n  // For reduced motion preferences, make all animations faster\r\n  return Math.min(originalDuration, durations.fast);\r\n};","import React, { useState, useRef, useEffect } from 'react';\r\nimport { durations, easings } from '../../foundations/animations';\r\n\r\nexport type TooltipPosition = 'top' | 'right' | 'bottom' | 'left';\r\nexport type TooltipSize = 'sm' | 'md' | 'lg';\r\n\r\nexport interface TooltipProps {\r\n  /** The element to attach the tooltip to */\r\n  children: React.ReactNode;\r\n  /** Content to display in the tooltip */\r\n  content: React.ReactNode;\r\n  /** Position of the tooltip relative to the element */\r\n  position?: TooltipPosition;\r\n  /** Size of the tooltip that determines padding and font size */\r\n  size?: TooltipSize;\r\n  /** Maximum width of the tooltip */\r\n  maxWidth?: string;\r\n  /** Delay before showing tooltip (ms) */\r\n  delay?: number;\r\n  /** Whether the tooltip is disabled */\r\n  disabled?: boolean;\r\n  /** Whether to show the arrow */\r\n  showArrow?: boolean;\r\n  /** Custom CSS class for the tooltip */\r\n  className?: string;\r\n  /** ID attribute for the tooltip */\r\n  id?: string;\r\n  /** Whether to show tooltip on touch devices */\r\n  enableOnTouch?: boolean;\r\n  /** Whether to allow HTML content */\r\n  allowHtml?: boolean;\r\n}\r\n\r\n/**\r\n * Tooltip - A component that displays additional information when hovering over an element\r\n * \r\n * @description\r\n * Tooltips provide additional context and information when users hover over or focus on\r\n * an element. They are non-modal and disappear when the user moves their cursor away or\r\n * shifts focus. Tooltips should be used for supplementary information that enhances the\r\n * user experience but isn't essential for basic functionality.\r\n * \r\n * The tooltip component handles positioning, visibility, and animations automatically.\r\n * It supports different positions, sizes, delays, and customizable content. Tooltips\r\n * are designed to be accessible and respect user preferences for reduced motion.\r\n * \r\n * @accessibility\r\n * - Uses proper ARIA role=\"tooltip\" for screen reader identification\r\n * - Supports both mouse hover and keyboard focus events\r\n * - Includes configurable delay to prevent accidental triggering\r\n * - Handles proper cleanup to prevent memory leaks\r\n * - Respects reduced motion preferences through adaptive animations\r\n * - Ensures sufficient color contrast for readability\r\n * - Uses appropriate font sizes for legibility\r\n * \r\n * @example\r\n * ```tsx\r\n * // Basic tooltip\r\n * <Tooltip content=\"Additional information\">\r\n *   <Button>Hover me</Button>\r\n * </Tooltip>\r\n * \r\n * // Positioned tooltip with delay\r\n * <Tooltip \r\n *   content=\"This appears after a delay\" \r\n *   position=\"right\"\r\n *   delay={500}\r\n * >\r\n *   <InfoIcon />\r\n * </Tooltip>\r\n * \r\n * // Rich content tooltip\r\n * <Tooltip\r\n *   content={\r\n *     <div>\r\n *       <h4 className=\"font-bold\">Heading</h4>\r\n *       <p>Detailed explanation with multiple lines</p>\r\n *     </div>\r\n *   }\r\n *   maxWidth=\"max-w-md\"\r\n *   size=\"lg\"\r\n * >\r\n *   <TextWithIcon>More details</TextWithIcon>\r\n * </Tooltip>\r\n * ```\r\n */\r\nexport const Tooltip: React.FC<TooltipProps> = ({\r\n  children,\r\n  content,\r\n  position = 'top',\r\n  size = 'md',\r\n  maxWidth = 'max-w-xs',\r\n  delay = 0,\r\n  disabled = false,\r\n  showArrow = true,\r\n  className = '',\r\n  id,\r\n  enableOnTouch = false,\r\n  allowHtml = false,\r\n}) => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const [shouldRender, setShouldRender] = useState(false);\r\n  const timeoutRef = useRef<number | null>(null);\r\n  const triggerRef = useRef<HTMLDivElement>(null);\r\n  const tooltipRef = useRef<HTMLDivElement>(null);\r\n  \r\n  // Show tooltip\r\n  const showTooltip = () => {\r\n    if (disabled) return;\r\n    \r\n    setShouldRender(true);\r\n    if (delay > 0) {\r\n      timeoutRef.current = window.setTimeout(() => {\r\n        setIsVisible(true);\r\n      }, delay);\r\n    } else {\r\n      setIsVisible(true);\r\n    }\r\n  };\r\n  \r\n  // Hide tooltip\r\n  const hideTooltip = () => {\r\n    if (timeoutRef.current) {\r\n      clearTimeout(timeoutRef.current);\r\n      timeoutRef.current = null;\r\n    }\r\n    setIsVisible(false);\r\n    \r\n    // Small delay before unmounting to allow for exit animations\r\n    setTimeout(() => {\r\n      setShouldRender(false);\r\n    }, durations.normal);\r\n  };\r\n\r\n  // Ensure we clean up any timeouts when component unmounts\r\n  useEffect(() => {\r\n    return () => {\r\n      if (timeoutRef.current) {\r\n        clearTimeout(timeoutRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Position classes based on position prop\r\n  const getPositionClasses = () => {\r\n    switch (position) {\r\n      case 'right':\r\n        return 'left-full top-1/2 -translate-y-1/2 ml-2 transform-gpu';\r\n      case 'bottom':\r\n        return 'top-full left-1/2 -translate-x-1/2 mt-2 transform-gpu';\r\n      case 'left':\r\n        return 'right-full top-1/2 -translate-y-1/2 mr-2 transform-gpu';\r\n      default: // top\r\n        return 'bottom-full left-1/2 -translate-x-1/2 mb-2 transform-gpu';\r\n    }\r\n  };\r\n\r\n  // Size classes based on size prop\r\n  const getSizeClasses = () => {\r\n    switch (size) {\r\n      case 'sm':\r\n        return 'px-2 py-1 text-xs';\r\n      case 'lg':\r\n        return 'px-3 py-2 text-base';\r\n      default: // md\r\n        return 'px-2.5 py-1.5 text-sm';\r\n    }\r\n  };\r\n\r\n  // Animation classes based on position\r\n  const getAnimationClasses = () => {\r\n    if (!isVisible) return '';\r\n    \r\n    const animationMap = {\r\n      'top': 'animate-tooltip-fade-down motion-reduce:animate-fade-in',\r\n      'bottom': 'animate-tooltip-fade-up motion-reduce:animate-fade-in',\r\n      'left': 'animate-tooltip-fade-right motion-reduce:animate-fade-in',\r\n      'right': 'animate-tooltip-fade-left motion-reduce:animate-fade-in'\r\n    };\r\n    \r\n    return animationMap[position];\r\n  };\r\n\r\n  // Arrow position classes\r\n  const getArrowClasses = () => {\r\n    switch (position) {\r\n      case 'right':\r\n        return 'left-0 top-1/2 -translate-y-1/2 -translate-x-1/2 border-r-gray-800 dark:border-r-gray-700 border-t-transparent border-b-transparent border-l-transparent';\r\n      case 'bottom':\r\n        return 'top-0 left-1/2 -translate-x-1/2 -translate-y-1/2 border-b-gray-800 dark:border-b-gray-700 border-l-transparent border-r-transparent border-t-transparent';\r\n      case 'left':\r\n        return 'right-0 top-1/2 -translate-y-1/2 translate-x-1/2 border-l-gray-800 dark:border-l-gray-700 border-t-transparent border-b-transparent border-r-transparent';\r\n      default: // top\r\n        return 'bottom-0 left-1/2 -translate-x-1/2 translate-y-1/2 border-t-gray-800 dark:border-t-gray-700 border-l-transparent border-r-transparent border-b-transparent';\r\n    }\r\n  };\r\n\r\n  // Touch device handling\r\n  const touchStartEvents = enableOnTouch \r\n    ? { \r\n      onTouchStart: (e: React.TouchEvent) => {\r\n        e.preventDefault();\r\n        showTooltip();\r\n      },\r\n      onTouchEnd: hideTooltip\r\n    } \r\n    : {};\r\n\r\n  // Base tooltip classes\r\n  const tooltipClasses = [\r\n    'absolute z-50',\r\n    'bg-gray-800 dark:bg-gray-700',\r\n    'text-white',\r\n    'rounded shadow-lg',\r\n    getSizeClasses(),\r\n    'transition-all duration-300 ease-emphasized motion-reduce:transition-none',\r\n    getPositionClasses(),\r\n    getAnimationClasses(),\r\n    maxWidth,\r\n    isVisible ? 'opacity-100' : 'opacity-0 pointer-events-none',\r\n    className\r\n  ].filter(Boolean).join(' ');\r\n\r\n  // Arrow classes\r\n  const arrowClasses = [\r\n    'absolute w-0 h-0',\r\n    'border-solid border-[6px]',\r\n    'transition-transform duration-200 motion-reduce:transition-none',\r\n    getArrowClasses()\r\n  ].join(' ');\r\n\r\n  return (\r\n    <div\r\n      className=\"relative inline-block\"\r\n      onMouseEnter={showTooltip}\r\n      onMouseLeave={hideTooltip}\r\n      onFocus={showTooltip}\r\n      onBlur={hideTooltip}\r\n      ref={triggerRef}\r\n      {...touchStartEvents}\r\n    >\r\n      {/* Trigger element */}\r\n      {children}\r\n      \r\n      {/* Tooltip content */}\r\n      {shouldRender && (\r\n        <div\r\n          ref={tooltipRef}\r\n          className={tooltipClasses}\r\n          role=\"tooltip\"\r\n          id={id}\r\n          {...(allowHtml ? { dangerouslySetInnerHTML: { __html: content as string } } : {})}\r\n        >\r\n          {showArrow && <div className={arrowClasses} />}\r\n          {!allowHtml && content}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tooltip;","import React from 'react';\r\nimport { Tooltip } from '../overlays/Tooltip';\r\n\r\nexport type InfoBoxVariant = 'info' | 'success' | 'warning' | 'error';\r\n\r\nexport interface InfoBoxProps {\r\n  /** Title of the info box */\r\n  title: string;\r\n  /** Content of the info box */\r\n  children: React.ReactNode;\r\n  /** Visual style variant */\r\n  variant?: InfoBoxVariant;\r\n  /** Optional tooltip to show additional information */\r\n  infoTooltip?: React.ReactNode;\r\n  /** Optional icon to show before the title */\r\n  icon?: React.ReactNode;\r\n  /** Whether to show a border */\r\n  bordered?: boolean;\r\n  /** Additional CSS class */\r\n  className?: string;\r\n  /** ID attribute */\r\n  id?: string;\r\n}\r\n\r\n/**\r\n * InfoBox - A component for displaying contextual information and messages with different variants\r\n * \r\n * @description\r\n * InfoBox is used to communicate important contextual information to users.\r\n * Different variants provide visual cues about the nature of the information:\r\n * - info: General information (blue)\r\n * - success: Success messages and confirmations (green)\r\n * - warning: Warning messages that require attention (yellow)\r\n * - error: Error messages and critical information (red)\r\n * \r\n * Each InfoBox displays a title and content, with optional elements like icons\r\n * and tooltips for additional context.\r\n * \r\n * @accessibility\r\n * - Uses semantic heading (h4) for the title to maintain document outline\r\n * - Color combinations meet WCAG contrast requirements in both light and dark modes\r\n * - Provides visual differentiation beyond just color through borders and backgrounds\r\n * - Integrates with Tooltip component for additional context when needed\r\n * - Accepts custom ID for programmatic identification\r\n * \r\n * @example\r\n * ```tsx\r\n * // Basic info box\r\n * <InfoBox title=\"Information\">\r\n *   This is some helpful information for the user.\r\n * </InfoBox>\r\n * \r\n * // Warning variant with tooltip\r\n * <InfoBox \r\n *   title=\"Warning Notice\" \r\n *   variant=\"warning\"\r\n *   infoTooltip=\"More details about this warning\"\r\n * >\r\n *   This operation has potential side effects.\r\n * </InfoBox>\r\n * \r\n * // Error variant with custom icon and rich content\r\n * <InfoBox \r\n *   title=\"Connection Failed\" \r\n *   variant=\"error\"\r\n *   icon={<AlertIcon className=\"h-5 w-5\" />}\r\n * >\r\n *   <p>Unable to connect to the server.</p>\r\n *   <ul className=\"list-disc ml-4 mt-2\">\r\n *     <li>Check your network connection</li>\r\n *     <li>Verify server status</li>\r\n *   </ul>\r\n * </InfoBox>\r\n * ```\r\n */\r\nexport const InfoBox: React.FC<InfoBoxProps> = ({\r\n  title,\r\n  children,\r\n  variant = 'info',\r\n  infoTooltip,\r\n  icon,\r\n  bordered = true,\r\n  className = '',\r\n  id\r\n}) => {\r\n  // Variant-specific styles\r\n  const getVariantClasses = () => {\r\n    switch (variant) {\r\n      case 'success':\r\n        return {\r\n          container: 'bg-green-50 dark:bg-green-900/20 border-green-200 dark:border-green-800',\r\n          title: 'text-green-800 dark:text-green-300',\r\n          content: 'text-green-700 dark:text-green-200'\r\n        };\r\n      case 'warning':\r\n        return {\r\n          container: 'bg-yellow-50 dark:bg-yellow-900/20 border-yellow-200 dark:border-yellow-800',\r\n          title: 'text-yellow-800 dark:text-yellow-300',\r\n          content: 'text-yellow-700 dark:text-yellow-200'\r\n        };\r\n      case 'error':\r\n        return {\r\n          container: 'bg-red-50 dark:bg-red-900/20 border-red-200 dark:border-red-800',\r\n          title: 'text-red-800 dark:text-red-300',\r\n          content: 'text-red-700 dark:text-red-200'\r\n        };\r\n      case 'info':\r\n      default:\r\n        return {\r\n          container: 'bg-blue-50 dark:bg-blue-900/20 border-blue-200 dark:border-blue-800',\r\n          title: 'text-blue-800 dark:text-blue-300',\r\n          content: 'text-blue-700 dark:text-blue-200'\r\n        };\r\n    }\r\n  };\r\n\r\n  const styles = getVariantClasses();\r\n  const containerClasses = [\r\n    'p-4 rounded-md',\r\n    bordered ? 'border' : '',\r\n    styles.container,\r\n    className\r\n  ].filter(Boolean).join(' ');\r\n\r\n  return (\r\n    <div className={containerClasses} id={id}>\r\n      <div className=\"flex items-center mb-2\">\r\n        {icon && <div className=\"mr-2\">{icon}</div>}\r\n        <h4 className={`font-medium ${styles.title}`}>{title}</h4>\r\n        {infoTooltip && (\r\n          <Tooltip content={infoTooltip}>\r\n            <span className=\"ml-1 cursor-help\">ℹ️</span>\r\n          </Tooltip>\r\n        )}\r\n      </div>\r\n      <div className={`text-sm ${styles.content}`}>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoBox;","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { getToolByRoute } from '../index';\r\nimport { ToolLayout, Card, Button, Tooltip, InfoBox } from '../../design-system';\r\n\r\n/**\r\n * Demo component to showcase UI components and their usage\r\n */\r\nconst ComponentsDemo: React.FC = () => {\r\n  const tool = getToolByRoute('/components-demo');\r\n  \r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>UI Components Demo | MyDebugger</title>\r\n        <meta name=\"description\" content=\"Showcase of reusable UI components in the MyDebugger toolkit\" />\r\n      </Helmet>\r\n      <ToolLayout tool={tool!}>\r\n        <div className=\"space-y-8\">\r\n          {/* Tooltip Demo */}\r\n          <Card title=\"Tooltip Component\" isElevated>\r\n            <div className=\"space-y-6\">\r\n              <p className=\"text-gray-600 dark:text-gray-300\">\r\n                Tooltips provide additional information on hover. They can be positioned in different directions.\r\n              </p>\r\n              \r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 pt-4\">\r\n                <div className=\"flex flex-col items-center space-y-8\">\r\n                  <Tooltip content=\"This is a top tooltip\">\r\n                    <Button>Hover for Top Tooltip</Button>\r\n                  </Tooltip>\r\n                  \r\n                  <Tooltip content=\"This is a right tooltip\" position=\"right\">\r\n                    <Button variant=\"secondary\">Hover for Right Tooltip</Button>\r\n                  </Tooltip>\r\n                </div>\r\n                \r\n                <div className=\"flex flex-col items-center space-y-8\">\r\n                  <Tooltip content=\"This is a bottom tooltip\" position=\"bottom\">\r\n                    <Button variant=\"info\">Hover for Bottom Tooltip</Button>\r\n                  </Tooltip>\r\n                  \r\n                  <Tooltip content=\"This is a left tooltip\" position=\"left\">\r\n                    <Button variant=\"warning\">Hover for Left Tooltip</Button>\r\n                  </Tooltip>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"border-t border-gray-200 dark:border-gray-700 pt-4\">\r\n                <h3 className=\"text-lg font-semibold mb-2\">Rich Content Tooltip</h3>\r\n                <div className=\"flex justify-center\">\r\n                  <Tooltip \r\n                    content={\r\n                      <div className=\"space-y-2\">\r\n                        <p className=\"font-semibold\">Rich Tooltip Content</p>\r\n                        <p>Tooltips can contain complex content:</p>\r\n                        <ul className=\"list-disc list-inside text-xs\">\r\n                          <li>Multiple paragraphs</li>\r\n                          <li>Formatting options</li>\r\n                          <li>Even small images</li>\r\n                        </ul>\r\n                      </div>\r\n                    }\r\n                    position=\"bottom\"\r\n                    maxWidth=\"max-w-md\"\r\n                  >\r\n                    <Button variant=\"ghost\">Hover for Rich Content</Button>\r\n                  </Tooltip>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n          \r\n          {/* InfoBox Demo */}\r\n          <Card title=\"InfoBox Component\" isElevated>\r\n            <div className=\"space-y-6\">\r\n              <p className=\"text-gray-600 dark:text-gray-300\">\r\n                InfoBoxes provide contextual information with different visual styles based on their purpose.\r\n              </p>\r\n              \r\n              <div className=\"space-y-4\">\r\n                <InfoBox title=\"Information Box\" variant=\"info\">\r\n                  This is a standard information box that provides helpful context to users.\r\n                </InfoBox>\r\n                \r\n                <InfoBox \r\n                  title=\"Success Message\" \r\n                  variant=\"success\" \r\n                  infoTooltip=\"This tooltip provides additional context about the success message\"\r\n                >\r\n                  Operation completed successfully. All data was processed correctly.\r\n                </InfoBox>\r\n                \r\n                <InfoBox title=\"Warning Notice\" variant=\"warning\">\r\n                  <p>Please be aware of the following limitations:</p>\r\n                  <ul className=\"list-disc list-inside mt-2\">\r\n                    <li>Maximum file size: 10MB</li>\r\n                    <li>Supported formats: PNG, JPG, SVG</li>\r\n                  </ul>\r\n                </InfoBox>\r\n                \r\n                <InfoBox \r\n                  title=\"Error Message\" \r\n                  variant=\"error\"\r\n                  infoTooltip={\r\n                    <div>\r\n                      <p className=\"font-bold\">Error Details</p>\r\n                      <p>Status: 403 Forbidden</p>\r\n                      <p>Check API credentials and try again</p>\r\n                    </div>\r\n                  }\r\n                >\r\n                  Unable to connect to the API service. Please check your credentials and network connection.\r\n                </InfoBox>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n          \r\n          {/* Component Integration Demo */}\r\n          <Card title=\"Component Integration Example\" isElevated>\r\n            <div className=\"space-y-6\">\r\n              <p className=\"text-gray-600 dark:text-gray-300\">\r\n                UI components can be easily combined to create rich interfaces.\r\n              </p>\r\n              \r\n              <div className=\"bg-gray-50 dark:bg-gray-800 rounded-lg p-6\">\r\n                <h3 className=\"text-lg font-medium mb-4 flex items-center\">\r\n                  Settings Configuration\r\n                  <Tooltip content=\"Configure your application settings\" position=\"right\">\r\n                    <svg className=\"w-4 h-4 text-gray-400 ml-2 cursor-help\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                    </svg>\r\n                  </Tooltip>\r\n                </h3>\r\n                \r\n                <div className=\"space-y-4\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div>\r\n                      <label className=\"font-medium\">Enable notifications</label>\r\n                      <p className=\"text-sm text-gray-500\">Receive alerts about important updates</p>\r\n                    </div>\r\n                    <div>\r\n                      <button className=\"w-10 h-5 bg-blue-600 rounded-full flex items-center transition-colors focus:outline-none\">\r\n                        <span className=\"w-4 h-4 bg-white rounded-full transform translate-x-5 transition-transform\"></span>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <InfoBox \r\n                    title=\"Beta Feature\" \r\n                    variant=\"warning\"\r\n                    infoTooltip=\"This feature is currently in beta and might change\"\r\n                  >\r\n                    These settings are part of our new control panel which is still in beta testing.\r\n                  </InfoBox>\r\n                  \r\n                  <div className=\"flex justify-end space-x-3\">\r\n                    <Tooltip content=\"Discard all changes\">\r\n                      <button className=\"px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\">\r\n                        Cancel\r\n                      </button>\r\n                    </Tooltip>\r\n                    \r\n                    <Button>Save Settings</Button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        </div>\r\n      </ToolLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ComponentsDemo;"],"names":["durations","Tooltip","children","content","position","size","maxWidth","delay","disabled","showArrow","className","id","enableOnTouch","allowHtml","isVisible","setIsVisible","useState","shouldRender","setShouldRender","timeoutRef","useRef","triggerRef","tooltipRef","showTooltip","hideTooltip","useEffect","getPositionClasses","getSizeClasses","getAnimationClasses","getArrowClasses","touchStartEvents","e","tooltipClasses","arrowClasses","jsxs","jsx","InfoBox","title","variant","infoTooltip","icon","bordered","styles","containerClasses","ComponentsDemo","tool","getToolByRoute","Fragment","Helmet","ToolLayout","Card","Button"],"mappings":"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"}